//
//Copyright Â© 2022 Ci4Rail GmbH <engineering@ci4rail.com>
//
//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.0--rc2
// source: colorLED.proto

package v1alpha1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Color int32

const (
	Color_RED    Color = 0
	Color_GREEN  Color = 1
	Color_BLUE   Color = 2
	Color_WHITE  Color = 3
	Color_YELLOW Color = 4
	Color_CYAN   Color = 5
	Color_PURPLE Color = 6
	Color_OFF    Color = 7
)

// Enum value maps for Color.
var (
	Color_name = map[int32]string{
		0: "RED",
		1: "GREEN",
		2: "BLUE",
		3: "WHITE",
		4: "YELLOW",
		5: "CYAN",
		6: "PURPLE",
		7: "OFF",
	}
	Color_value = map[string]int32{
		"RED":    0,
		"GREEN":  1,
		"BLUE":   2,
		"WHITE":  3,
		"YELLOW": 4,
		"CYAN":   5,
		"PURPLE": 6,
		"OFF":    7,
	}
)

func (x Color) Enum() *Color {
	p := new(Color)
	*p = x
	return p
}

func (x Color) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Color) Descriptor() protoreflect.EnumDescriptor {
	return file_colorLED_proto_enumTypes[0].Descriptor()
}

func (Color) Type() protoreflect.EnumType {
	return &file_colorLED_proto_enumTypes[0]
}

func (x Color) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Color.Descriptor instead.
func (Color) EnumDescriptor() ([]byte, []int) {
	return file_colorLED_proto_rawDescGZIP(), []int{0}
}

// ConfigurationSet to pass to Functionblock.Configuration.functionSpecificConfigurationSet hook
type ConfigurationSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ConfigurationSet) Reset() {
	*x = ConfigurationSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_colorLED_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigurationSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigurationSet) ProtoMessage() {}

func (x *ConfigurationSet) ProtoReflect() protoreflect.Message {
	mi := &file_colorLED_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigurationSet.ProtoReflect.Descriptor instead.
func (*ConfigurationSet) Descriptor() ([]byte, []int) {
	return file_colorLED_proto_rawDescGZIP(), []int{0}
}

// ConfigurationSetResponse to pass to Functionblock.Configuration.functionSpecificConfigurationSetResponse hook
type ConfigurationSetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ConfigurationSetResponse) Reset() {
	*x = ConfigurationSetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_colorLED_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigurationSetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigurationSetResponse) ProtoMessage() {}

func (x *ConfigurationSetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_colorLED_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigurationSetResponse.ProtoReflect.Descriptor instead.
func (*ConfigurationSetResponse) Descriptor() ([]byte, []int) {
	return file_colorLED_proto_rawDescGZIP(), []int{1}
}

// ConfigurationGet to pass to Functionblock.Configuration.functionSpecificConfigurationGet hook
type ConfigurationGet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ConfigurationGet) Reset() {
	*x = ConfigurationGet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_colorLED_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigurationGet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigurationGet) ProtoMessage() {}

func (x *ConfigurationGet) ProtoReflect() protoreflect.Message {
	mi := &file_colorLED_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigurationGet.ProtoReflect.Descriptor instead.
func (*ConfigurationGet) Descriptor() ([]byte, []int) {
	return file_colorLED_proto_rawDescGZIP(), []int{2}
}

// ConfigurationGetResponse to pass to Functionblock.ConfigurationGetResponse.functionSpecificConfigurationGetResponse hook
// Returns the current hardware configuration
type ConfigurationGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ConfigurationGetResponse) Reset() {
	*x = ConfigurationGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_colorLED_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigurationGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigurationGetResponse) ProtoMessage() {}

func (x *ConfigurationGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_colorLED_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigurationGetResponse.ProtoReflect.Descriptor instead.
func (*ConfigurationGetResponse) Descriptor() ([]byte, []int) {
	return file_colorLED_proto_rawDescGZIP(), []int{3}
}

// ConfigurationDescribe to pass to Functionblock.Configuration.functionSpecificConfigurationDescribe hook
type ConfigurationDescribe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ConfigurationDescribe) Reset() {
	*x = ConfigurationDescribe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_colorLED_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigurationDescribe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigurationDescribe) ProtoMessage() {}

func (x *ConfigurationDescribe) ProtoReflect() protoreflect.Message {
	mi := &file_colorLED_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigurationDescribe.ProtoReflect.Descriptor instead.
func (*ConfigurationDescribe) Descriptor() ([]byte, []int) {
	return file_colorLED_proto_rawDescGZIP(), []int{4}
}

type ConfigurationDescribeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Blink bool `protobuf:"varint,2,opt,name=blink,proto3" json:"blink,omitempty"` // if true the channels support blinking
}

func (x *ConfigurationDescribeResponse) Reset() {
	*x = ConfigurationDescribeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_colorLED_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigurationDescribeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigurationDescribeResponse) ProtoMessage() {}

func (x *ConfigurationDescribeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_colorLED_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigurationDescribeResponse.ProtoReflect.Descriptor instead.
func (*ConfigurationDescribeResponse) Descriptor() ([]byte, []int) {
	return file_colorLED_proto_rawDescGZIP(), []int{5}
}

func (x *ConfigurationDescribeResponse) GetBlink() bool {
	if x != nil {
		return x.Blink
	}
	return false
}

// ConfigurationResponse to pass to Functionblock.ConfigurationResponse.functionSpecificConfigurationResponse hook
type ConfigurationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//
	//	*ConfigurationResponse_Get
	//	*ConfigurationResponse_Set
	//	*ConfigurationResponse_Describe
	Type isConfigurationResponse_Type `protobuf_oneof:"type"`
}

func (x *ConfigurationResponse) Reset() {
	*x = ConfigurationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_colorLED_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigurationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigurationResponse) ProtoMessage() {}

func (x *ConfigurationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_colorLED_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigurationResponse.ProtoReflect.Descriptor instead.
func (*ConfigurationResponse) Descriptor() ([]byte, []int) {
	return file_colorLED_proto_rawDescGZIP(), []int{6}
}

func (m *ConfigurationResponse) GetType() isConfigurationResponse_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *ConfigurationResponse) GetGet() *ConfigurationGetResponse {
	if x, ok := x.GetType().(*ConfigurationResponse_Get); ok {
		return x.Get
	}
	return nil
}

func (x *ConfigurationResponse) GetSet() *ConfigurationSetResponse {
	if x, ok := x.GetType().(*ConfigurationResponse_Set); ok {
		return x.Set
	}
	return nil
}

func (x *ConfigurationResponse) GetDescribe() *ConfigurationDescribeResponse {
	if x, ok := x.GetType().(*ConfigurationResponse_Describe); ok {
		return x.Describe
	}
	return nil
}

type isConfigurationResponse_Type interface {
	isConfigurationResponse_Type()
}

type ConfigurationResponse_Get struct {
	Get *ConfigurationGetResponse `protobuf:"bytes,1,opt,name=get,proto3,oneof"`
}

type ConfigurationResponse_Set struct {
	Set *ConfigurationSetResponse `protobuf:"bytes,2,opt,name=set,proto3,oneof"`
}

type ConfigurationResponse_Describe struct {
	Describe *ConfigurationDescribeResponse `protobuf:"bytes,3,opt,name=describe,proto3,oneof"`
}

func (*ConfigurationResponse_Get) isConfigurationResponse_Type() {}

func (*ConfigurationResponse_Set) isConfigurationResponse_Type() {}

func (*ConfigurationResponse_Describe) isConfigurationResponse_Type() {}

// FunctionControlGet to pass to Functionblock.FunctionControl.functionSpecificFunctionControlGet hook
type FunctionControlGet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FunctionControlGet) Reset() {
	*x = FunctionControlGet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_colorLED_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FunctionControlGet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FunctionControlGet) ProtoMessage() {}

func (x *FunctionControlGet) ProtoReflect() protoreflect.Message {
	mi := &file_colorLED_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FunctionControlGet.ProtoReflect.Descriptor instead.
func (*FunctionControlGet) Descriptor() ([]byte, []int) {
	return file_colorLED_proto_rawDescGZIP(), []int{7}
}

// FunctionControlSet to pass to Functionblock.FunctionControl.functionSpecificFunctionControlSet hook
type FunctionControlSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Color Color `protobuf:"varint,1,opt,name=color,proto3,enum=colorLED.Color" json:"color,omitempty"`
	Blink bool  `protobuf:"varint,2,opt,name=blink,proto3" json:"blink,omitempty"` // if true the channel is blinking
}

func (x *FunctionControlSet) Reset() {
	*x = FunctionControlSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_colorLED_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FunctionControlSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FunctionControlSet) ProtoMessage() {}

func (x *FunctionControlSet) ProtoReflect() protoreflect.Message {
	mi := &file_colorLED_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FunctionControlSet.ProtoReflect.Descriptor instead.
func (*FunctionControlSet) Descriptor() ([]byte, []int) {
	return file_colorLED_proto_rawDescGZIP(), []int{8}
}

func (x *FunctionControlSet) GetColor() Color {
	if x != nil {
		return x.Color
	}
	return Color_RED
}

func (x *FunctionControlSet) GetBlink() bool {
	if x != nil {
		return x.Blink
	}
	return false
}

// FunctionControlGetResponse to pass to Functionblock.FunctionControlResponse.functionSpecificControlGet hook
type FunctionControlGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Color Color `protobuf:"varint,1,opt,name=color,proto3,enum=colorLED.Color" json:"color,omitempty"`
	Blink bool  `protobuf:"varint,2,opt,name=blink,proto3" json:"blink,omitempty"` // if true the channel is blinking
}

func (x *FunctionControlGetResponse) Reset() {
	*x = FunctionControlGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_colorLED_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FunctionControlGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FunctionControlGetResponse) ProtoMessage() {}

func (x *FunctionControlGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_colorLED_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FunctionControlGetResponse.ProtoReflect.Descriptor instead.
func (*FunctionControlGetResponse) Descriptor() ([]byte, []int) {
	return file_colorLED_proto_rawDescGZIP(), []int{9}
}

func (x *FunctionControlGetResponse) GetColor() Color {
	if x != nil {
		return x.Color
	}
	return Color_RED
}

func (x *FunctionControlGetResponse) GetBlink() bool {
	if x != nil {
		return x.Blink
	}
	return false
}

// FunctionControlSetResponse to pass to Functionblock.FunctionControlResponse.functionSpecificControlSet hook
type FunctionControlSetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FunctionControlSetResponse) Reset() {
	*x = FunctionControlSetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_colorLED_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FunctionControlSetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FunctionControlSetResponse) ProtoMessage() {}

func (x *FunctionControlSetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_colorLED_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FunctionControlSetResponse.ProtoReflect.Descriptor instead.
func (*FunctionControlSetResponse) Descriptor() ([]byte, []int) {
	return file_colorLED_proto_rawDescGZIP(), []int{10}
}

// ============= StreamControl ==================
// StreamControlStart to pass to Functionblock.StreamControlStart.functionSpecificStreamControlStart hook
type StreamControlStart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StreamControlStart) Reset() {
	*x = StreamControlStart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_colorLED_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamControlStart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamControlStart) ProtoMessage() {}

func (x *StreamControlStart) ProtoReflect() protoreflect.Message {
	mi := &file_colorLED_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamControlStart.ProtoReflect.Descriptor instead.
func (*StreamControlStart) Descriptor() ([]byte, []int) {
	return file_colorLED_proto_rawDescGZIP(), []int{11}
}

// StreamData to pass to Functionblock.StreamData.functionSpecificStreamData hook
type StreamData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StreamData) Reset() {
	*x = StreamData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_colorLED_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamData) ProtoMessage() {}

func (x *StreamData) ProtoReflect() protoreflect.Message {
	mi := &file_colorLED_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamData.ProtoReflect.Descriptor instead.
func (*StreamData) Descriptor() ([]byte, []int) {
	return file_colorLED_proto_rawDescGZIP(), []int{12}
}

var File_colorLED_proto protoreflect.FileDescriptor

var file_colorLED_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x4c, 0x45, 0x44, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x4c, 0x45, 0x44, 0x22, 0x12, 0x0a, 0x10, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x22, 0x1a,
	0x0a, 0x18, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x12, 0x0a, 0x10, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x65, 0x74, 0x22, 0x1a,
	0x0a, 0x18, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x17, 0x0a, 0x15, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x22, 0x35, 0x0a, 0x1d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x62, 0x6c, 0x69, 0x6e, 0x6b, 0x22, 0xd6, 0x01, 0x0a, 0x15, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x03, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x4c, 0x45, 0x44, 0x2e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x03, 0x67, 0x65, 0x74, 0x12, 0x36, 0x0a, 0x03,
	0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x4c, 0x45, 0x44, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52,
	0x03, 0x73, 0x65, 0x74, 0x12, 0x45, 0x0a, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x4c, 0x45,
	0x44, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48,
	0x00, 0x52, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x22, 0x14, 0x0a, 0x12, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x47, 0x65, 0x74, 0x22, 0x51, 0x0a, 0x12, 0x46, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x65, 0x74, 0x12,
	0x25, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f,
	0x2e, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x4c, 0x45, 0x44, 0x2e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52,
	0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x6c, 0x69, 0x6e, 0x6b, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x62, 0x6c, 0x69, 0x6e, 0x6b, 0x22, 0x59, 0x0a, 0x1a,
	0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x63, 0x6f,
	0x6c, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x4c, 0x45, 0x44, 0x2e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x62, 0x6c, 0x69, 0x6e, 0x6b, 0x22, 0x1c, 0x0a, 0x1a, 0x46, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x14, 0x0a, 0x12, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x74, 0x61, 0x72, 0x74, 0x22, 0x0c, 0x0a, 0x0a, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x2a, 0x5b, 0x0a, 0x05, 0x43, 0x6f, 0x6c,
	0x6f, 0x72, 0x12, 0x07, 0x0a, 0x03, 0x52, 0x45, 0x44, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x47,
	0x52, 0x45, 0x45, 0x4e, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x42, 0x4c, 0x55, 0x45, 0x10, 0x02,
	0x12, 0x09, 0x0a, 0x05, 0x57, 0x48, 0x49, 0x54, 0x45, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x59,
	0x45, 0x4c, 0x4c, 0x4f, 0x57, 0x10, 0x04, 0x12, 0x08, 0x0a, 0x04, 0x43, 0x59, 0x41, 0x4e, 0x10,
	0x05, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x55, 0x52, 0x50, 0x4c, 0x45, 0x10, 0x06, 0x12, 0x07, 0x0a,
	0x03, 0x4f, 0x46, 0x46, 0x10, 0x07, 0x42, 0x13, 0x5a, 0x11, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x4c,
	0x45, 0x44, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_colorLED_proto_rawDescOnce sync.Once
	file_colorLED_proto_rawDescData = file_colorLED_proto_rawDesc
)

func file_colorLED_proto_rawDescGZIP() []byte {
	file_colorLED_proto_rawDescOnce.Do(func() {
		file_colorLED_proto_rawDescData = protoimpl.X.CompressGZIP(file_colorLED_proto_rawDescData)
	})
	return file_colorLED_proto_rawDescData
}

var file_colorLED_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_colorLED_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_colorLED_proto_goTypes = []interface{}{
	(Color)(0),                            // 0: colorLED.Color
	(*ConfigurationSet)(nil),              // 1: colorLED.ConfigurationSet
	(*ConfigurationSetResponse)(nil),      // 2: colorLED.ConfigurationSetResponse
	(*ConfigurationGet)(nil),              // 3: colorLED.ConfigurationGet
	(*ConfigurationGetResponse)(nil),      // 4: colorLED.ConfigurationGetResponse
	(*ConfigurationDescribe)(nil),         // 5: colorLED.ConfigurationDescribe
	(*ConfigurationDescribeResponse)(nil), // 6: colorLED.ConfigurationDescribeResponse
	(*ConfigurationResponse)(nil),         // 7: colorLED.ConfigurationResponse
	(*FunctionControlGet)(nil),            // 8: colorLED.FunctionControlGet
	(*FunctionControlSet)(nil),            // 9: colorLED.FunctionControlSet
	(*FunctionControlGetResponse)(nil),    // 10: colorLED.FunctionControlGetResponse
	(*FunctionControlSetResponse)(nil),    // 11: colorLED.FunctionControlSetResponse
	(*StreamControlStart)(nil),            // 12: colorLED.StreamControlStart
	(*StreamData)(nil),                    // 13: colorLED.StreamData
}
var file_colorLED_proto_depIdxs = []int32{
	4, // 0: colorLED.ConfigurationResponse.get:type_name -> colorLED.ConfigurationGetResponse
	2, // 1: colorLED.ConfigurationResponse.set:type_name -> colorLED.ConfigurationSetResponse
	6, // 2: colorLED.ConfigurationResponse.describe:type_name -> colorLED.ConfigurationDescribeResponse
	0, // 3: colorLED.FunctionControlSet.color:type_name -> colorLED.Color
	0, // 4: colorLED.FunctionControlGetResponse.color:type_name -> colorLED.Color
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_colorLED_proto_init() }
func file_colorLED_proto_init() {
	if File_colorLED_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_colorLED_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigurationSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_colorLED_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigurationSetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_colorLED_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigurationGet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_colorLED_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigurationGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_colorLED_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigurationDescribe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_colorLED_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigurationDescribeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_colorLED_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigurationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_colorLED_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FunctionControlGet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_colorLED_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FunctionControlSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_colorLED_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FunctionControlGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_colorLED_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FunctionControlSetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_colorLED_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamControlStart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_colorLED_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_colorLED_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*ConfigurationResponse_Get)(nil),
		(*ConfigurationResponse_Set)(nil),
		(*ConfigurationResponse_Describe)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_colorLED_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_colorLED_proto_goTypes,
		DependencyIndexes: file_colorLED_proto_depIdxs,
		EnumInfos:         file_colorLED_proto_enumTypes,
		MessageInfos:      file_colorLED_proto_msgTypes,
	}.Build()
	File_colorLED_proto = out.File
	file_colorLED_proto_rawDesc = nil
	file_colorLED_proto_goTypes = nil
	file_colorLED_proto_depIdxs = nil
}
