/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: colorLED.proto */

#ifndef PROTOBUF_C_colorLED_2eproto__INCLUDED
#define PROTOBUF_C_colorLED_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003003 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _ColorLED__ConfigurationSet ColorLED__ConfigurationSet;
typedef struct _ColorLED__ConfigurationSetResponse ColorLED__ConfigurationSetResponse;
typedef struct _ColorLED__ConfigurationGet ColorLED__ConfigurationGet;
typedef struct _ColorLED__ConfigurationGetResponse ColorLED__ConfigurationGetResponse;
typedef struct _ColorLED__ConfigurationDescribe ColorLED__ConfigurationDescribe;
typedef struct _ColorLED__ConfigurationDescribeResponse ColorLED__ConfigurationDescribeResponse;
typedef struct _ColorLED__ConfigurationResponse ColorLED__ConfigurationResponse;
typedef struct _ColorLED__FunctionControlGet ColorLED__FunctionControlGet;
typedef struct _ColorLED__FunctionControlSet ColorLED__FunctionControlSet;
typedef struct _ColorLED__FunctionControlGetResponse ColorLED__FunctionControlGetResponse;
typedef struct _ColorLED__FunctionControlSetResponse ColorLED__FunctionControlSetResponse;
typedef struct _ColorLED__StreamControlStart ColorLED__StreamControlStart;
typedef struct _ColorLED__StreamData ColorLED__StreamData;


/* --- enums --- */

typedef enum _ColorLED__Color {
  COLOR_LED__COLOR__COLOR_RED = 0,
  COLOR_LED__COLOR__COLOR_GREEN = 1,
  COLOR_LED__COLOR__COLOR_BLUE = 2,
  COLOR_LED__COLOR__COLOR_WHITE = 3,
  COLOR_LED__COLOR__COLOR_YELLOW = 4,
  COLOR_LED__COLOR__COLOR_CYAN = 5,
  COLOR_LED__COLOR__COLOR_PURPLE = 6,
  COLOR_LED__COLOR__COLOR_OFF = 7
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(COLOR_LED__COLOR)
} ColorLED__Color;

/* --- messages --- */

/*
 * ConfigurationSet to pass to Functionblock.Configuration.functionSpecificConfigurationSet hook
 */
struct  _ColorLED__ConfigurationSet
{
  ProtobufCMessage base;
};
#define COLOR_LED__CONFIGURATION_SET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&color_led__configuration_set__descriptor) \
     }


/*
 * ConfigurationSetResponse to pass to Functionblock.Configuration.functionSpecificConfigurationSetResponse hook
 */
struct  _ColorLED__ConfigurationSetResponse
{
  ProtobufCMessage base;
};
#define COLOR_LED__CONFIGURATION_SET_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&color_led__configuration_set_response__descriptor) \
     }


/*
 * ConfigurationGet to pass to Functionblock.Configuration.functionSpecificConfigurationGet hook
 */
struct  _ColorLED__ConfigurationGet
{
  ProtobufCMessage base;
};
#define COLOR_LED__CONFIGURATION_GET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&color_led__configuration_get__descriptor) \
     }


/*
 * ConfigurationGetResponse to pass to Functionblock.ConfigurationGetResponse.functionSpecificConfigurationGetResponse hook
 * Returns the current hardware configuration
 */
struct  _ColorLED__ConfigurationGetResponse
{
  ProtobufCMessage base;
};
#define COLOR_LED__CONFIGURATION_GET_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&color_led__configuration_get_response__descriptor) \
     }


/*
 * ConfigurationDescribe to pass to Functionblock.Configuration.functionSpecificConfigurationDescribe hook
 */
struct  _ColorLED__ConfigurationDescribe
{
  ProtobufCMessage base;
};
#define COLOR_LED__CONFIGURATION_DESCRIBE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&color_led__configuration_describe__descriptor) \
     }


struct  _ColorLED__ConfigurationDescribeResponse
{
  ProtobufCMessage base;
  /*
   * if true the channels support blinking
   */
  protobuf_c_boolean blink;
};
#define COLOR_LED__CONFIGURATION_DESCRIBE_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&color_led__configuration_describe_response__descriptor) \
    , 0 }


typedef enum {
  COLOR_LED__CONFIGURATION_RESPONSE__TYPE__NOT_SET = 0,
  COLOR_LED__CONFIGURATION_RESPONSE__TYPE_GET = 1,
  COLOR_LED__CONFIGURATION_RESPONSE__TYPE_SET = 2,
  COLOR_LED__CONFIGURATION_RESPONSE__TYPE_DESCRIBE = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(COLOR_LED__CONFIGURATION_RESPONSE__TYPE)
} ColorLED__ConfigurationResponse__TypeCase;

/*
 * ConfigurationResponse to pass to Functionblock.ConfigurationResponse.functionSpecificConfigurationResponse hook
 */
struct  _ColorLED__ConfigurationResponse
{
  ProtobufCMessage base;
  ColorLED__ConfigurationResponse__TypeCase type_case;
  union {
    ColorLED__ConfigurationGetResponse *get;
    ColorLED__ConfigurationSetResponse *set;
    ColorLED__ConfigurationDescribeResponse *describe;
  };
};
#define COLOR_LED__CONFIGURATION_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&color_led__configuration_response__descriptor) \
    , COLOR_LED__CONFIGURATION_RESPONSE__TYPE__NOT_SET, {0} }


/*
 * FunctionControlGet to pass to Functionblock.FunctionControl.functionSpecificFunctionControlGet hook
 */
struct  _ColorLED__FunctionControlGet
{
  ProtobufCMessage base;
};
#define COLOR_LED__FUNCTION_CONTROL_GET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&color_led__function_control_get__descriptor) \
     }


/*
 * FunctionControlSet to pass to Functionblock.FunctionControl.functionSpecificFunctionControlSet hook
 */
struct  _ColorLED__FunctionControlSet
{
  ProtobufCMessage base;
  ColorLED__Color color;
  /*
   * if true the channel is blinking
   */
  protobuf_c_boolean blink;
};
#define COLOR_LED__FUNCTION_CONTROL_SET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&color_led__function_control_set__descriptor) \
    , COLOR_LED__COLOR__COLOR_RED, 0 }


/*
 * FunctionControlGetResponse to pass to Functionblock.FunctionControlResponse.functionSpecificControlGet hook
 */
struct  _ColorLED__FunctionControlGetResponse
{
  ProtobufCMessage base;
  ColorLED__Color color;
  /*
   * if true the channel is blinking
   */
  protobuf_c_boolean blink;
};
#define COLOR_LED__FUNCTION_CONTROL_GET_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&color_led__function_control_get_response__descriptor) \
    , COLOR_LED__COLOR__COLOR_RED, 0 }


/*
 * FunctionControlSetResponse to pass to Functionblock.FunctionControlResponse.functionSpecificControlSet hook
 */
struct  _ColorLED__FunctionControlSetResponse
{
  ProtobufCMessage base;
};
#define COLOR_LED__FUNCTION_CONTROL_SET_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&color_led__function_control_set_response__descriptor) \
     }


/*
 * ============= StreamControl ==================
 * StreamControlStart to pass to Functionblock.StreamControlStart.functionSpecificStreamControlStart hook
 */
struct  _ColorLED__StreamControlStart
{
  ProtobufCMessage base;
};
#define COLOR_LED__STREAM_CONTROL_START__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&color_led__stream_control_start__descriptor) \
     }


/*
 * StreamData to pass to Functionblock.StreamData.functionSpecificStreamData hook
 */
struct  _ColorLED__StreamData
{
  ProtobufCMessage base;
};
#define COLOR_LED__STREAM_DATA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&color_led__stream_data__descriptor) \
     }


/* ColorLED__ConfigurationSet methods */
void   color_led__configuration_set__init
                     (ColorLED__ConfigurationSet         *message);
size_t color_led__configuration_set__get_packed_size
                     (const ColorLED__ConfigurationSet   *message);
size_t color_led__configuration_set__pack
                     (const ColorLED__ConfigurationSet   *message,
                      uint8_t             *out);
size_t color_led__configuration_set__pack_to_buffer
                     (const ColorLED__ConfigurationSet   *message,
                      ProtobufCBuffer     *buffer);
ColorLED__ConfigurationSet *
       color_led__configuration_set__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   color_led__configuration_set__free_unpacked
                     (ColorLED__ConfigurationSet *message,
                      ProtobufCAllocator *allocator);
/* ColorLED__ConfigurationSetResponse methods */
void   color_led__configuration_set_response__init
                     (ColorLED__ConfigurationSetResponse         *message);
size_t color_led__configuration_set_response__get_packed_size
                     (const ColorLED__ConfigurationSetResponse   *message);
size_t color_led__configuration_set_response__pack
                     (const ColorLED__ConfigurationSetResponse   *message,
                      uint8_t             *out);
size_t color_led__configuration_set_response__pack_to_buffer
                     (const ColorLED__ConfigurationSetResponse   *message,
                      ProtobufCBuffer     *buffer);
ColorLED__ConfigurationSetResponse *
       color_led__configuration_set_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   color_led__configuration_set_response__free_unpacked
                     (ColorLED__ConfigurationSetResponse *message,
                      ProtobufCAllocator *allocator);
/* ColorLED__ConfigurationGet methods */
void   color_led__configuration_get__init
                     (ColorLED__ConfigurationGet         *message);
size_t color_led__configuration_get__get_packed_size
                     (const ColorLED__ConfigurationGet   *message);
size_t color_led__configuration_get__pack
                     (const ColorLED__ConfigurationGet   *message,
                      uint8_t             *out);
size_t color_led__configuration_get__pack_to_buffer
                     (const ColorLED__ConfigurationGet   *message,
                      ProtobufCBuffer     *buffer);
ColorLED__ConfigurationGet *
       color_led__configuration_get__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   color_led__configuration_get__free_unpacked
                     (ColorLED__ConfigurationGet *message,
                      ProtobufCAllocator *allocator);
/* ColorLED__ConfigurationGetResponse methods */
void   color_led__configuration_get_response__init
                     (ColorLED__ConfigurationGetResponse         *message);
size_t color_led__configuration_get_response__get_packed_size
                     (const ColorLED__ConfigurationGetResponse   *message);
size_t color_led__configuration_get_response__pack
                     (const ColorLED__ConfigurationGetResponse   *message,
                      uint8_t             *out);
size_t color_led__configuration_get_response__pack_to_buffer
                     (const ColorLED__ConfigurationGetResponse   *message,
                      ProtobufCBuffer     *buffer);
ColorLED__ConfigurationGetResponse *
       color_led__configuration_get_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   color_led__configuration_get_response__free_unpacked
                     (ColorLED__ConfigurationGetResponse *message,
                      ProtobufCAllocator *allocator);
/* ColorLED__ConfigurationDescribe methods */
void   color_led__configuration_describe__init
                     (ColorLED__ConfigurationDescribe         *message);
size_t color_led__configuration_describe__get_packed_size
                     (const ColorLED__ConfigurationDescribe   *message);
size_t color_led__configuration_describe__pack
                     (const ColorLED__ConfigurationDescribe   *message,
                      uint8_t             *out);
size_t color_led__configuration_describe__pack_to_buffer
                     (const ColorLED__ConfigurationDescribe   *message,
                      ProtobufCBuffer     *buffer);
ColorLED__ConfigurationDescribe *
       color_led__configuration_describe__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   color_led__configuration_describe__free_unpacked
                     (ColorLED__ConfigurationDescribe *message,
                      ProtobufCAllocator *allocator);
/* ColorLED__ConfigurationDescribeResponse methods */
void   color_led__configuration_describe_response__init
                     (ColorLED__ConfigurationDescribeResponse         *message);
size_t color_led__configuration_describe_response__get_packed_size
                     (const ColorLED__ConfigurationDescribeResponse   *message);
size_t color_led__configuration_describe_response__pack
                     (const ColorLED__ConfigurationDescribeResponse   *message,
                      uint8_t             *out);
size_t color_led__configuration_describe_response__pack_to_buffer
                     (const ColorLED__ConfigurationDescribeResponse   *message,
                      ProtobufCBuffer     *buffer);
ColorLED__ConfigurationDescribeResponse *
       color_led__configuration_describe_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   color_led__configuration_describe_response__free_unpacked
                     (ColorLED__ConfigurationDescribeResponse *message,
                      ProtobufCAllocator *allocator);
/* ColorLED__ConfigurationResponse methods */
void   color_led__configuration_response__init
                     (ColorLED__ConfigurationResponse         *message);
size_t color_led__configuration_response__get_packed_size
                     (const ColorLED__ConfigurationResponse   *message);
size_t color_led__configuration_response__pack
                     (const ColorLED__ConfigurationResponse   *message,
                      uint8_t             *out);
size_t color_led__configuration_response__pack_to_buffer
                     (const ColorLED__ConfigurationResponse   *message,
                      ProtobufCBuffer     *buffer);
ColorLED__ConfigurationResponse *
       color_led__configuration_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   color_led__configuration_response__free_unpacked
                     (ColorLED__ConfigurationResponse *message,
                      ProtobufCAllocator *allocator);
/* ColorLED__FunctionControlGet methods */
void   color_led__function_control_get__init
                     (ColorLED__FunctionControlGet         *message);
size_t color_led__function_control_get__get_packed_size
                     (const ColorLED__FunctionControlGet   *message);
size_t color_led__function_control_get__pack
                     (const ColorLED__FunctionControlGet   *message,
                      uint8_t             *out);
size_t color_led__function_control_get__pack_to_buffer
                     (const ColorLED__FunctionControlGet   *message,
                      ProtobufCBuffer     *buffer);
ColorLED__FunctionControlGet *
       color_led__function_control_get__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   color_led__function_control_get__free_unpacked
                     (ColorLED__FunctionControlGet *message,
                      ProtobufCAllocator *allocator);
/* ColorLED__FunctionControlSet methods */
void   color_led__function_control_set__init
                     (ColorLED__FunctionControlSet         *message);
size_t color_led__function_control_set__get_packed_size
                     (const ColorLED__FunctionControlSet   *message);
size_t color_led__function_control_set__pack
                     (const ColorLED__FunctionControlSet   *message,
                      uint8_t             *out);
size_t color_led__function_control_set__pack_to_buffer
                     (const ColorLED__FunctionControlSet   *message,
                      ProtobufCBuffer     *buffer);
ColorLED__FunctionControlSet *
       color_led__function_control_set__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   color_led__function_control_set__free_unpacked
                     (ColorLED__FunctionControlSet *message,
                      ProtobufCAllocator *allocator);
/* ColorLED__FunctionControlGetResponse methods */
void   color_led__function_control_get_response__init
                     (ColorLED__FunctionControlGetResponse         *message);
size_t color_led__function_control_get_response__get_packed_size
                     (const ColorLED__FunctionControlGetResponse   *message);
size_t color_led__function_control_get_response__pack
                     (const ColorLED__FunctionControlGetResponse   *message,
                      uint8_t             *out);
size_t color_led__function_control_get_response__pack_to_buffer
                     (const ColorLED__FunctionControlGetResponse   *message,
                      ProtobufCBuffer     *buffer);
ColorLED__FunctionControlGetResponse *
       color_led__function_control_get_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   color_led__function_control_get_response__free_unpacked
                     (ColorLED__FunctionControlGetResponse *message,
                      ProtobufCAllocator *allocator);
/* ColorLED__FunctionControlSetResponse methods */
void   color_led__function_control_set_response__init
                     (ColorLED__FunctionControlSetResponse         *message);
size_t color_led__function_control_set_response__get_packed_size
                     (const ColorLED__FunctionControlSetResponse   *message);
size_t color_led__function_control_set_response__pack
                     (const ColorLED__FunctionControlSetResponse   *message,
                      uint8_t             *out);
size_t color_led__function_control_set_response__pack_to_buffer
                     (const ColorLED__FunctionControlSetResponse   *message,
                      ProtobufCBuffer     *buffer);
ColorLED__FunctionControlSetResponse *
       color_led__function_control_set_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   color_led__function_control_set_response__free_unpacked
                     (ColorLED__FunctionControlSetResponse *message,
                      ProtobufCAllocator *allocator);
/* ColorLED__StreamControlStart methods */
void   color_led__stream_control_start__init
                     (ColorLED__StreamControlStart         *message);
size_t color_led__stream_control_start__get_packed_size
                     (const ColorLED__StreamControlStart   *message);
size_t color_led__stream_control_start__pack
                     (const ColorLED__StreamControlStart   *message,
                      uint8_t             *out);
size_t color_led__stream_control_start__pack_to_buffer
                     (const ColorLED__StreamControlStart   *message,
                      ProtobufCBuffer     *buffer);
ColorLED__StreamControlStart *
       color_led__stream_control_start__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   color_led__stream_control_start__free_unpacked
                     (ColorLED__StreamControlStart *message,
                      ProtobufCAllocator *allocator);
/* ColorLED__StreamData methods */
void   color_led__stream_data__init
                     (ColorLED__StreamData         *message);
size_t color_led__stream_data__get_packed_size
                     (const ColorLED__StreamData   *message);
size_t color_led__stream_data__pack
                     (const ColorLED__StreamData   *message,
                      uint8_t             *out);
size_t color_led__stream_data__pack_to_buffer
                     (const ColorLED__StreamData   *message,
                      ProtobufCBuffer     *buffer);
ColorLED__StreamData *
       color_led__stream_data__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   color_led__stream_data__free_unpacked
                     (ColorLED__StreamData *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*ColorLED__ConfigurationSet_Closure)
                 (const ColorLED__ConfigurationSet *message,
                  void *closure_data);
typedef void (*ColorLED__ConfigurationSetResponse_Closure)
                 (const ColorLED__ConfigurationSetResponse *message,
                  void *closure_data);
typedef void (*ColorLED__ConfigurationGet_Closure)
                 (const ColorLED__ConfigurationGet *message,
                  void *closure_data);
typedef void (*ColorLED__ConfigurationGetResponse_Closure)
                 (const ColorLED__ConfigurationGetResponse *message,
                  void *closure_data);
typedef void (*ColorLED__ConfigurationDescribe_Closure)
                 (const ColorLED__ConfigurationDescribe *message,
                  void *closure_data);
typedef void (*ColorLED__ConfigurationDescribeResponse_Closure)
                 (const ColorLED__ConfigurationDescribeResponse *message,
                  void *closure_data);
typedef void (*ColorLED__ConfigurationResponse_Closure)
                 (const ColorLED__ConfigurationResponse *message,
                  void *closure_data);
typedef void (*ColorLED__FunctionControlGet_Closure)
                 (const ColorLED__FunctionControlGet *message,
                  void *closure_data);
typedef void (*ColorLED__FunctionControlSet_Closure)
                 (const ColorLED__FunctionControlSet *message,
                  void *closure_data);
typedef void (*ColorLED__FunctionControlGetResponse_Closure)
                 (const ColorLED__FunctionControlGetResponse *message,
                  void *closure_data);
typedef void (*ColorLED__FunctionControlSetResponse_Closure)
                 (const ColorLED__FunctionControlSetResponse *message,
                  void *closure_data);
typedef void (*ColorLED__StreamControlStart_Closure)
                 (const ColorLED__StreamControlStart *message,
                  void *closure_data);
typedef void (*ColorLED__StreamData_Closure)
                 (const ColorLED__StreamData *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    color_led__color__descriptor;
extern const ProtobufCMessageDescriptor color_led__configuration_set__descriptor;
extern const ProtobufCMessageDescriptor color_led__configuration_set_response__descriptor;
extern const ProtobufCMessageDescriptor color_led__configuration_get__descriptor;
extern const ProtobufCMessageDescriptor color_led__configuration_get_response__descriptor;
extern const ProtobufCMessageDescriptor color_led__configuration_describe__descriptor;
extern const ProtobufCMessageDescriptor color_led__configuration_describe_response__descriptor;
extern const ProtobufCMessageDescriptor color_led__configuration_response__descriptor;
extern const ProtobufCMessageDescriptor color_led__function_control_get__descriptor;
extern const ProtobufCMessageDescriptor color_led__function_control_set__descriptor;
extern const ProtobufCMessageDescriptor color_led__function_control_get_response__descriptor;
extern const ProtobufCMessageDescriptor color_led__function_control_set_response__descriptor;
extern const ProtobufCMessageDescriptor color_led__stream_control_start__descriptor;
extern const ProtobufCMessageDescriptor color_led__stream_data__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_colorLED_2eproto__INCLUDED */
