//
//Copyright Â© 2025 Ci4Rail GmbH <engineering@ci4rail.com>
//
//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.0--rc2
// source: analogInTypeB.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ChannelConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// channel number (0..n)
	Channel int32 `protobuf:"varint,1,opt,name=channel,proto3" json:"channel,omitempty"`
	// sample rate in [Hz].
	SampleRate float32 `protobuf:"fixed32,2,opt,name=sample_rate,json=sampleRate,proto3" json:"sample_rate,omitempty"`
	// gain (e.g. 1,2,4,8)
	Gain int32 `protobuf:"varint,3,opt,name=gain,proto3" json:"gain,omitempty"`
}

func (x *ChannelConfig) Reset() {
	*x = ChannelConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analogInTypeB_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelConfig) ProtoMessage() {}

func (x *ChannelConfig) ProtoReflect() protoreflect.Message {
	mi := &file_analogInTypeB_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelConfig.ProtoReflect.Descriptor instead.
func (*ChannelConfig) Descriptor() ([]byte, []int) {
	return file_analogInTypeB_proto_rawDescGZIP(), []int{0}
}

func (x *ChannelConfig) GetChannel() int32 {
	if x != nil {
		return x.Channel
	}
	return 0
}

func (x *ChannelConfig) GetSampleRate() float32 {
	if x != nil {
		return x.SampleRate
	}
	return 0
}

func (x *ChannelConfig) GetGain() int32 {
	if x != nil {
		return x.Gain
	}
	return 0
}

// A channelgroup specification describes a group of channels that belong together
// i.e. they share the same sample rates
type ChannelGroupSpecification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// channels belonging to that group (0..n)
	Channels []int32 `protobuf:"varint,1,rep,packed,name=channels,proto3" json:"channels,omitempty"`
	// supported sample rates for that group in [Hz]
	SupportedSampleRates []float32 `protobuf:"fixed32,2,rep,packed,name=supported_sample_rates,json=supportedSampleRates,proto3" json:"supported_sample_rates,omitempty"`
	// supported gains for that group (e.g. 1,2,4,8)
	SupportedGains []int32 `protobuf:"varint,3,rep,packed,name=supported_gains,json=supportedGains,proto3" json:"supported_gains,omitempty"`
}

func (x *ChannelGroupSpecification) Reset() {
	*x = ChannelGroupSpecification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analogInTypeB_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelGroupSpecification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelGroupSpecification) ProtoMessage() {}

func (x *ChannelGroupSpecification) ProtoReflect() protoreflect.Message {
	mi := &file_analogInTypeB_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelGroupSpecification.ProtoReflect.Descriptor instead.
func (*ChannelGroupSpecification) Descriptor() ([]byte, []int) {
	return file_analogInTypeB_proto_rawDescGZIP(), []int{1}
}

func (x *ChannelGroupSpecification) GetChannels() []int32 {
	if x != nil {
		return x.Channels
	}
	return nil
}

func (x *ChannelGroupSpecification) GetSupportedSampleRates() []float32 {
	if x != nil {
		return x.SupportedSampleRates
	}
	return nil
}

func (x *ChannelGroupSpecification) GetSupportedGains() []int32 {
	if x != nil {
		return x.SupportedGains
	}
	return nil
}

type ConfigurationSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// per channel configuration (one per channel). The channel number is part of each ChannelConfig entry.
	// missing channels remain unchanged
	ChannelConfig []*ChannelConfig `protobuf:"bytes,1,rep,name=channelConfig,proto3" json:"channelConfig,omitempty"`
}

func (x *ConfigurationSet) Reset() {
	*x = ConfigurationSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analogInTypeB_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigurationSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigurationSet) ProtoMessage() {}

func (x *ConfigurationSet) ProtoReflect() protoreflect.Message {
	mi := &file_analogInTypeB_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigurationSet.ProtoReflect.Descriptor instead.
func (*ConfigurationSet) Descriptor() ([]byte, []int) {
	return file_analogInTypeB_proto_rawDescGZIP(), []int{2}
}

func (x *ConfigurationSet) GetChannelConfig() []*ChannelConfig {
	if x != nil {
		return x.ChannelConfig
	}
	return nil
}

type ConfigurationSetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ConfigurationSetResponse) Reset() {
	*x = ConfigurationSetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analogInTypeB_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigurationSetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigurationSetResponse) ProtoMessage() {}

func (x *ConfigurationSetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_analogInTypeB_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigurationSetResponse.ProtoReflect.Descriptor instead.
func (*ConfigurationSetResponse) Descriptor() ([]byte, []int) {
	return file_analogInTypeB_proto_rawDescGZIP(), []int{3}
}

type ConfigurationGet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ConfigurationGet) Reset() {
	*x = ConfigurationGet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analogInTypeB_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigurationGet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigurationGet) ProtoMessage() {}

func (x *ConfigurationGet) ProtoReflect() protoreflect.Message {
	mi := &file_analogInTypeB_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigurationGet.ProtoReflect.Descriptor instead.
func (*ConfigurationGet) Descriptor() ([]byte, []int) {
	return file_analogInTypeB_proto_rawDescGZIP(), []int{4}
}

// Returns the current hardware configuration
type ConfigurationGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// per channel configuration (one per channel). The channel number is part of each ChannelConfig entry.
	ChannelConfig []*ChannelConfig `protobuf:"bytes,1,rep,name=channelConfig,proto3" json:"channelConfig,omitempty"`
}

func (x *ConfigurationGetResponse) Reset() {
	*x = ConfigurationGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analogInTypeB_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigurationGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigurationGetResponse) ProtoMessage() {}

func (x *ConfigurationGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_analogInTypeB_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigurationGetResponse.ProtoReflect.Descriptor instead.
func (*ConfigurationGetResponse) Descriptor() ([]byte, []int) {
	return file_analogInTypeB_proto_rawDescGZIP(), []int{5}
}

func (x *ConfigurationGetResponse) GetChannelConfig() []*ChannelConfig {
	if x != nil {
		return x.ChannelConfig
	}
	return nil
}

type ConfigurationDescribe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ConfigurationDescribe) Reset() {
	*x = ConfigurationDescribe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analogInTypeB_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigurationDescribe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigurationDescribe) ProtoMessage() {}

func (x *ConfigurationDescribe) ProtoReflect() protoreflect.Message {
	mi := &file_analogInTypeB_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigurationDescribe.ProtoReflect.Descriptor instead.
func (*ConfigurationDescribe) Descriptor() ([]byte, []int) {
	return file_analogInTypeB_proto_rawDescGZIP(), []int{6}
}

type ConfigurationDescribeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelSpecification []*ChannelGroupSpecification `protobuf:"bytes,1,rep,name=channelSpecification,proto3" json:"channelSpecification,omitempty"`
}

func (x *ConfigurationDescribeResponse) Reset() {
	*x = ConfigurationDescribeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analogInTypeB_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigurationDescribeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigurationDescribeResponse) ProtoMessage() {}

func (x *ConfigurationDescribeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_analogInTypeB_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigurationDescribeResponse.ProtoReflect.Descriptor instead.
func (*ConfigurationDescribeResponse) Descriptor() ([]byte, []int) {
	return file_analogInTypeB_proto_rawDescGZIP(), []int{7}
}

func (x *ConfigurationDescribeResponse) GetChannelSpecification() []*ChannelGroupSpecification {
	if x != nil {
		return x.ChannelSpecification
	}
	return nil
}

type FunctionControlGet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FunctionControlGet) Reset() {
	*x = FunctionControlGet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analogInTypeB_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FunctionControlGet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FunctionControlGet) ProtoMessage() {}

func (x *FunctionControlGet) ProtoReflect() protoreflect.Message {
	mi := &file_analogInTypeB_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FunctionControlGet.ProtoReflect.Descriptor instead.
func (*FunctionControlGet) Descriptor() ([]byte, []int) {
	return file_analogInTypeB_proto_rawDescGZIP(), []int{8}
}

type FunctionControlSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FunctionControlSet) Reset() {
	*x = FunctionControlSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analogInTypeB_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FunctionControlSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FunctionControlSet) ProtoMessage() {}

func (x *FunctionControlSet) ProtoReflect() protoreflect.Message {
	mi := &file_analogInTypeB_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FunctionControlSet.ProtoReflect.Descriptor instead.
func (*FunctionControlSet) Descriptor() ([]byte, []int) {
	return file_analogInTypeB_proto_rawDescGZIP(), []int{9}
}

type FunctionControlGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// one value per channel, channel number is implicit by position in array
	Value []float32 `protobuf:"fixed32,1,rep,packed,name=value,proto3" json:"value,omitempty"`
}

func (x *FunctionControlGetResponse) Reset() {
	*x = FunctionControlGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analogInTypeB_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FunctionControlGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FunctionControlGetResponse) ProtoMessage() {}

func (x *FunctionControlGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_analogInTypeB_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FunctionControlGetResponse.ProtoReflect.Descriptor instead.
func (*FunctionControlGetResponse) Descriptor() ([]byte, []int) {
	return file_analogInTypeB_proto_rawDescGZIP(), []int{10}
}

func (x *FunctionControlGetResponse) GetValue() []float32 {
	if x != nil {
		return x.Value
	}
	return nil
}

type FunctionControlSetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FunctionControlSetResponse) Reset() {
	*x = FunctionControlSetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analogInTypeB_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FunctionControlSetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FunctionControlSetResponse) ProtoMessage() {}

func (x *FunctionControlSetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_analogInTypeB_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FunctionControlSetResponse.ProtoReflect.Descriptor instead.
func (*FunctionControlSetResponse) Descriptor() ([]byte, []int) {
	return file_analogInTypeB_proto_rawDescGZIP(), []int{11}
}

// ============= StreamControl ==================
type StreamControlStart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// which channels to include in the stream. LSB is channel 0, 1: include, 0: exclude
	ChannelMask uint32 `protobuf:"fixed32,1,opt,name=channelMask,proto3" json:"channelMask,omitempty"`
}

func (x *StreamControlStart) Reset() {
	*x = StreamControlStart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analogInTypeB_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamControlStart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamControlStart) ProtoMessage() {}

func (x *StreamControlStart) ProtoReflect() protoreflect.Message {
	mi := &file_analogInTypeB_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamControlStart.ProtoReflect.Descriptor instead.
func (*StreamControlStart) Descriptor() ([]byte, []int) {
	return file_analogInTypeB_proto_rawDescGZIP(), []int{12}
}

func (x *StreamControlStart) GetChannelMask() uint32 {
	if x != nil {
		return x.ChannelMask
	}
	return 0
}

// a Sample contains samples for one or more channels taken at the same time
type Sample struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Timestamp for that specific channels sample. This is the time the sample was taken.
	// This timestamp is in microseconds since the start of the device and does not get synchronized with the clients time.
	Timestamp uint64 `protobuf:"fixed64,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Specifies the analog input channel number 0..n to which the value belongs
	BaseChannel int32 `protobuf:"varint,2,opt,name=baseChannel,proto3" json:"baseChannel,omitempty"`
	// Specifies the analog input channel value
	Value []float32 `protobuf:"fixed32,3,rep,packed,name=value,proto3" json:"value,omitempty"`
}

func (x *Sample) Reset() {
	*x = Sample{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analogInTypeB_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sample) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sample) ProtoMessage() {}

func (x *Sample) ProtoReflect() protoreflect.Message {
	mi := &file_analogInTypeB_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sample.ProtoReflect.Descriptor instead.
func (*Sample) Descriptor() ([]byte, []int) {
	return file_analogInTypeB_proto_rawDescGZIP(), []int{13}
}

func (x *Sample) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Sample) GetBaseChannel() int32 {
	if x != nil {
		return x.BaseChannel
	}
	return 0
}

func (x *Sample) GetValue() []float32 {
	if x != nil {
		return x.Value
	}
	return nil
}

// data to tranport via stream
type StreamData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Samples []*Sample `protobuf:"bytes,1,rep,name=samples,proto3" json:"samples,omitempty"`
}

func (x *StreamData) Reset() {
	*x = StreamData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analogInTypeB_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamData) ProtoMessage() {}

func (x *StreamData) ProtoReflect() protoreflect.Message {
	mi := &file_analogInTypeB_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamData.ProtoReflect.Descriptor instead.
func (*StreamData) Descriptor() ([]byte, []int) {
	return file_analogInTypeB_proto_rawDescGZIP(), []int{14}
}

func (x *StreamData) GetSamples() []*Sample {
	if x != nil {
		return x.Samples
	}
	return nil
}

var File_analogInTypeB_proto protoreflect.FileDescriptor

var file_analogInTypeB_proto_rawDesc = []byte{
	0x0a, 0x13, 0x61, 0x6e, 0x61, 0x6c, 0x6f, 0x67, 0x49, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x42, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x61, 0x6e, 0x61, 0x6c, 0x6f, 0x67, 0x49, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x42, 0x22, 0x5e, 0x0a, 0x0d, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x61, 0x74, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x67, 0x61, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x67, 0x61, 0x69, 0x6e, 0x22, 0x96, 0x01, 0x0a, 0x19, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x05, 0x52, 0x08, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x12, 0x34,
	0x0a, 0x16, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x02, 0x52, 0x14,
	0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52,
	0x61, 0x74, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65,
	0x64, 0x5f, 0x67, 0x61, 0x69, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0e, 0x73,
	0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x47, 0x61, 0x69, 0x6e, 0x73, 0x22, 0x56, 0x0a,
	0x10, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65,
	0x74, 0x12, 0x42, 0x0a, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x6f,
	0x67, 0x49, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x42, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x1a, 0x0a, 0x18, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x12, 0x0a, 0x10, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x47, 0x65, 0x74, 0x22, 0x5e, 0x0a, 0x18, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x42, 0x0a, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x6f,
	0x67, 0x49, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x42, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x17, 0x0a, 0x15, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x22, 0x7d,
	0x0a, 0x1d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x5c, 0x0a, 0x14, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x61, 0x6e, 0x61, 0x6c, 0x6f, 0x67, 0x49, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x42, 0x2e, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x14, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x14, 0x0a,
	0x12, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x47, 0x65, 0x74, 0x22, 0x14, 0x0a, 0x12, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x65, 0x74, 0x22, 0x32, 0x0a, 0x1a, 0x46, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x1c, 0x0a,
	0x1a, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x36, 0x0a, 0x12, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x61, 0x73, 0x6b,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x07, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d,
	0x61, 0x73, 0x6b, 0x22, 0x5e, 0x0a, 0x06, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x62,
	0x61, 0x73, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x62, 0x61, 0x73, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x02, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x3d, 0x0a, 0x0a, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x2f, 0x0a, 0x07, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x6f, 0x67, 0x49, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x42, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x07, 0x73, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x73, 0x42, 0x12, 0x5a, 0x10, 0x61, 0x6e, 0x61, 0x6c, 0x6f, 0x67, 0x49, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x42, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_analogInTypeB_proto_rawDescOnce sync.Once
	file_analogInTypeB_proto_rawDescData = file_analogInTypeB_proto_rawDesc
)

func file_analogInTypeB_proto_rawDescGZIP() []byte {
	file_analogInTypeB_proto_rawDescOnce.Do(func() {
		file_analogInTypeB_proto_rawDescData = protoimpl.X.CompressGZIP(file_analogInTypeB_proto_rawDescData)
	})
	return file_analogInTypeB_proto_rawDescData
}

var file_analogInTypeB_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_analogInTypeB_proto_goTypes = []interface{}{
	(*ChannelConfig)(nil),                 // 0: analogInTypeB.ChannelConfig
	(*ChannelGroupSpecification)(nil),     // 1: analogInTypeB.ChannelGroupSpecification
	(*ConfigurationSet)(nil),              // 2: analogInTypeB.ConfigurationSet
	(*ConfigurationSetResponse)(nil),      // 3: analogInTypeB.ConfigurationSetResponse
	(*ConfigurationGet)(nil),              // 4: analogInTypeB.ConfigurationGet
	(*ConfigurationGetResponse)(nil),      // 5: analogInTypeB.ConfigurationGetResponse
	(*ConfigurationDescribe)(nil),         // 6: analogInTypeB.ConfigurationDescribe
	(*ConfigurationDescribeResponse)(nil), // 7: analogInTypeB.ConfigurationDescribeResponse
	(*FunctionControlGet)(nil),            // 8: analogInTypeB.FunctionControlGet
	(*FunctionControlSet)(nil),            // 9: analogInTypeB.FunctionControlSet
	(*FunctionControlGetResponse)(nil),    // 10: analogInTypeB.FunctionControlGetResponse
	(*FunctionControlSetResponse)(nil),    // 11: analogInTypeB.FunctionControlSetResponse
	(*StreamControlStart)(nil),            // 12: analogInTypeB.StreamControlStart
	(*Sample)(nil),                        // 13: analogInTypeB.Sample
	(*StreamData)(nil),                    // 14: analogInTypeB.StreamData
}
var file_analogInTypeB_proto_depIdxs = []int32{
	0,  // 0: analogInTypeB.ConfigurationSet.channelConfig:type_name -> analogInTypeB.ChannelConfig
	0,  // 1: analogInTypeB.ConfigurationGetResponse.channelConfig:type_name -> analogInTypeB.ChannelConfig
	1,  // 2: analogInTypeB.ConfigurationDescribeResponse.channelSpecification:type_name -> analogInTypeB.ChannelGroupSpecification
	13, // 3: analogInTypeB.StreamData.samples:type_name -> analogInTypeB.Sample
	4,  // [4:4] is the sub-list for method output_type
	4,  // [4:4] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_analogInTypeB_proto_init() }
func file_analogInTypeB_proto_init() {
	if File_analogInTypeB_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_analogInTypeB_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analogInTypeB_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelGroupSpecification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analogInTypeB_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigurationSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analogInTypeB_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigurationSetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analogInTypeB_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigurationGet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analogInTypeB_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigurationGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analogInTypeB_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigurationDescribe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analogInTypeB_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigurationDescribeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analogInTypeB_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FunctionControlGet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analogInTypeB_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FunctionControlSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analogInTypeB_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FunctionControlGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analogInTypeB_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FunctionControlSetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analogInTypeB_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamControlStart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analogInTypeB_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sample); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analogInTypeB_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_analogInTypeB_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_analogInTypeB_proto_goTypes,
		DependencyIndexes: file_analogInTypeB_proto_depIdxs,
		MessageInfos:      file_analogInTypeB_proto_msgTypes,
	}.Build()
	File_analogInTypeB_proto = out.File
	file_analogInTypeB_proto_rawDesc = nil
	file_analogInTypeB_proto_goTypes = nil
	file_analogInTypeB_proto_depIdxs = nil
}
