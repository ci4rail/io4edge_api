/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: analogInTypeB.proto */

#ifndef PROTOBUF_C_analogInTypeB_2eproto__INCLUDED
#define PROTOBUF_C_analogInTypeB_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003003 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _AnalogInTypeB__ChannelConfig AnalogInTypeB__ChannelConfig;
typedef struct _AnalogInTypeB__ChannelSpecification AnalogInTypeB__ChannelSpecification;
typedef struct _AnalogInTypeB__ConfigurationSet AnalogInTypeB__ConfigurationSet;
typedef struct _AnalogInTypeB__ConfigurationSetResponse AnalogInTypeB__ConfigurationSetResponse;
typedef struct _AnalogInTypeB__ConfigurationGet AnalogInTypeB__ConfigurationGet;
typedef struct _AnalogInTypeB__ConfigurationGetResponse AnalogInTypeB__ConfigurationGetResponse;
typedef struct _AnalogInTypeB__ConfigurationDescribe AnalogInTypeB__ConfigurationDescribe;
typedef struct _AnalogInTypeB__ConfigurationDescribeResponse AnalogInTypeB__ConfigurationDescribeResponse;
typedef struct _AnalogInTypeB__FunctionControlGet AnalogInTypeB__FunctionControlGet;
typedef struct _AnalogInTypeB__FunctionControlSet AnalogInTypeB__FunctionControlSet;
typedef struct _AnalogInTypeB__FunctionControlGetResponse AnalogInTypeB__FunctionControlGetResponse;
typedef struct _AnalogInTypeB__FunctionControlSetResponse AnalogInTypeB__FunctionControlSetResponse;
typedef struct _AnalogInTypeB__StreamControlStart AnalogInTypeB__StreamControlStart;
typedef struct _AnalogInTypeB__Sample AnalogInTypeB__Sample;
typedef struct _AnalogInTypeB__StreamData AnalogInTypeB__StreamData;


/* --- enums --- */


/* --- messages --- */

struct  _AnalogInTypeB__ChannelConfig
{
  ProtobufCMessage base;
  /*
   * channel number (0..n)
   */
  int32_t channel;
  float sample_rate;
  int32_t gain;
};
#define ANALOG_IN_TYPE_B__CHANNEL_CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&analog_in_type_b__channel_config__descriptor) \
    , 0, 0, 0 }


struct  _AnalogInTypeB__ChannelSpecification
{
  ProtobufCMessage base;
  /*
   * channel number (0..n)
   */
  int32_t channel;
  size_t n_supported_sample_rates;
  float *supported_sample_rates;
  size_t n_supported_gains;
  int32_t *supported_gains;
};
#define ANALOG_IN_TYPE_B__CHANNEL_SPECIFICATION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&analog_in_type_b__channel_specification__descriptor) \
    , 0, 0,NULL, 0,NULL }


/*
 * ConfigurationSet to pass to Functionblock.Configuration.functionSpecificConfigurationSet hook
 */
struct  _AnalogInTypeB__ConfigurationSet
{
  ProtobufCMessage base;
  /*
   * per channel configuration (one per channel). The channel number is part of each ChannelConfig entry.
   * missing channels remain unchanged
   */
  size_t n_channelconfig;
  AnalogInTypeB__ChannelConfig **channelconfig;
};
#define ANALOG_IN_TYPE_B__CONFIGURATION_SET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&analog_in_type_b__configuration_set__descriptor) \
    , 0,NULL }


/*
 * ConfigurationSetResponse to pass to Functionblock.Configuration.functionSpecificConfigurationSetResponse hook
 */
struct  _AnalogInTypeB__ConfigurationSetResponse
{
  ProtobufCMessage base;
};
#define ANALOG_IN_TYPE_B__CONFIGURATION_SET_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&analog_in_type_b__configuration_set_response__descriptor) \
     }


/*
 * ConfigurationGet to pass to Functionblock.Configuration.functionSpecificConfigurationGet hook
 */
struct  _AnalogInTypeB__ConfigurationGet
{
  ProtobufCMessage base;
};
#define ANALOG_IN_TYPE_B__CONFIGURATION_GET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&analog_in_type_b__configuration_get__descriptor) \
     }


/*
 * ConfigurationGetResponse to pass to Functionblock.ConfigurationGetResponse.functionSpecificConfigurationGetResponse hook
 * Returns the current hardware configuration
 */
struct  _AnalogInTypeB__ConfigurationGetResponse
{
  ProtobufCMessage base;
  /*
   * per channel configuration (one per channel). The channel number is part of each ChannelConfig entry.
   */
  size_t n_channelconfig;
  AnalogInTypeB__ChannelConfig **channelconfig;
};
#define ANALOG_IN_TYPE_B__CONFIGURATION_GET_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&analog_in_type_b__configuration_get_response__descriptor) \
    , 0,NULL }


/*
 * ConfigurationDescribe to pass to Functionblock.Configuration.functionSpecificConfigurationDescribe hook
 */
struct  _AnalogInTypeB__ConfigurationDescribe
{
  ProtobufCMessage base;
};
#define ANALOG_IN_TYPE_B__CONFIGURATION_DESCRIBE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&analog_in_type_b__configuration_describe__descriptor) \
     }


struct  _AnalogInTypeB__ConfigurationDescribeResponse
{
  ProtobufCMessage base;
  size_t n_channelspecification;
  AnalogInTypeB__ChannelSpecification **channelspecification;
};
#define ANALOG_IN_TYPE_B__CONFIGURATION_DESCRIBE_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&analog_in_type_b__configuration_describe_response__descriptor) \
    , 0,NULL }


/*
 * FunctionControlGet to pass to Functionblock.FunctionControl.functionSpecificFunctionControlGet hook
 */
struct  _AnalogInTypeB__FunctionControlGet
{
  ProtobufCMessage base;
};
#define ANALOG_IN_TYPE_B__FUNCTION_CONTROL_GET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&analog_in_type_b__function_control_get__descriptor) \
     }


/*
 * FunctionControlSet to pass to Functionblock.FunctionControl.functionSpecificFunctionControlSet hook
 */
struct  _AnalogInTypeB__FunctionControlSet
{
  ProtobufCMessage base;
};
#define ANALOG_IN_TYPE_B__FUNCTION_CONTROL_SET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&analog_in_type_b__function_control_set__descriptor) \
     }


/*
 * FunctionControlGetResponse to pass to Functionblock.FunctionControlResponse.functionSpecificControlGet hook
 */
struct  _AnalogInTypeB__FunctionControlGetResponse
{
  ProtobufCMessage base;
  /*
   * one value per channel, channel number is implicit by position in array
   */
  size_t n_value;
  float *value;
};
#define ANALOG_IN_TYPE_B__FUNCTION_CONTROL_GET_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&analog_in_type_b__function_control_get_response__descriptor) \
    , 0,NULL }


/*
 * FunctionControlSetResponse to pass to Functionblock.FunctionControlResponse.functionSpecificControlSet hook
 */
struct  _AnalogInTypeB__FunctionControlSetResponse
{
  ProtobufCMessage base;
};
#define ANALOG_IN_TYPE_B__FUNCTION_CONTROL_SET_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&analog_in_type_b__function_control_set_response__descriptor) \
     }


/*
 * ============= StreamControl ==================
 * StreamControlStart to pass to Functionblock.StreamControlStart.functionSpecificStreamControlStart hook
 */
struct  _AnalogInTypeB__StreamControlStart
{
  ProtobufCMessage base;
  /*
   * which channels to include in the stream. LSB is channel 0, 1: include, 0: exclude
   */
  uint32_t channelmask;
};
#define ANALOG_IN_TYPE_B__STREAM_CONTROL_START__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&analog_in_type_b__stream_control_start__descriptor) \
    , 0 }


struct  _AnalogInTypeB__Sample
{
  ProtobufCMessage base;
  /*
   * Timestamp for that specific channels sample. This is the time the sample was taken.
   * This timestamp is in microseconds since the start of the device and does not get synchronized with the clients time.
   */
  uint64_t timestamp;
  /*
   * Specifies the analog input channel number 0..n to which the value belongs
   */
  int32_t channel;
  /*
   * Specifies the analog input channel value
   */
  float value;
};
#define ANALOG_IN_TYPE_B__SAMPLE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&analog_in_type_b__sample__descriptor) \
    , 0, 0, 0 }


/*
 * StreamData to pass to Functionblock.StreamData.functionSpecificStreamData hook
 */
struct  _AnalogInTypeB__StreamData
{
  ProtobufCMessage base;
  size_t n_samples;
  AnalogInTypeB__Sample **samples;
};
#define ANALOG_IN_TYPE_B__STREAM_DATA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&analog_in_type_b__stream_data__descriptor) \
    , 0,NULL }


/* AnalogInTypeB__ChannelConfig methods */
void   analog_in_type_b__channel_config__init
                     (AnalogInTypeB__ChannelConfig         *message);
size_t analog_in_type_b__channel_config__get_packed_size
                     (const AnalogInTypeB__ChannelConfig   *message);
size_t analog_in_type_b__channel_config__pack
                     (const AnalogInTypeB__ChannelConfig   *message,
                      uint8_t             *out);
size_t analog_in_type_b__channel_config__pack_to_buffer
                     (const AnalogInTypeB__ChannelConfig   *message,
                      ProtobufCBuffer     *buffer);
AnalogInTypeB__ChannelConfig *
       analog_in_type_b__channel_config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   analog_in_type_b__channel_config__free_unpacked
                     (AnalogInTypeB__ChannelConfig *message,
                      ProtobufCAllocator *allocator);
/* AnalogInTypeB__ChannelSpecification methods */
void   analog_in_type_b__channel_specification__init
                     (AnalogInTypeB__ChannelSpecification         *message);
size_t analog_in_type_b__channel_specification__get_packed_size
                     (const AnalogInTypeB__ChannelSpecification   *message);
size_t analog_in_type_b__channel_specification__pack
                     (const AnalogInTypeB__ChannelSpecification   *message,
                      uint8_t             *out);
size_t analog_in_type_b__channel_specification__pack_to_buffer
                     (const AnalogInTypeB__ChannelSpecification   *message,
                      ProtobufCBuffer     *buffer);
AnalogInTypeB__ChannelSpecification *
       analog_in_type_b__channel_specification__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   analog_in_type_b__channel_specification__free_unpacked
                     (AnalogInTypeB__ChannelSpecification *message,
                      ProtobufCAllocator *allocator);
/* AnalogInTypeB__ConfigurationSet methods */
void   analog_in_type_b__configuration_set__init
                     (AnalogInTypeB__ConfigurationSet         *message);
size_t analog_in_type_b__configuration_set__get_packed_size
                     (const AnalogInTypeB__ConfigurationSet   *message);
size_t analog_in_type_b__configuration_set__pack
                     (const AnalogInTypeB__ConfigurationSet   *message,
                      uint8_t             *out);
size_t analog_in_type_b__configuration_set__pack_to_buffer
                     (const AnalogInTypeB__ConfigurationSet   *message,
                      ProtobufCBuffer     *buffer);
AnalogInTypeB__ConfigurationSet *
       analog_in_type_b__configuration_set__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   analog_in_type_b__configuration_set__free_unpacked
                     (AnalogInTypeB__ConfigurationSet *message,
                      ProtobufCAllocator *allocator);
/* AnalogInTypeB__ConfigurationSetResponse methods */
void   analog_in_type_b__configuration_set_response__init
                     (AnalogInTypeB__ConfigurationSetResponse         *message);
size_t analog_in_type_b__configuration_set_response__get_packed_size
                     (const AnalogInTypeB__ConfigurationSetResponse   *message);
size_t analog_in_type_b__configuration_set_response__pack
                     (const AnalogInTypeB__ConfigurationSetResponse   *message,
                      uint8_t             *out);
size_t analog_in_type_b__configuration_set_response__pack_to_buffer
                     (const AnalogInTypeB__ConfigurationSetResponse   *message,
                      ProtobufCBuffer     *buffer);
AnalogInTypeB__ConfigurationSetResponse *
       analog_in_type_b__configuration_set_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   analog_in_type_b__configuration_set_response__free_unpacked
                     (AnalogInTypeB__ConfigurationSetResponse *message,
                      ProtobufCAllocator *allocator);
/* AnalogInTypeB__ConfigurationGet methods */
void   analog_in_type_b__configuration_get__init
                     (AnalogInTypeB__ConfigurationGet         *message);
size_t analog_in_type_b__configuration_get__get_packed_size
                     (const AnalogInTypeB__ConfigurationGet   *message);
size_t analog_in_type_b__configuration_get__pack
                     (const AnalogInTypeB__ConfigurationGet   *message,
                      uint8_t             *out);
size_t analog_in_type_b__configuration_get__pack_to_buffer
                     (const AnalogInTypeB__ConfigurationGet   *message,
                      ProtobufCBuffer     *buffer);
AnalogInTypeB__ConfigurationGet *
       analog_in_type_b__configuration_get__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   analog_in_type_b__configuration_get__free_unpacked
                     (AnalogInTypeB__ConfigurationGet *message,
                      ProtobufCAllocator *allocator);
/* AnalogInTypeB__ConfigurationGetResponse methods */
void   analog_in_type_b__configuration_get_response__init
                     (AnalogInTypeB__ConfigurationGetResponse         *message);
size_t analog_in_type_b__configuration_get_response__get_packed_size
                     (const AnalogInTypeB__ConfigurationGetResponse   *message);
size_t analog_in_type_b__configuration_get_response__pack
                     (const AnalogInTypeB__ConfigurationGetResponse   *message,
                      uint8_t             *out);
size_t analog_in_type_b__configuration_get_response__pack_to_buffer
                     (const AnalogInTypeB__ConfigurationGetResponse   *message,
                      ProtobufCBuffer     *buffer);
AnalogInTypeB__ConfigurationGetResponse *
       analog_in_type_b__configuration_get_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   analog_in_type_b__configuration_get_response__free_unpacked
                     (AnalogInTypeB__ConfigurationGetResponse *message,
                      ProtobufCAllocator *allocator);
/* AnalogInTypeB__ConfigurationDescribe methods */
void   analog_in_type_b__configuration_describe__init
                     (AnalogInTypeB__ConfigurationDescribe         *message);
size_t analog_in_type_b__configuration_describe__get_packed_size
                     (const AnalogInTypeB__ConfigurationDescribe   *message);
size_t analog_in_type_b__configuration_describe__pack
                     (const AnalogInTypeB__ConfigurationDescribe   *message,
                      uint8_t             *out);
size_t analog_in_type_b__configuration_describe__pack_to_buffer
                     (const AnalogInTypeB__ConfigurationDescribe   *message,
                      ProtobufCBuffer     *buffer);
AnalogInTypeB__ConfigurationDescribe *
       analog_in_type_b__configuration_describe__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   analog_in_type_b__configuration_describe__free_unpacked
                     (AnalogInTypeB__ConfigurationDescribe *message,
                      ProtobufCAllocator *allocator);
/* AnalogInTypeB__ConfigurationDescribeResponse methods */
void   analog_in_type_b__configuration_describe_response__init
                     (AnalogInTypeB__ConfigurationDescribeResponse         *message);
size_t analog_in_type_b__configuration_describe_response__get_packed_size
                     (const AnalogInTypeB__ConfigurationDescribeResponse   *message);
size_t analog_in_type_b__configuration_describe_response__pack
                     (const AnalogInTypeB__ConfigurationDescribeResponse   *message,
                      uint8_t             *out);
size_t analog_in_type_b__configuration_describe_response__pack_to_buffer
                     (const AnalogInTypeB__ConfigurationDescribeResponse   *message,
                      ProtobufCBuffer     *buffer);
AnalogInTypeB__ConfigurationDescribeResponse *
       analog_in_type_b__configuration_describe_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   analog_in_type_b__configuration_describe_response__free_unpacked
                     (AnalogInTypeB__ConfigurationDescribeResponse *message,
                      ProtobufCAllocator *allocator);
/* AnalogInTypeB__FunctionControlGet methods */
void   analog_in_type_b__function_control_get__init
                     (AnalogInTypeB__FunctionControlGet         *message);
size_t analog_in_type_b__function_control_get__get_packed_size
                     (const AnalogInTypeB__FunctionControlGet   *message);
size_t analog_in_type_b__function_control_get__pack
                     (const AnalogInTypeB__FunctionControlGet   *message,
                      uint8_t             *out);
size_t analog_in_type_b__function_control_get__pack_to_buffer
                     (const AnalogInTypeB__FunctionControlGet   *message,
                      ProtobufCBuffer     *buffer);
AnalogInTypeB__FunctionControlGet *
       analog_in_type_b__function_control_get__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   analog_in_type_b__function_control_get__free_unpacked
                     (AnalogInTypeB__FunctionControlGet *message,
                      ProtobufCAllocator *allocator);
/* AnalogInTypeB__FunctionControlSet methods */
void   analog_in_type_b__function_control_set__init
                     (AnalogInTypeB__FunctionControlSet         *message);
size_t analog_in_type_b__function_control_set__get_packed_size
                     (const AnalogInTypeB__FunctionControlSet   *message);
size_t analog_in_type_b__function_control_set__pack
                     (const AnalogInTypeB__FunctionControlSet   *message,
                      uint8_t             *out);
size_t analog_in_type_b__function_control_set__pack_to_buffer
                     (const AnalogInTypeB__FunctionControlSet   *message,
                      ProtobufCBuffer     *buffer);
AnalogInTypeB__FunctionControlSet *
       analog_in_type_b__function_control_set__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   analog_in_type_b__function_control_set__free_unpacked
                     (AnalogInTypeB__FunctionControlSet *message,
                      ProtobufCAllocator *allocator);
/* AnalogInTypeB__FunctionControlGetResponse methods */
void   analog_in_type_b__function_control_get_response__init
                     (AnalogInTypeB__FunctionControlGetResponse         *message);
size_t analog_in_type_b__function_control_get_response__get_packed_size
                     (const AnalogInTypeB__FunctionControlGetResponse   *message);
size_t analog_in_type_b__function_control_get_response__pack
                     (const AnalogInTypeB__FunctionControlGetResponse   *message,
                      uint8_t             *out);
size_t analog_in_type_b__function_control_get_response__pack_to_buffer
                     (const AnalogInTypeB__FunctionControlGetResponse   *message,
                      ProtobufCBuffer     *buffer);
AnalogInTypeB__FunctionControlGetResponse *
       analog_in_type_b__function_control_get_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   analog_in_type_b__function_control_get_response__free_unpacked
                     (AnalogInTypeB__FunctionControlGetResponse *message,
                      ProtobufCAllocator *allocator);
/* AnalogInTypeB__FunctionControlSetResponse methods */
void   analog_in_type_b__function_control_set_response__init
                     (AnalogInTypeB__FunctionControlSetResponse         *message);
size_t analog_in_type_b__function_control_set_response__get_packed_size
                     (const AnalogInTypeB__FunctionControlSetResponse   *message);
size_t analog_in_type_b__function_control_set_response__pack
                     (const AnalogInTypeB__FunctionControlSetResponse   *message,
                      uint8_t             *out);
size_t analog_in_type_b__function_control_set_response__pack_to_buffer
                     (const AnalogInTypeB__FunctionControlSetResponse   *message,
                      ProtobufCBuffer     *buffer);
AnalogInTypeB__FunctionControlSetResponse *
       analog_in_type_b__function_control_set_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   analog_in_type_b__function_control_set_response__free_unpacked
                     (AnalogInTypeB__FunctionControlSetResponse *message,
                      ProtobufCAllocator *allocator);
/* AnalogInTypeB__StreamControlStart methods */
void   analog_in_type_b__stream_control_start__init
                     (AnalogInTypeB__StreamControlStart         *message);
size_t analog_in_type_b__stream_control_start__get_packed_size
                     (const AnalogInTypeB__StreamControlStart   *message);
size_t analog_in_type_b__stream_control_start__pack
                     (const AnalogInTypeB__StreamControlStart   *message,
                      uint8_t             *out);
size_t analog_in_type_b__stream_control_start__pack_to_buffer
                     (const AnalogInTypeB__StreamControlStart   *message,
                      ProtobufCBuffer     *buffer);
AnalogInTypeB__StreamControlStart *
       analog_in_type_b__stream_control_start__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   analog_in_type_b__stream_control_start__free_unpacked
                     (AnalogInTypeB__StreamControlStart *message,
                      ProtobufCAllocator *allocator);
/* AnalogInTypeB__Sample methods */
void   analog_in_type_b__sample__init
                     (AnalogInTypeB__Sample         *message);
size_t analog_in_type_b__sample__get_packed_size
                     (const AnalogInTypeB__Sample   *message);
size_t analog_in_type_b__sample__pack
                     (const AnalogInTypeB__Sample   *message,
                      uint8_t             *out);
size_t analog_in_type_b__sample__pack_to_buffer
                     (const AnalogInTypeB__Sample   *message,
                      ProtobufCBuffer     *buffer);
AnalogInTypeB__Sample *
       analog_in_type_b__sample__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   analog_in_type_b__sample__free_unpacked
                     (AnalogInTypeB__Sample *message,
                      ProtobufCAllocator *allocator);
/* AnalogInTypeB__StreamData methods */
void   analog_in_type_b__stream_data__init
                     (AnalogInTypeB__StreamData         *message);
size_t analog_in_type_b__stream_data__get_packed_size
                     (const AnalogInTypeB__StreamData   *message);
size_t analog_in_type_b__stream_data__pack
                     (const AnalogInTypeB__StreamData   *message,
                      uint8_t             *out);
size_t analog_in_type_b__stream_data__pack_to_buffer
                     (const AnalogInTypeB__StreamData   *message,
                      ProtobufCBuffer     *buffer);
AnalogInTypeB__StreamData *
       analog_in_type_b__stream_data__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   analog_in_type_b__stream_data__free_unpacked
                     (AnalogInTypeB__StreamData *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*AnalogInTypeB__ChannelConfig_Closure)
                 (const AnalogInTypeB__ChannelConfig *message,
                  void *closure_data);
typedef void (*AnalogInTypeB__ChannelSpecification_Closure)
                 (const AnalogInTypeB__ChannelSpecification *message,
                  void *closure_data);
typedef void (*AnalogInTypeB__ConfigurationSet_Closure)
                 (const AnalogInTypeB__ConfigurationSet *message,
                  void *closure_data);
typedef void (*AnalogInTypeB__ConfigurationSetResponse_Closure)
                 (const AnalogInTypeB__ConfigurationSetResponse *message,
                  void *closure_data);
typedef void (*AnalogInTypeB__ConfigurationGet_Closure)
                 (const AnalogInTypeB__ConfigurationGet *message,
                  void *closure_data);
typedef void (*AnalogInTypeB__ConfigurationGetResponse_Closure)
                 (const AnalogInTypeB__ConfigurationGetResponse *message,
                  void *closure_data);
typedef void (*AnalogInTypeB__ConfigurationDescribe_Closure)
                 (const AnalogInTypeB__ConfigurationDescribe *message,
                  void *closure_data);
typedef void (*AnalogInTypeB__ConfigurationDescribeResponse_Closure)
                 (const AnalogInTypeB__ConfigurationDescribeResponse *message,
                  void *closure_data);
typedef void (*AnalogInTypeB__FunctionControlGet_Closure)
                 (const AnalogInTypeB__FunctionControlGet *message,
                  void *closure_data);
typedef void (*AnalogInTypeB__FunctionControlSet_Closure)
                 (const AnalogInTypeB__FunctionControlSet *message,
                  void *closure_data);
typedef void (*AnalogInTypeB__FunctionControlGetResponse_Closure)
                 (const AnalogInTypeB__FunctionControlGetResponse *message,
                  void *closure_data);
typedef void (*AnalogInTypeB__FunctionControlSetResponse_Closure)
                 (const AnalogInTypeB__FunctionControlSetResponse *message,
                  void *closure_data);
typedef void (*AnalogInTypeB__StreamControlStart_Closure)
                 (const AnalogInTypeB__StreamControlStart *message,
                  void *closure_data);
typedef void (*AnalogInTypeB__Sample_Closure)
                 (const AnalogInTypeB__Sample *message,
                  void *closure_data);
typedef void (*AnalogInTypeB__StreamData_Closure)
                 (const AnalogInTypeB__StreamData *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor analog_in_type_b__channel_config__descriptor;
extern const ProtobufCMessageDescriptor analog_in_type_b__channel_specification__descriptor;
extern const ProtobufCMessageDescriptor analog_in_type_b__configuration_set__descriptor;
extern const ProtobufCMessageDescriptor analog_in_type_b__configuration_set_response__descriptor;
extern const ProtobufCMessageDescriptor analog_in_type_b__configuration_get__descriptor;
extern const ProtobufCMessageDescriptor analog_in_type_b__configuration_get_response__descriptor;
extern const ProtobufCMessageDescriptor analog_in_type_b__configuration_describe__descriptor;
extern const ProtobufCMessageDescriptor analog_in_type_b__configuration_describe_response__descriptor;
extern const ProtobufCMessageDescriptor analog_in_type_b__function_control_get__descriptor;
extern const ProtobufCMessageDescriptor analog_in_type_b__function_control_set__descriptor;
extern const ProtobufCMessageDescriptor analog_in_type_b__function_control_get_response__descriptor;
extern const ProtobufCMessageDescriptor analog_in_type_b__function_control_set_response__descriptor;
extern const ProtobufCMessageDescriptor analog_in_type_b__stream_control_start__descriptor;
extern const ProtobufCMessageDescriptor analog_in_type_b__sample__descriptor;
extern const ProtobufCMessageDescriptor analog_in_type_b__stream_data__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_analogInTypeB_2eproto__INCLUDED */
