//
//Copyright Â© 2024 Ci4Rail GmbH <engineering@ci4rail.com>
//
//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.

// Binary I/O as on EKF SO1

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.0--rc2
// source: binaryIoTypeD.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ============= Configuration =================
type ChannelMode int32

const (
	// configure as low active input channel
	ChannelMode_BINARYIOTYPED_INPUT_LOW_ACTIVE ChannelMode = 0
	// configure as high active input channel
	ChannelMode_BINARYIOTYPED_INPUT_HIGH_ACTIVE ChannelMode = 1
	// configure as low active output channel
	ChannelMode_BINARYIOTYPED_OUTPUT_LOW_ACTIVE ChannelMode = 2
	// configure as high active output channel
	ChannelMode_BINARYIOTYPED_OUTPUT_HIGH_ACTIVE ChannelMode = 3
)

// Enum value maps for ChannelMode.
var (
	ChannelMode_name = map[int32]string{
		0: "BINARYIOTYPED_INPUT_LOW_ACTIVE",
		1: "BINARYIOTYPED_INPUT_HIGH_ACTIVE",
		2: "BINARYIOTYPED_OUTPUT_LOW_ACTIVE",
		3: "BINARYIOTYPED_OUTPUT_HIGH_ACTIVE",
	}
	ChannelMode_value = map[string]int32{
		"BINARYIOTYPED_INPUT_LOW_ACTIVE":   0,
		"BINARYIOTYPED_INPUT_HIGH_ACTIVE":  1,
		"BINARYIOTYPED_OUTPUT_LOW_ACTIVE":  2,
		"BINARYIOTYPED_OUTPUT_HIGH_ACTIVE": 3,
	}
)

func (x ChannelMode) Enum() *ChannelMode {
	p := new(ChannelMode)
	*p = x
	return p
}

func (x ChannelMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChannelMode) Descriptor() protoreflect.EnumDescriptor {
	return file_binaryIoTypeD_proto_enumTypes[0].Descriptor()
}

func (ChannelMode) Type() protoreflect.EnumType {
	return &file_binaryIoTypeD_proto_enumTypes[0]
}

func (x ChannelMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChannelMode.Descriptor instead.
func (ChannelMode) EnumDescriptor() ([]byte, []int) {
	return file_binaryIoTypeD_proto_rawDescGZIP(), []int{0}
}

// Channel diagnostic bits. Multiple bits may be set at the same time.
type ChannelDiag int32

const (
	ChannelDiag_NoDiag ChannelDiag = 0
	// group supply voltage missing (input values can't be determined, output values can't be set)
	ChannelDiag_NoSupplyVoltage ChannelDiag = 1
	// channel or group overload (output is disabled)
	ChannelDiag_Overload ChannelDiag = 2
)

// Enum value maps for ChannelDiag.
var (
	ChannelDiag_name = map[int32]string{
		0: "NoDiag",
		1: "NoSupplyVoltage",
		2: "Overload",
	}
	ChannelDiag_value = map[string]int32{
		"NoDiag":          0,
		"NoSupplyVoltage": 1,
		"Overload":        2,
	}
)

func (x ChannelDiag) Enum() *ChannelDiag {
	p := new(ChannelDiag)
	*p = x
	return p
}

func (x ChannelDiag) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChannelDiag) Descriptor() protoreflect.EnumDescriptor {
	return file_binaryIoTypeD_proto_enumTypes[1].Descriptor()
}

func (ChannelDiag) Type() protoreflect.EnumType {
	return &file_binaryIoTypeD_proto_enumTypes[1]
}

func (x ChannelDiag) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChannelDiag.Descriptor instead.
func (ChannelDiag) EnumDescriptor() ([]byte, []int) {
	return file_binaryIoTypeD_proto_rawDescGZIP(), []int{1}
}

type ChannelConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// channel number (0..n)
	Channel int32 `protobuf:"varint,1,opt,name=channel,proto3" json:"channel,omitempty"`
	// direction and type
	Mode ChannelMode `protobuf:"varint,2,opt,name=mode,proto3,enum=binaryIoTypeD.ChannelMode" json:"mode,omitempty"`
	// If channel is configured for output, initialValue defines the value after initialization
	// and after the watchdog has fired
	InitialValue bool `protobuf:"varint,3,opt,name=initialValue,proto3" json:"initialValue,omitempty"`
	// overload recovery timeout in ms.
	// The channel will be disabled for this time after an overload. A 0 uses the default value.
	OverloadRecoveryTimeoutMs int32 `protobuf:"varint,4,opt,name=overloadRecoveryTimeoutMs,proto3" json:"overloadRecoveryTimeoutMs,omitempty"`
	// watchdog timeout in ms. if not 0, actives the watchdog for this channel
	WatchdogTimeoutMs int32 `protobuf:"varint,5,opt,name=watchdogTimeoutMs,proto3" json:"watchdogTimeoutMs,omitempty"`
	// fritting current enable
	FrittingEnable bool `protobuf:"varint,6,opt,name=frittingEnable,proto3" json:"frittingEnable,omitempty"`
}

func (x *ChannelConfig) Reset() {
	*x = ChannelConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_binaryIoTypeD_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelConfig) ProtoMessage() {}

func (x *ChannelConfig) ProtoReflect() protoreflect.Message {
	mi := &file_binaryIoTypeD_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelConfig.ProtoReflect.Descriptor instead.
func (*ChannelConfig) Descriptor() ([]byte, []int) {
	return file_binaryIoTypeD_proto_rawDescGZIP(), []int{0}
}

func (x *ChannelConfig) GetChannel() int32 {
	if x != nil {
		return x.Channel
	}
	return 0
}

func (x *ChannelConfig) GetMode() ChannelMode {
	if x != nil {
		return x.Mode
	}
	return ChannelMode_BINARYIOTYPED_INPUT_LOW_ACTIVE
}

func (x *ChannelConfig) GetInitialValue() bool {
	if x != nil {
		return x.InitialValue
	}
	return false
}

func (x *ChannelConfig) GetOverloadRecoveryTimeoutMs() int32 {
	if x != nil {
		return x.OverloadRecoveryTimeoutMs
	}
	return 0
}

func (x *ChannelConfig) GetWatchdogTimeoutMs() int32 {
	if x != nil {
		return x.WatchdogTimeoutMs
	}
	return 0
}

func (x *ChannelConfig) GetFrittingEnable() bool {
	if x != nil {
		return x.FrittingEnable
	}
	return false
}

type ConfigurationSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// per channel configuration (one per channel/pin). The channel number is part of each ChannelConfig entry.
	// missing channels remain unchanged
	ChannelConfig []*ChannelConfig `protobuf:"bytes,1,rep,name=channelConfig,proto3" json:"channelConfig,omitempty"`
}

func (x *ConfigurationSet) Reset() {
	*x = ConfigurationSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_binaryIoTypeD_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigurationSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigurationSet) ProtoMessage() {}

func (x *ConfigurationSet) ProtoReflect() protoreflect.Message {
	mi := &file_binaryIoTypeD_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigurationSet.ProtoReflect.Descriptor instead.
func (*ConfigurationSet) Descriptor() ([]byte, []int) {
	return file_binaryIoTypeD_proto_rawDescGZIP(), []int{1}
}

func (x *ConfigurationSet) GetChannelConfig() []*ChannelConfig {
	if x != nil {
		return x.ChannelConfig
	}
	return nil
}

type ConfigurationSetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ConfigurationSetResponse) Reset() {
	*x = ConfigurationSetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_binaryIoTypeD_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigurationSetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigurationSetResponse) ProtoMessage() {}

func (x *ConfigurationSetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_binaryIoTypeD_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigurationSetResponse.ProtoReflect.Descriptor instead.
func (*ConfigurationSetResponse) Descriptor() ([]byte, []int) {
	return file_binaryIoTypeD_proto_rawDescGZIP(), []int{2}
}

type ConfigurationGet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ConfigurationGet) Reset() {
	*x = ConfigurationGet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_binaryIoTypeD_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigurationGet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigurationGet) ProtoMessage() {}

func (x *ConfigurationGet) ProtoReflect() protoreflect.Message {
	mi := &file_binaryIoTypeD_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigurationGet.ProtoReflect.Descriptor instead.
func (*ConfigurationGet) Descriptor() ([]byte, []int) {
	return file_binaryIoTypeD_proto_rawDescGZIP(), []int{3}
}

// Returns the current hardware configuration
type ConfigurationGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// per channel configuration (one per channel/pin)
	ChannelConfig []*ChannelConfig `protobuf:"bytes,1,rep,name=channelConfig,proto3" json:"channelConfig,omitempty"`
}

func (x *ConfigurationGetResponse) Reset() {
	*x = ConfigurationGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_binaryIoTypeD_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigurationGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigurationGetResponse) ProtoMessage() {}

func (x *ConfigurationGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_binaryIoTypeD_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigurationGetResponse.ProtoReflect.Descriptor instead.
func (*ConfigurationGetResponse) Descriptor() ([]byte, []int) {
	return file_binaryIoTypeD_proto_rawDescGZIP(), []int{4}
}

func (x *ConfigurationGetResponse) GetChannelConfig() []*ChannelConfig {
	if x != nil {
		return x.ChannelConfig
	}
	return nil
}

type ConfigurationDescribe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ConfigurationDescribe) Reset() {
	*x = ConfigurationDescribe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_binaryIoTypeD_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigurationDescribe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigurationDescribe) ProtoMessage() {}

func (x *ConfigurationDescribe) ProtoReflect() protoreflect.Message {
	mi := &file_binaryIoTypeD_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigurationDescribe.ProtoReflect.Descriptor instead.
func (*ConfigurationDescribe) Descriptor() ([]byte, []int) {
	return file_binaryIoTypeD_proto_rawDescGZIP(), []int{5}
}

type ConfigurationDescribeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NumberOfChannels uint32 `protobuf:"fixed32,1,opt,name=numberOfChannels,proto3" json:"numberOfChannels,omitempty"`
}

func (x *ConfigurationDescribeResponse) Reset() {
	*x = ConfigurationDescribeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_binaryIoTypeD_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigurationDescribeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigurationDescribeResponse) ProtoMessage() {}

func (x *ConfigurationDescribeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_binaryIoTypeD_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigurationDescribeResponse.ProtoReflect.Descriptor instead.
func (*ConfigurationDescribeResponse) Descriptor() ([]byte, []int) {
	return file_binaryIoTypeD_proto_rawDescGZIP(), []int{6}
}

func (x *ConfigurationDescribeResponse) GetNumberOfChannels() uint32 {
	if x != nil {
		return x.NumberOfChannels
	}
	return 0
}

// get value of all binary channels
type FunctionControlGet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FunctionControlGet) Reset() {
	*x = FunctionControlGet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_binaryIoTypeD_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FunctionControlGet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FunctionControlGet) ProtoMessage() {}

func (x *FunctionControlGet) ProtoReflect() protoreflect.Message {
	mi := &file_binaryIoTypeD_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FunctionControlGet.ProtoReflect.Descriptor instead.
func (*FunctionControlGet) Descriptor() ([]byte, []int) {
	return file_binaryIoTypeD_proto_rawDescGZIP(), []int{7}
}

// Sets the value of a single binary channel
type SetSingle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Number of the binary output channel
	Channel uint32 `protobuf:"fixed32,1,opt,name=channel,proto3" json:"channel,omitempty"`
	// State of the binary output channel. 0 means inactive, 1 means active
	State bool `protobuf:"varint,2,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *SetSingle) Reset() {
	*x = SetSingle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_binaryIoTypeD_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetSingle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSingle) ProtoMessage() {}

func (x *SetSingle) ProtoReflect() protoreflect.Message {
	mi := &file_binaryIoTypeD_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSingle.ProtoReflect.Descriptor instead.
func (*SetSingle) Descriptor() ([]byte, []int) {
	return file_binaryIoTypeD_proto_rawDescGZIP(), []int{8}
}

func (x *SetSingle) GetChannel() uint32 {
	if x != nil {
		return x.Channel
	}
	return 0
}

func (x *SetSingle) GetState() bool {
	if x != nil {
		return x.State
	}
	return false
}

// Sets all binary channels
type SetAll struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// binary coded map of input values. 0 means inactive, 1 means active, LSB is Output0
	Values uint32 `protobuf:"fixed32,1,opt,name=values,proto3" json:"values,omitempty"`
	// mask to define which channels are affected by the set all command. 0 means not set, 1 means set, LSB is Output0
	Mask uint32 `protobuf:"fixed32,2,opt,name=mask,proto3" json:"mask,omitempty"`
}

func (x *SetAll) Reset() {
	*x = SetAll{}
	if protoimpl.UnsafeEnabled {
		mi := &file_binaryIoTypeD_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetAll) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAll) ProtoMessage() {}

func (x *SetAll) ProtoReflect() protoreflect.Message {
	mi := &file_binaryIoTypeD_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAll.ProtoReflect.Descriptor instead.
func (*SetAll) Descriptor() ([]byte, []int) {
	return file_binaryIoTypeD_proto_rawDescGZIP(), []int{9}
}

func (x *SetAll) GetValues() uint32 {
	if x != nil {
		return x.Values
	}
	return 0
}

func (x *SetAll) GetMask() uint32 {
	if x != nil {
		return x.Mask
	}
	return 0
}

// Try to recover from error state
type SetExitError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// clear error state on channels whose bit is set
	Mask uint32 `protobuf:"fixed32,1,opt,name=mask,proto3" json:"mask,omitempty"`
}

func (x *SetExitError) Reset() {
	*x = SetExitError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_binaryIoTypeD_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetExitError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetExitError) ProtoMessage() {}

func (x *SetExitError) ProtoReflect() protoreflect.Message {
	mi := &file_binaryIoTypeD_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetExitError.ProtoReflect.Descriptor instead.
func (*SetExitError) Descriptor() ([]byte, []int) {
	return file_binaryIoTypeD_proto_rawDescGZIP(), []int{10}
}

func (x *SetExitError) GetMask() uint32 {
	if x != nil {
		return x.Mask
	}
	return 0
}

type FunctionControlSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//
	//	*FunctionControlSet_Single
	//	*FunctionControlSet_All
	//	*FunctionControlSet_ExitError
	Type isFunctionControlSet_Type `protobuf_oneof:"type"`
}

func (x *FunctionControlSet) Reset() {
	*x = FunctionControlSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_binaryIoTypeD_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FunctionControlSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FunctionControlSet) ProtoMessage() {}

func (x *FunctionControlSet) ProtoReflect() protoreflect.Message {
	mi := &file_binaryIoTypeD_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FunctionControlSet.ProtoReflect.Descriptor instead.
func (*FunctionControlSet) Descriptor() ([]byte, []int) {
	return file_binaryIoTypeD_proto_rawDescGZIP(), []int{11}
}

func (m *FunctionControlSet) GetType() isFunctionControlSet_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *FunctionControlSet) GetSingle() *SetSingle {
	if x, ok := x.GetType().(*FunctionControlSet_Single); ok {
		return x.Single
	}
	return nil
}

func (x *FunctionControlSet) GetAll() *SetAll {
	if x, ok := x.GetType().(*FunctionControlSet_All); ok {
		return x.All
	}
	return nil
}

func (x *FunctionControlSet) GetExitError() *SetExitError {
	if x, ok := x.GetType().(*FunctionControlSet_ExitError); ok {
		return x.ExitError
	}
	return nil
}

type isFunctionControlSet_Type interface {
	isFunctionControlSet_Type()
}

type FunctionControlSet_Single struct {
	Single *SetSingle `protobuf:"bytes,1,opt,name=single,proto3,oneof"`
}

type FunctionControlSet_All struct {
	All *SetAll `protobuf:"bytes,2,opt,name=all,proto3,oneof"`
}

type FunctionControlSet_ExitError struct {
	ExitError *SetExitError `protobuf:"bytes,3,opt,name=exit_error,json=exitError,proto3,oneof"`
}

func (*FunctionControlSet_Single) isFunctionControlSet_Type() {}

func (*FunctionControlSet_All) isFunctionControlSet_Type() {}

func (*FunctionControlSet_ExitError) isFunctionControlSet_Type() {}

type FunctionControlGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// binary coded map of input values. 0 means inactive, 1 means active, LSB is Input0
	// In case the input value is unknown, its value is reported as 0. The input value is invalid if
	// the diag NoSupplyVoltage bit is set.
	Inputs uint32 `protobuf:"fixed32,1,opt,name=inputs,proto3" json:"inputs,omitempty"`
	// diagnostic information for each channel, containing the ChannelDiag bits.
	// first diag corresponds to channel 0, second to channel 1, etc.
	Diag []uint32 `protobuf:"varint,2,rep,packed,name=diag,proto3" json:"diag,omitempty"`
}

func (x *FunctionControlGetResponse) Reset() {
	*x = FunctionControlGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_binaryIoTypeD_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FunctionControlGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FunctionControlGetResponse) ProtoMessage() {}

func (x *FunctionControlGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_binaryIoTypeD_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FunctionControlGetResponse.ProtoReflect.Descriptor instead.
func (*FunctionControlGetResponse) Descriptor() ([]byte, []int) {
	return file_binaryIoTypeD_proto_rawDescGZIP(), []int{12}
}

func (x *FunctionControlGetResponse) GetInputs() uint32 {
	if x != nil {
		return x.Inputs
	}
	return 0
}

func (x *FunctionControlGetResponse) GetDiag() []uint32 {
	if x != nil {
		return x.Diag
	}
	return nil
}

type SetAllResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetAllResponse) Reset() {
	*x = SetAllResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_binaryIoTypeD_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetAllResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAllResponse) ProtoMessage() {}

func (x *SetAllResponse) ProtoReflect() protoreflect.Message {
	mi := &file_binaryIoTypeD_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAllResponse.ProtoReflect.Descriptor instead.
func (*SetAllResponse) Descriptor() ([]byte, []int) {
	return file_binaryIoTypeD_proto_rawDescGZIP(), []int{13}
}

type SetSingleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetSingleResponse) Reset() {
	*x = SetSingleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_binaryIoTypeD_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetSingleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSingleResponse) ProtoMessage() {}

func (x *SetSingleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_binaryIoTypeD_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSingleResponse.ProtoReflect.Descriptor instead.
func (*SetSingleResponse) Descriptor() ([]byte, []int) {
	return file_binaryIoTypeD_proto_rawDescGZIP(), []int{14}
}

type SetExitErrorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetExitErrorResponse) Reset() {
	*x = SetExitErrorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_binaryIoTypeD_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetExitErrorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetExitErrorResponse) ProtoMessage() {}

func (x *SetExitErrorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_binaryIoTypeD_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetExitErrorResponse.ProtoReflect.Descriptor instead.
func (*SetExitErrorResponse) Descriptor() ([]byte, []int) {
	return file_binaryIoTypeD_proto_rawDescGZIP(), []int{15}
}

// FunctionControlSetResponse
type FunctionControlSetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//
	//	*FunctionControlSetResponse_Single
	//	*FunctionControlSetResponse_All
	//	*FunctionControlSetResponse_ExitError
	Type isFunctionControlSetResponse_Type `protobuf_oneof:"type"`
}

func (x *FunctionControlSetResponse) Reset() {
	*x = FunctionControlSetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_binaryIoTypeD_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FunctionControlSetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FunctionControlSetResponse) ProtoMessage() {}

func (x *FunctionControlSetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_binaryIoTypeD_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FunctionControlSetResponse.ProtoReflect.Descriptor instead.
func (*FunctionControlSetResponse) Descriptor() ([]byte, []int) {
	return file_binaryIoTypeD_proto_rawDescGZIP(), []int{16}
}

func (m *FunctionControlSetResponse) GetType() isFunctionControlSetResponse_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *FunctionControlSetResponse) GetSingle() *SetSingleResponse {
	if x, ok := x.GetType().(*FunctionControlSetResponse_Single); ok {
		return x.Single
	}
	return nil
}

func (x *FunctionControlSetResponse) GetAll() *SetAllResponse {
	if x, ok := x.GetType().(*FunctionControlSetResponse_All); ok {
		return x.All
	}
	return nil
}

func (x *FunctionControlSetResponse) GetExitError() *SetExitErrorResponse {
	if x, ok := x.GetType().(*FunctionControlSetResponse_ExitError); ok {
		return x.ExitError
	}
	return nil
}

type isFunctionControlSetResponse_Type interface {
	isFunctionControlSetResponse_Type()
}

type FunctionControlSetResponse_Single struct {
	Single *SetSingleResponse `protobuf:"bytes,1,opt,name=single,proto3,oneof"`
}

type FunctionControlSetResponse_All struct {
	All *SetAllResponse `protobuf:"bytes,2,opt,name=all,proto3,oneof"`
}

type FunctionControlSetResponse_ExitError struct {
	ExitError *SetExitErrorResponse `protobuf:"bytes,3,opt,name=exit_error,json=exitError,proto3,oneof"`
}

func (*FunctionControlSetResponse_Single) isFunctionControlSetResponse_Type() {}

func (*FunctionControlSetResponse_All) isFunctionControlSetResponse_Type() {}

func (*FunctionControlSetResponse_ExitError) isFunctionControlSetResponse_Type() {}

// ============= StreamControl ==================
type StreamControlStart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mask to define which channels are considered in the stream. 0 means don't send channels value, 1 means sent it
	// LSB is Input0
	// Defaults to all channels (0x0F)
	ChannelFilterMask uint32 `protobuf:"fixed32,1,opt,name=channelFilterMask,proto3" json:"channelFilterMask,omitempty"`
}

func (x *StreamControlStart) Reset() {
	*x = StreamControlStart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_binaryIoTypeD_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamControlStart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamControlStart) ProtoMessage() {}

func (x *StreamControlStart) ProtoReflect() protoreflect.Message {
	mi := &file_binaryIoTypeD_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamControlStart.ProtoReflect.Descriptor instead.
func (*StreamControlStart) Descriptor() ([]byte, []int) {
	return file_binaryIoTypeD_proto_rawDescGZIP(), []int{17}
}

func (x *StreamControlStart) GetChannelFilterMask() uint32 {
	if x != nil {
		return x.ChannelFilterMask
	}
	return 0
}

type Sample struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Timestamp for that specific channels sample. This is the time the sample was taken.
	// This timestamp is in microseconds since the start of the device and does not get synchronized with the clients time.
	Timestamp uint64 `protobuf:"fixed64,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Specifies the binary channel
	Channel uint32 `protobuf:"fixed32,2,opt,name=channel,proto3" json:"channel,omitempty"`
	// Specifies the binary channel value when the input value has changed.
	Value bool `protobuf:"varint,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Sample) Reset() {
	*x = Sample{}
	if protoimpl.UnsafeEnabled {
		mi := &file_binaryIoTypeD_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sample) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sample) ProtoMessage() {}

func (x *Sample) ProtoReflect() protoreflect.Message {
	mi := &file_binaryIoTypeD_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sample.ProtoReflect.Descriptor instead.
func (*Sample) Descriptor() ([]byte, []int) {
	return file_binaryIoTypeD_proto_rawDescGZIP(), []int{18}
}

func (x *Sample) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Sample) GetChannel() uint32 {
	if x != nil {
		return x.Channel
	}
	return 0
}

func (x *Sample) GetValue() bool {
	if x != nil {
		return x.Value
	}
	return false
}

type StreamData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Samples []*Sample `protobuf:"bytes,1,rep,name=samples,proto3" json:"samples,omitempty"`
}

func (x *StreamData) Reset() {
	*x = StreamData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_binaryIoTypeD_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamData) ProtoMessage() {}

func (x *StreamData) ProtoReflect() protoreflect.Message {
	mi := &file_binaryIoTypeD_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamData.ProtoReflect.Descriptor instead.
func (*StreamData) Descriptor() ([]byte, []int) {
	return file_binaryIoTypeD_proto_rawDescGZIP(), []int{19}
}

func (x *StreamData) GetSamples() []*Sample {
	if x != nil {
		return x.Samples
	}
	return nil
}

var File_binaryIoTypeD_proto protoreflect.FileDescriptor

var file_binaryIoTypeD_proto_rawDesc = []byte{
	0x0a, 0x13, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x49, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x44, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x49, 0x6f, 0x54,
	0x79, 0x70, 0x65, 0x44, 0x22, 0x91, 0x02, 0x0a, 0x0d, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x12, 0x2e, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a,
	0x2e, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x49, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x44, 0x2e, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x3c, 0x0a, 0x19, 0x6f, 0x76, 0x65, 0x72, 0x6c, 0x6f, 0x61, 0x64,
	0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x4d,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x19, 0x6f, 0x76, 0x65, 0x72, 0x6c, 0x6f, 0x61,
	0x64, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x4d, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x77, 0x61, 0x74, 0x63, 0x68, 0x64, 0x6f, 0x67, 0x54, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x4d, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x77,
	0x61, 0x74, 0x63, 0x68, 0x64, 0x6f, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x4d, 0x73,
	0x12, 0x26, 0x0a, 0x0e, 0x66, 0x72, 0x69, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x66, 0x72, 0x69, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x56, 0x0a, 0x10, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x12, 0x42, 0x0a, 0x0d,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x49, 0x6f, 0x54, 0x79,
	0x70, 0x65, 0x44, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x22, 0x1a, 0x0a, 0x18, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x12, 0x0a, 0x10,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x65, 0x74,
	0x22, 0x5e, 0x0a, 0x18, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x0d,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x49, 0x6f, 0x54, 0x79,
	0x70, 0x65, 0x44, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x22, 0x17, 0x0a, 0x15, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x22, 0x4b, 0x0a, 0x1d, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x07, 0x52, 0x10, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x22, 0x14, 0x0a, 0x12, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x47, 0x65, 0x74, 0x22, 0x3b, 0x0a, 0x09,
	0x53, 0x65, 0x74, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x07, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x34, 0x0a, 0x06, 0x53, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x07, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6d,
	0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x07, 0x52, 0x04, 0x6d, 0x61, 0x73, 0x6b, 0x22,
	0x22, 0x0a, 0x0c, 0x53, 0x65, 0x74, 0x45, 0x78, 0x69, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x07, 0x52, 0x04, 0x6d,
	0x61, 0x73, 0x6b, 0x22, 0xb9, 0x01, 0x0a, 0x12, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x65, 0x74, 0x12, 0x32, 0x0a, 0x06, 0x73, 0x69,
	0x6e, 0x67, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x69, 0x6e,
	0x61, 0x72, 0x79, 0x49, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x44, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x69,
	0x6e, 0x67, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x06, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x12, 0x29,
	0x0a, 0x03, 0x61, 0x6c, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x62, 0x69,
	0x6e, 0x61, 0x72, 0x79, 0x49, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x44, 0x2e, 0x53, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x48, 0x00, 0x52, 0x03, 0x61, 0x6c, 0x6c, 0x12, 0x3c, 0x0a, 0x0a, 0x65, 0x78, 0x69,
	0x74, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x49, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x44, 0x2e, 0x53, 0x65,
	0x74, 0x45, 0x78, 0x69, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x09, 0x65, 0x78,
	0x69, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22,
	0x48, 0x0a, 0x1a, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x07, 0x52, 0x06, 0x69,
	0x6e, 0x70, 0x75, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x69, 0x61, 0x67, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0d, 0x52, 0x04, 0x64, 0x69, 0x61, 0x67, 0x22, 0x10, 0x0a, 0x0e, 0x53, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x13, 0x0a, 0x11, 0x53,
	0x65, 0x74, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x16, 0x0a, 0x14, 0x53, 0x65, 0x74, 0x45, 0x78, 0x69, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xd9, 0x01, 0x0a, 0x1a, 0x46, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x06, 0x73, 0x69, 0x6e, 0x67, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79,
	0x49, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x44, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x69, 0x6e, 0x67, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x06, 0x73, 0x69, 0x6e,
	0x67, 0x6c, 0x65, 0x12, 0x31, 0x0a, 0x03, 0x61, 0x6c, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x49, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x44,
	0x2e, 0x53, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48,
	0x00, 0x52, 0x03, 0x61, 0x6c, 0x6c, 0x12, 0x44, 0x0a, 0x0a, 0x65, 0x78, 0x69, 0x74, 0x5f, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x6e,
	0x61, 0x72, 0x79, 0x49, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x44, 0x2e, 0x53, 0x65, 0x74, 0x45, 0x78,
	0x69, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48,
	0x00, 0x52, 0x09, 0x65, 0x78, 0x69, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x06, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x22, 0x42, 0x0a, 0x12, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4d, 0x61, 0x73, 0x6b, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x07, 0x52, 0x11, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x4d, 0x61, 0x73, 0x6b, 0x22, 0x56, 0x0a, 0x06, 0x53, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x07, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x3d, 0x0a, 0x0a, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2f,
	0x0a, 0x07, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x49, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x44, 0x2e,
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x07, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2a,
	0xa1, 0x01, 0x0a, 0x0b, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x6f, 0x64, 0x65, 0x12,
	0x22, 0x0a, 0x1e, 0x42, 0x49, 0x4e, 0x41, 0x52, 0x59, 0x49, 0x4f, 0x54, 0x59, 0x50, 0x45, 0x44,
	0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x5f, 0x4c, 0x4f, 0x57, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56,
	0x45, 0x10, 0x00, 0x12, 0x23, 0x0a, 0x1f, 0x42, 0x49, 0x4e, 0x41, 0x52, 0x59, 0x49, 0x4f, 0x54,
	0x59, 0x50, 0x45, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x5f, 0x48, 0x49, 0x47, 0x48, 0x5f,
	0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x01, 0x12, 0x23, 0x0a, 0x1f, 0x42, 0x49, 0x4e, 0x41,
	0x52, 0x59, 0x49, 0x4f, 0x54, 0x59, 0x50, 0x45, 0x44, 0x5f, 0x4f, 0x55, 0x54, 0x50, 0x55, 0x54,
	0x5f, 0x4c, 0x4f, 0x57, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x02, 0x12, 0x24, 0x0a,
	0x20, 0x42, 0x49, 0x4e, 0x41, 0x52, 0x59, 0x49, 0x4f, 0x54, 0x59, 0x50, 0x45, 0x44, 0x5f, 0x4f,
	0x55, 0x54, 0x50, 0x55, 0x54, 0x5f, 0x48, 0x49, 0x47, 0x48, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56,
	0x45, 0x10, 0x03, 0x2a, 0x3c, 0x0a, 0x0b, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x44, 0x69,
	0x61, 0x67, 0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x6f, 0x44, 0x69, 0x61, 0x67, 0x10, 0x00, 0x12, 0x13,
	0x0a, 0x0f, 0x4e, 0x6f, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67,
	0x65, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x6f, 0x61, 0x64, 0x10,
	0x02, 0x42, 0x12, 0x5a, 0x10, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x49, 0x6f, 0x54, 0x79, 0x70,
	0x65, 0x44, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_binaryIoTypeD_proto_rawDescOnce sync.Once
	file_binaryIoTypeD_proto_rawDescData = file_binaryIoTypeD_proto_rawDesc
)

func file_binaryIoTypeD_proto_rawDescGZIP() []byte {
	file_binaryIoTypeD_proto_rawDescOnce.Do(func() {
		file_binaryIoTypeD_proto_rawDescData = protoimpl.X.CompressGZIP(file_binaryIoTypeD_proto_rawDescData)
	})
	return file_binaryIoTypeD_proto_rawDescData
}

var file_binaryIoTypeD_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_binaryIoTypeD_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_binaryIoTypeD_proto_goTypes = []interface{}{
	(ChannelMode)(0),                      // 0: binaryIoTypeD.ChannelMode
	(ChannelDiag)(0),                      // 1: binaryIoTypeD.ChannelDiag
	(*ChannelConfig)(nil),                 // 2: binaryIoTypeD.ChannelConfig
	(*ConfigurationSet)(nil),              // 3: binaryIoTypeD.ConfigurationSet
	(*ConfigurationSetResponse)(nil),      // 4: binaryIoTypeD.ConfigurationSetResponse
	(*ConfigurationGet)(nil),              // 5: binaryIoTypeD.ConfigurationGet
	(*ConfigurationGetResponse)(nil),      // 6: binaryIoTypeD.ConfigurationGetResponse
	(*ConfigurationDescribe)(nil),         // 7: binaryIoTypeD.ConfigurationDescribe
	(*ConfigurationDescribeResponse)(nil), // 8: binaryIoTypeD.ConfigurationDescribeResponse
	(*FunctionControlGet)(nil),            // 9: binaryIoTypeD.FunctionControlGet
	(*SetSingle)(nil),                     // 10: binaryIoTypeD.SetSingle
	(*SetAll)(nil),                        // 11: binaryIoTypeD.SetAll
	(*SetExitError)(nil),                  // 12: binaryIoTypeD.SetExitError
	(*FunctionControlSet)(nil),            // 13: binaryIoTypeD.FunctionControlSet
	(*FunctionControlGetResponse)(nil),    // 14: binaryIoTypeD.FunctionControlGetResponse
	(*SetAllResponse)(nil),                // 15: binaryIoTypeD.SetAllResponse
	(*SetSingleResponse)(nil),             // 16: binaryIoTypeD.SetSingleResponse
	(*SetExitErrorResponse)(nil),          // 17: binaryIoTypeD.SetExitErrorResponse
	(*FunctionControlSetResponse)(nil),    // 18: binaryIoTypeD.FunctionControlSetResponse
	(*StreamControlStart)(nil),            // 19: binaryIoTypeD.StreamControlStart
	(*Sample)(nil),                        // 20: binaryIoTypeD.Sample
	(*StreamData)(nil),                    // 21: binaryIoTypeD.StreamData
}
var file_binaryIoTypeD_proto_depIdxs = []int32{
	0,  // 0: binaryIoTypeD.ChannelConfig.mode:type_name -> binaryIoTypeD.ChannelMode
	2,  // 1: binaryIoTypeD.ConfigurationSet.channelConfig:type_name -> binaryIoTypeD.ChannelConfig
	2,  // 2: binaryIoTypeD.ConfigurationGetResponse.channelConfig:type_name -> binaryIoTypeD.ChannelConfig
	10, // 3: binaryIoTypeD.FunctionControlSet.single:type_name -> binaryIoTypeD.SetSingle
	11, // 4: binaryIoTypeD.FunctionControlSet.all:type_name -> binaryIoTypeD.SetAll
	12, // 5: binaryIoTypeD.FunctionControlSet.exit_error:type_name -> binaryIoTypeD.SetExitError
	16, // 6: binaryIoTypeD.FunctionControlSetResponse.single:type_name -> binaryIoTypeD.SetSingleResponse
	15, // 7: binaryIoTypeD.FunctionControlSetResponse.all:type_name -> binaryIoTypeD.SetAllResponse
	17, // 8: binaryIoTypeD.FunctionControlSetResponse.exit_error:type_name -> binaryIoTypeD.SetExitErrorResponse
	20, // 9: binaryIoTypeD.StreamData.samples:type_name -> binaryIoTypeD.Sample
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_binaryIoTypeD_proto_init() }
func file_binaryIoTypeD_proto_init() {
	if File_binaryIoTypeD_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_binaryIoTypeD_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_binaryIoTypeD_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigurationSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_binaryIoTypeD_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigurationSetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_binaryIoTypeD_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigurationGet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_binaryIoTypeD_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigurationGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_binaryIoTypeD_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigurationDescribe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_binaryIoTypeD_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigurationDescribeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_binaryIoTypeD_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FunctionControlGet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_binaryIoTypeD_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetSingle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_binaryIoTypeD_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetAll); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_binaryIoTypeD_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetExitError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_binaryIoTypeD_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FunctionControlSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_binaryIoTypeD_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FunctionControlGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_binaryIoTypeD_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetAllResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_binaryIoTypeD_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetSingleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_binaryIoTypeD_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetExitErrorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_binaryIoTypeD_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FunctionControlSetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_binaryIoTypeD_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamControlStart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_binaryIoTypeD_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sample); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_binaryIoTypeD_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_binaryIoTypeD_proto_msgTypes[11].OneofWrappers = []interface{}{
		(*FunctionControlSet_Single)(nil),
		(*FunctionControlSet_All)(nil),
		(*FunctionControlSet_ExitError)(nil),
	}
	file_binaryIoTypeD_proto_msgTypes[16].OneofWrappers = []interface{}{
		(*FunctionControlSetResponse_Single)(nil),
		(*FunctionControlSetResponse_All)(nil),
		(*FunctionControlSetResponse_ExitError)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_binaryIoTypeD_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_binaryIoTypeD_proto_goTypes,
		DependencyIndexes: file_binaryIoTypeD_proto_depIdxs,
		EnumInfos:         file_binaryIoTypeD_proto_enumTypes,
		MessageInfos:      file_binaryIoTypeD_proto_msgTypes,
	}.Build()
	File_binaryIoTypeD_proto = out.File
	file_binaryIoTypeD_proto_rawDesc = nil
	file_binaryIoTypeD_proto_goTypes = nil
	file_binaryIoTypeD_proto_depIdxs = nil
}
