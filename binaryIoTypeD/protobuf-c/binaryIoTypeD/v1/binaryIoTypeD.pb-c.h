/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: binaryIoTypeD.proto */

#ifndef PROTOBUF_C_binaryIoTypeD_2eproto__INCLUDED
#define PROTOBUF_C_binaryIoTypeD_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003003 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _BinaryIoTypeD__ChannelConfig BinaryIoTypeD__ChannelConfig;
typedef struct _BinaryIoTypeD__ConfigurationSet BinaryIoTypeD__ConfigurationSet;
typedef struct _BinaryIoTypeD__ConfigurationSetResponse BinaryIoTypeD__ConfigurationSetResponse;
typedef struct _BinaryIoTypeD__ConfigurationGet BinaryIoTypeD__ConfigurationGet;
typedef struct _BinaryIoTypeD__ConfigurationGetResponse BinaryIoTypeD__ConfigurationGetResponse;
typedef struct _BinaryIoTypeD__ConfigurationDescribe BinaryIoTypeD__ConfigurationDescribe;
typedef struct _BinaryIoTypeD__ConfigurationDescribeResponse BinaryIoTypeD__ConfigurationDescribeResponse;
typedef struct _BinaryIoTypeD__FunctionControlGet BinaryIoTypeD__FunctionControlGet;
typedef struct _BinaryIoTypeD__SetSingle BinaryIoTypeD__SetSingle;
typedef struct _BinaryIoTypeD__SetAll BinaryIoTypeD__SetAll;
typedef struct _BinaryIoTypeD__SetExitError BinaryIoTypeD__SetExitError;
typedef struct _BinaryIoTypeD__FunctionControlSet BinaryIoTypeD__FunctionControlSet;
typedef struct _BinaryIoTypeD__FunctionControlGetResponse BinaryIoTypeD__FunctionControlGetResponse;
typedef struct _BinaryIoTypeD__SetAllResponse BinaryIoTypeD__SetAllResponse;
typedef struct _BinaryIoTypeD__SetSingleResponse BinaryIoTypeD__SetSingleResponse;
typedef struct _BinaryIoTypeD__SetExitErrorResponse BinaryIoTypeD__SetExitErrorResponse;
typedef struct _BinaryIoTypeD__FunctionControlSetResponse BinaryIoTypeD__FunctionControlSetResponse;
typedef struct _BinaryIoTypeD__StreamControlStart BinaryIoTypeD__StreamControlStart;
typedef struct _BinaryIoTypeD__Sample BinaryIoTypeD__Sample;
typedef struct _BinaryIoTypeD__StreamData BinaryIoTypeD__StreamData;


/* --- enums --- */

/*
 * ============= Configuration =================
 */
typedef enum _BinaryIoTypeD__ChannelMode {
  /*
   * configure as low active input channel
   */
  BINARY_IO_TYPE_D__CHANNEL_MODE__BINARYIOTYPED_INPUT_LOW_ACTIVE = 0,
  /*
   * configure as high active input channel
   */
  BINARY_IO_TYPE_D__CHANNEL_MODE__BINARYIOTYPED_INPUT_HIGH_ACTIVE = 1,
  /*
   * configure as low active output channel
   */
  BINARY_IO_TYPE_D__CHANNEL_MODE__BINARYIOTYPED_OUTPUT_LOW_ACTIVE = 2,
  /*
   * configure as high active output channel
   */
  BINARY_IO_TYPE_D__CHANNEL_MODE__BINARYIOTYPED_OUTPUT_HIGH_ACTIVE = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(BINARY_IO_TYPE_D__CHANNEL_MODE)
} BinaryIoTypeD__ChannelMode;
/*
 * Channel diagnostic bits. Multiple bits may be set at the same time.
 */
typedef enum _BinaryIoTypeD__ChannelDiag {
  BINARY_IO_TYPE_D__CHANNEL_DIAG__NoDiag = 0,
  /*
   * group supply voltage missing (input values can't be determined, output values can't be set)
   */
  BINARY_IO_TYPE_D__CHANNEL_DIAG__NoSupplyVoltage = 1,
  /*
   * channel or group overload (output is disabled)
   */
  BINARY_IO_TYPE_D__CHANNEL_DIAG__Overload = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(BINARY_IO_TYPE_D__CHANNEL_DIAG)
} BinaryIoTypeD__ChannelDiag;

/* --- messages --- */

struct  _BinaryIoTypeD__ChannelConfig
{
  ProtobufCMessage base;
  /*
   * channel number (0..n)
   */
  int32_t channel;
  /*
   * direction and type
   */
  BinaryIoTypeD__ChannelMode mode;
  /*
   * If channel is configured for output, initialValue defines the value after initialization
   * and after the watchdog has fired
   */
  protobuf_c_boolean initialvalue;
  /*
   * overload recovery timeout in ms. 
   * The channel will be disabled for this time after an overload. A 0 uses the default value.
   */
  int32_t overloadrecoverytimeoutms;
  /*
   * watchdog timeout in ms. if not 0, actives the watchdog for this channel
   */
  int32_t watchdogtimeoutms;
  /*
   * fritting current enable
   */
  protobuf_c_boolean frittingenable;
};
#define BINARY_IO_TYPE_D__CHANNEL_CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&binary_io_type_d__channel_config__descriptor) \
    , 0, BINARY_IO_TYPE_D__CHANNEL_MODE__BINARYIOTYPED_INPUT_LOW_ACTIVE, 0, 0, 0, 0 }


struct  _BinaryIoTypeD__ConfigurationSet
{
  ProtobufCMessage base;
  /*
   * per channel configuration (one per channel/pin). The channel number is part of each ChannelConfig entry.
   * missing channels remain unchanged
   */
  size_t n_channelconfig;
  BinaryIoTypeD__ChannelConfig **channelconfig;
};
#define BINARY_IO_TYPE_D__CONFIGURATION_SET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&binary_io_type_d__configuration_set__descriptor) \
    , 0,NULL }


struct  _BinaryIoTypeD__ConfigurationSetResponse
{
  ProtobufCMessage base;
};
#define BINARY_IO_TYPE_D__CONFIGURATION_SET_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&binary_io_type_d__configuration_set_response__descriptor) \
     }


struct  _BinaryIoTypeD__ConfigurationGet
{
  ProtobufCMessage base;
};
#define BINARY_IO_TYPE_D__CONFIGURATION_GET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&binary_io_type_d__configuration_get__descriptor) \
     }


/*
 * Returns the current hardware configuration
 */
struct  _BinaryIoTypeD__ConfigurationGetResponse
{
  ProtobufCMessage base;
  /*
   * per channel configuration (one per channel/pin)
   */
  size_t n_channelconfig;
  BinaryIoTypeD__ChannelConfig **channelconfig;
};
#define BINARY_IO_TYPE_D__CONFIGURATION_GET_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&binary_io_type_d__configuration_get_response__descriptor) \
    , 0,NULL }


struct  _BinaryIoTypeD__ConfigurationDescribe
{
  ProtobufCMessage base;
};
#define BINARY_IO_TYPE_D__CONFIGURATION_DESCRIBE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&binary_io_type_d__configuration_describe__descriptor) \
     }


struct  _BinaryIoTypeD__ConfigurationDescribeResponse
{
  ProtobufCMessage base;
  uint32_t numberofchannels;
};
#define BINARY_IO_TYPE_D__CONFIGURATION_DESCRIBE_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&binary_io_type_d__configuration_describe_response__descriptor) \
    , 0 }


/*
 * get value of all binary channels
 */
struct  _BinaryIoTypeD__FunctionControlGet
{
  ProtobufCMessage base;
};
#define BINARY_IO_TYPE_D__FUNCTION_CONTROL_GET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&binary_io_type_d__function_control_get__descriptor) \
     }


/*
 * Sets the value of a single binary channel
 */
struct  _BinaryIoTypeD__SetSingle
{
  ProtobufCMessage base;
  /*
   * Number of the binary output channel
   */
  uint32_t channel;
  /*
   * State of the binary output channel. 0 means inactive, 1 means active
   */
  protobuf_c_boolean state;
};
#define BINARY_IO_TYPE_D__SET_SINGLE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&binary_io_type_d__set_single__descriptor) \
    , 0, 0 }


/*
 * Sets all binary channels
 */
struct  _BinaryIoTypeD__SetAll
{
  ProtobufCMessage base;
  /*
   * binary coded map of input values. 0 means inactive, 1 means active, LSB is Output0
   */
  uint32_t values;
  /*
   * mask to define which channels are affected by the set all command. 0 means not set, 1 means set, LSB is Output0
   */
  uint32_t mask;
};
#define BINARY_IO_TYPE_D__SET_ALL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&binary_io_type_d__set_all__descriptor) \
    , 0, 0 }


/*
 * Try to recover from error state
 */
struct  _BinaryIoTypeD__SetExitError
{
  ProtobufCMessage base;
  /*
   * clear error state on channels whose bit is set
   */
  uint32_t mask;
};
#define BINARY_IO_TYPE_D__SET_EXIT_ERROR__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&binary_io_type_d__set_exit_error__descriptor) \
    , 0 }


typedef enum {
  BINARY_IO_TYPE_D__FUNCTION_CONTROL_SET__TYPE__NOT_SET = 0,
  BINARY_IO_TYPE_D__FUNCTION_CONTROL_SET__TYPE_SINGLE = 1,
  BINARY_IO_TYPE_D__FUNCTION_CONTROL_SET__TYPE_ALL = 2,
  BINARY_IO_TYPE_D__FUNCTION_CONTROL_SET__TYPE_EXIT_ERROR = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(BINARY_IO_TYPE_D__FUNCTION_CONTROL_SET__TYPE)
} BinaryIoTypeD__FunctionControlSet__TypeCase;

struct  _BinaryIoTypeD__FunctionControlSet
{
  ProtobufCMessage base;
  BinaryIoTypeD__FunctionControlSet__TypeCase type_case;
  union {
    BinaryIoTypeD__SetSingle *single;
    BinaryIoTypeD__SetAll *all;
    BinaryIoTypeD__SetExitError *exit_error;
  };
};
#define BINARY_IO_TYPE_D__FUNCTION_CONTROL_SET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&binary_io_type_d__function_control_set__descriptor) \
    , BINARY_IO_TYPE_D__FUNCTION_CONTROL_SET__TYPE__NOT_SET, {0} }


struct  _BinaryIoTypeD__FunctionControlGetResponse
{
  ProtobufCMessage base;
  /*
   * binary coded map of input values. 0 means inactive, 1 means active, LSB is Input0
   * In case the input value is unknown, its value is reported as 0. The input value is invalid if
   * the diag NoSupplyVoltage bit is set.
   */
  uint32_t inputs;
  /*
   * diagnostic information for each channel, containing the ChannelDiag bits.
   * first diag corresponds to channel 0, second to channel 1, etc.
   */
  size_t n_diag;
  uint32_t *diag;
};
#define BINARY_IO_TYPE_D__FUNCTION_CONTROL_GET_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&binary_io_type_d__function_control_get_response__descriptor) \
    , 0, 0,NULL }


struct  _BinaryIoTypeD__SetAllResponse
{
  ProtobufCMessage base;
};
#define BINARY_IO_TYPE_D__SET_ALL_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&binary_io_type_d__set_all_response__descriptor) \
     }


struct  _BinaryIoTypeD__SetSingleResponse
{
  ProtobufCMessage base;
};
#define BINARY_IO_TYPE_D__SET_SINGLE_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&binary_io_type_d__set_single_response__descriptor) \
     }


struct  _BinaryIoTypeD__SetExitErrorResponse
{
  ProtobufCMessage base;
};
#define BINARY_IO_TYPE_D__SET_EXIT_ERROR_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&binary_io_type_d__set_exit_error_response__descriptor) \
     }


typedef enum {
  BINARY_IO_TYPE_D__FUNCTION_CONTROL_SET_RESPONSE__TYPE__NOT_SET = 0,
  BINARY_IO_TYPE_D__FUNCTION_CONTROL_SET_RESPONSE__TYPE_SINGLE = 1,
  BINARY_IO_TYPE_D__FUNCTION_CONTROL_SET_RESPONSE__TYPE_ALL = 2,
  BINARY_IO_TYPE_D__FUNCTION_CONTROL_SET_RESPONSE__TYPE_EXIT_ERROR = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(BINARY_IO_TYPE_D__FUNCTION_CONTROL_SET_RESPONSE__TYPE)
} BinaryIoTypeD__FunctionControlSetResponse__TypeCase;

/*
 * FunctionControlSetResponse 
 */
struct  _BinaryIoTypeD__FunctionControlSetResponse
{
  ProtobufCMessage base;
  BinaryIoTypeD__FunctionControlSetResponse__TypeCase type_case;
  union {
    BinaryIoTypeD__SetSingleResponse *single;
    BinaryIoTypeD__SetAllResponse *all;
    BinaryIoTypeD__SetExitErrorResponse *exit_error;
  };
};
#define BINARY_IO_TYPE_D__FUNCTION_CONTROL_SET_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&binary_io_type_d__function_control_set_response__descriptor) \
    , BINARY_IO_TYPE_D__FUNCTION_CONTROL_SET_RESPONSE__TYPE__NOT_SET, {0} }


/*
 * ============= StreamControl ==================
 */
struct  _BinaryIoTypeD__StreamControlStart
{
  ProtobufCMessage base;
};
#define BINARY_IO_TYPE_D__STREAM_CONTROL_START__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&binary_io_type_d__stream_control_start__descriptor) \
     }


struct  _BinaryIoTypeD__Sample
{
  ProtobufCMessage base;
};
#define BINARY_IO_TYPE_D__SAMPLE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&binary_io_type_d__sample__descriptor) \
     }


struct  _BinaryIoTypeD__StreamData
{
  ProtobufCMessage base;
};
#define BINARY_IO_TYPE_D__STREAM_DATA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&binary_io_type_d__stream_data__descriptor) \
     }


/* BinaryIoTypeD__ChannelConfig methods */
void   binary_io_type_d__channel_config__init
                     (BinaryIoTypeD__ChannelConfig         *message);
size_t binary_io_type_d__channel_config__get_packed_size
                     (const BinaryIoTypeD__ChannelConfig   *message);
size_t binary_io_type_d__channel_config__pack
                     (const BinaryIoTypeD__ChannelConfig   *message,
                      uint8_t             *out);
size_t binary_io_type_d__channel_config__pack_to_buffer
                     (const BinaryIoTypeD__ChannelConfig   *message,
                      ProtobufCBuffer     *buffer);
BinaryIoTypeD__ChannelConfig *
       binary_io_type_d__channel_config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   binary_io_type_d__channel_config__free_unpacked
                     (BinaryIoTypeD__ChannelConfig *message,
                      ProtobufCAllocator *allocator);
/* BinaryIoTypeD__ConfigurationSet methods */
void   binary_io_type_d__configuration_set__init
                     (BinaryIoTypeD__ConfigurationSet         *message);
size_t binary_io_type_d__configuration_set__get_packed_size
                     (const BinaryIoTypeD__ConfigurationSet   *message);
size_t binary_io_type_d__configuration_set__pack
                     (const BinaryIoTypeD__ConfigurationSet   *message,
                      uint8_t             *out);
size_t binary_io_type_d__configuration_set__pack_to_buffer
                     (const BinaryIoTypeD__ConfigurationSet   *message,
                      ProtobufCBuffer     *buffer);
BinaryIoTypeD__ConfigurationSet *
       binary_io_type_d__configuration_set__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   binary_io_type_d__configuration_set__free_unpacked
                     (BinaryIoTypeD__ConfigurationSet *message,
                      ProtobufCAllocator *allocator);
/* BinaryIoTypeD__ConfigurationSetResponse methods */
void   binary_io_type_d__configuration_set_response__init
                     (BinaryIoTypeD__ConfigurationSetResponse         *message);
size_t binary_io_type_d__configuration_set_response__get_packed_size
                     (const BinaryIoTypeD__ConfigurationSetResponse   *message);
size_t binary_io_type_d__configuration_set_response__pack
                     (const BinaryIoTypeD__ConfigurationSetResponse   *message,
                      uint8_t             *out);
size_t binary_io_type_d__configuration_set_response__pack_to_buffer
                     (const BinaryIoTypeD__ConfigurationSetResponse   *message,
                      ProtobufCBuffer     *buffer);
BinaryIoTypeD__ConfigurationSetResponse *
       binary_io_type_d__configuration_set_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   binary_io_type_d__configuration_set_response__free_unpacked
                     (BinaryIoTypeD__ConfigurationSetResponse *message,
                      ProtobufCAllocator *allocator);
/* BinaryIoTypeD__ConfigurationGet methods */
void   binary_io_type_d__configuration_get__init
                     (BinaryIoTypeD__ConfigurationGet         *message);
size_t binary_io_type_d__configuration_get__get_packed_size
                     (const BinaryIoTypeD__ConfigurationGet   *message);
size_t binary_io_type_d__configuration_get__pack
                     (const BinaryIoTypeD__ConfigurationGet   *message,
                      uint8_t             *out);
size_t binary_io_type_d__configuration_get__pack_to_buffer
                     (const BinaryIoTypeD__ConfigurationGet   *message,
                      ProtobufCBuffer     *buffer);
BinaryIoTypeD__ConfigurationGet *
       binary_io_type_d__configuration_get__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   binary_io_type_d__configuration_get__free_unpacked
                     (BinaryIoTypeD__ConfigurationGet *message,
                      ProtobufCAllocator *allocator);
/* BinaryIoTypeD__ConfigurationGetResponse methods */
void   binary_io_type_d__configuration_get_response__init
                     (BinaryIoTypeD__ConfigurationGetResponse         *message);
size_t binary_io_type_d__configuration_get_response__get_packed_size
                     (const BinaryIoTypeD__ConfigurationGetResponse   *message);
size_t binary_io_type_d__configuration_get_response__pack
                     (const BinaryIoTypeD__ConfigurationGetResponse   *message,
                      uint8_t             *out);
size_t binary_io_type_d__configuration_get_response__pack_to_buffer
                     (const BinaryIoTypeD__ConfigurationGetResponse   *message,
                      ProtobufCBuffer     *buffer);
BinaryIoTypeD__ConfigurationGetResponse *
       binary_io_type_d__configuration_get_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   binary_io_type_d__configuration_get_response__free_unpacked
                     (BinaryIoTypeD__ConfigurationGetResponse *message,
                      ProtobufCAllocator *allocator);
/* BinaryIoTypeD__ConfigurationDescribe methods */
void   binary_io_type_d__configuration_describe__init
                     (BinaryIoTypeD__ConfigurationDescribe         *message);
size_t binary_io_type_d__configuration_describe__get_packed_size
                     (const BinaryIoTypeD__ConfigurationDescribe   *message);
size_t binary_io_type_d__configuration_describe__pack
                     (const BinaryIoTypeD__ConfigurationDescribe   *message,
                      uint8_t             *out);
size_t binary_io_type_d__configuration_describe__pack_to_buffer
                     (const BinaryIoTypeD__ConfigurationDescribe   *message,
                      ProtobufCBuffer     *buffer);
BinaryIoTypeD__ConfigurationDescribe *
       binary_io_type_d__configuration_describe__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   binary_io_type_d__configuration_describe__free_unpacked
                     (BinaryIoTypeD__ConfigurationDescribe *message,
                      ProtobufCAllocator *allocator);
/* BinaryIoTypeD__ConfigurationDescribeResponse methods */
void   binary_io_type_d__configuration_describe_response__init
                     (BinaryIoTypeD__ConfigurationDescribeResponse         *message);
size_t binary_io_type_d__configuration_describe_response__get_packed_size
                     (const BinaryIoTypeD__ConfigurationDescribeResponse   *message);
size_t binary_io_type_d__configuration_describe_response__pack
                     (const BinaryIoTypeD__ConfigurationDescribeResponse   *message,
                      uint8_t             *out);
size_t binary_io_type_d__configuration_describe_response__pack_to_buffer
                     (const BinaryIoTypeD__ConfigurationDescribeResponse   *message,
                      ProtobufCBuffer     *buffer);
BinaryIoTypeD__ConfigurationDescribeResponse *
       binary_io_type_d__configuration_describe_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   binary_io_type_d__configuration_describe_response__free_unpacked
                     (BinaryIoTypeD__ConfigurationDescribeResponse *message,
                      ProtobufCAllocator *allocator);
/* BinaryIoTypeD__FunctionControlGet methods */
void   binary_io_type_d__function_control_get__init
                     (BinaryIoTypeD__FunctionControlGet         *message);
size_t binary_io_type_d__function_control_get__get_packed_size
                     (const BinaryIoTypeD__FunctionControlGet   *message);
size_t binary_io_type_d__function_control_get__pack
                     (const BinaryIoTypeD__FunctionControlGet   *message,
                      uint8_t             *out);
size_t binary_io_type_d__function_control_get__pack_to_buffer
                     (const BinaryIoTypeD__FunctionControlGet   *message,
                      ProtobufCBuffer     *buffer);
BinaryIoTypeD__FunctionControlGet *
       binary_io_type_d__function_control_get__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   binary_io_type_d__function_control_get__free_unpacked
                     (BinaryIoTypeD__FunctionControlGet *message,
                      ProtobufCAllocator *allocator);
/* BinaryIoTypeD__SetSingle methods */
void   binary_io_type_d__set_single__init
                     (BinaryIoTypeD__SetSingle         *message);
size_t binary_io_type_d__set_single__get_packed_size
                     (const BinaryIoTypeD__SetSingle   *message);
size_t binary_io_type_d__set_single__pack
                     (const BinaryIoTypeD__SetSingle   *message,
                      uint8_t             *out);
size_t binary_io_type_d__set_single__pack_to_buffer
                     (const BinaryIoTypeD__SetSingle   *message,
                      ProtobufCBuffer     *buffer);
BinaryIoTypeD__SetSingle *
       binary_io_type_d__set_single__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   binary_io_type_d__set_single__free_unpacked
                     (BinaryIoTypeD__SetSingle *message,
                      ProtobufCAllocator *allocator);
/* BinaryIoTypeD__SetAll methods */
void   binary_io_type_d__set_all__init
                     (BinaryIoTypeD__SetAll         *message);
size_t binary_io_type_d__set_all__get_packed_size
                     (const BinaryIoTypeD__SetAll   *message);
size_t binary_io_type_d__set_all__pack
                     (const BinaryIoTypeD__SetAll   *message,
                      uint8_t             *out);
size_t binary_io_type_d__set_all__pack_to_buffer
                     (const BinaryIoTypeD__SetAll   *message,
                      ProtobufCBuffer     *buffer);
BinaryIoTypeD__SetAll *
       binary_io_type_d__set_all__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   binary_io_type_d__set_all__free_unpacked
                     (BinaryIoTypeD__SetAll *message,
                      ProtobufCAllocator *allocator);
/* BinaryIoTypeD__SetExitError methods */
void   binary_io_type_d__set_exit_error__init
                     (BinaryIoTypeD__SetExitError         *message);
size_t binary_io_type_d__set_exit_error__get_packed_size
                     (const BinaryIoTypeD__SetExitError   *message);
size_t binary_io_type_d__set_exit_error__pack
                     (const BinaryIoTypeD__SetExitError   *message,
                      uint8_t             *out);
size_t binary_io_type_d__set_exit_error__pack_to_buffer
                     (const BinaryIoTypeD__SetExitError   *message,
                      ProtobufCBuffer     *buffer);
BinaryIoTypeD__SetExitError *
       binary_io_type_d__set_exit_error__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   binary_io_type_d__set_exit_error__free_unpacked
                     (BinaryIoTypeD__SetExitError *message,
                      ProtobufCAllocator *allocator);
/* BinaryIoTypeD__FunctionControlSet methods */
void   binary_io_type_d__function_control_set__init
                     (BinaryIoTypeD__FunctionControlSet         *message);
size_t binary_io_type_d__function_control_set__get_packed_size
                     (const BinaryIoTypeD__FunctionControlSet   *message);
size_t binary_io_type_d__function_control_set__pack
                     (const BinaryIoTypeD__FunctionControlSet   *message,
                      uint8_t             *out);
size_t binary_io_type_d__function_control_set__pack_to_buffer
                     (const BinaryIoTypeD__FunctionControlSet   *message,
                      ProtobufCBuffer     *buffer);
BinaryIoTypeD__FunctionControlSet *
       binary_io_type_d__function_control_set__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   binary_io_type_d__function_control_set__free_unpacked
                     (BinaryIoTypeD__FunctionControlSet *message,
                      ProtobufCAllocator *allocator);
/* BinaryIoTypeD__FunctionControlGetResponse methods */
void   binary_io_type_d__function_control_get_response__init
                     (BinaryIoTypeD__FunctionControlGetResponse         *message);
size_t binary_io_type_d__function_control_get_response__get_packed_size
                     (const BinaryIoTypeD__FunctionControlGetResponse   *message);
size_t binary_io_type_d__function_control_get_response__pack
                     (const BinaryIoTypeD__FunctionControlGetResponse   *message,
                      uint8_t             *out);
size_t binary_io_type_d__function_control_get_response__pack_to_buffer
                     (const BinaryIoTypeD__FunctionControlGetResponse   *message,
                      ProtobufCBuffer     *buffer);
BinaryIoTypeD__FunctionControlGetResponse *
       binary_io_type_d__function_control_get_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   binary_io_type_d__function_control_get_response__free_unpacked
                     (BinaryIoTypeD__FunctionControlGetResponse *message,
                      ProtobufCAllocator *allocator);
/* BinaryIoTypeD__SetAllResponse methods */
void   binary_io_type_d__set_all_response__init
                     (BinaryIoTypeD__SetAllResponse         *message);
size_t binary_io_type_d__set_all_response__get_packed_size
                     (const BinaryIoTypeD__SetAllResponse   *message);
size_t binary_io_type_d__set_all_response__pack
                     (const BinaryIoTypeD__SetAllResponse   *message,
                      uint8_t             *out);
size_t binary_io_type_d__set_all_response__pack_to_buffer
                     (const BinaryIoTypeD__SetAllResponse   *message,
                      ProtobufCBuffer     *buffer);
BinaryIoTypeD__SetAllResponse *
       binary_io_type_d__set_all_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   binary_io_type_d__set_all_response__free_unpacked
                     (BinaryIoTypeD__SetAllResponse *message,
                      ProtobufCAllocator *allocator);
/* BinaryIoTypeD__SetSingleResponse methods */
void   binary_io_type_d__set_single_response__init
                     (BinaryIoTypeD__SetSingleResponse         *message);
size_t binary_io_type_d__set_single_response__get_packed_size
                     (const BinaryIoTypeD__SetSingleResponse   *message);
size_t binary_io_type_d__set_single_response__pack
                     (const BinaryIoTypeD__SetSingleResponse   *message,
                      uint8_t             *out);
size_t binary_io_type_d__set_single_response__pack_to_buffer
                     (const BinaryIoTypeD__SetSingleResponse   *message,
                      ProtobufCBuffer     *buffer);
BinaryIoTypeD__SetSingleResponse *
       binary_io_type_d__set_single_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   binary_io_type_d__set_single_response__free_unpacked
                     (BinaryIoTypeD__SetSingleResponse *message,
                      ProtobufCAllocator *allocator);
/* BinaryIoTypeD__SetExitErrorResponse methods */
void   binary_io_type_d__set_exit_error_response__init
                     (BinaryIoTypeD__SetExitErrorResponse         *message);
size_t binary_io_type_d__set_exit_error_response__get_packed_size
                     (const BinaryIoTypeD__SetExitErrorResponse   *message);
size_t binary_io_type_d__set_exit_error_response__pack
                     (const BinaryIoTypeD__SetExitErrorResponse   *message,
                      uint8_t             *out);
size_t binary_io_type_d__set_exit_error_response__pack_to_buffer
                     (const BinaryIoTypeD__SetExitErrorResponse   *message,
                      ProtobufCBuffer     *buffer);
BinaryIoTypeD__SetExitErrorResponse *
       binary_io_type_d__set_exit_error_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   binary_io_type_d__set_exit_error_response__free_unpacked
                     (BinaryIoTypeD__SetExitErrorResponse *message,
                      ProtobufCAllocator *allocator);
/* BinaryIoTypeD__FunctionControlSetResponse methods */
void   binary_io_type_d__function_control_set_response__init
                     (BinaryIoTypeD__FunctionControlSetResponse         *message);
size_t binary_io_type_d__function_control_set_response__get_packed_size
                     (const BinaryIoTypeD__FunctionControlSetResponse   *message);
size_t binary_io_type_d__function_control_set_response__pack
                     (const BinaryIoTypeD__FunctionControlSetResponse   *message,
                      uint8_t             *out);
size_t binary_io_type_d__function_control_set_response__pack_to_buffer
                     (const BinaryIoTypeD__FunctionControlSetResponse   *message,
                      ProtobufCBuffer     *buffer);
BinaryIoTypeD__FunctionControlSetResponse *
       binary_io_type_d__function_control_set_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   binary_io_type_d__function_control_set_response__free_unpacked
                     (BinaryIoTypeD__FunctionControlSetResponse *message,
                      ProtobufCAllocator *allocator);
/* BinaryIoTypeD__StreamControlStart methods */
void   binary_io_type_d__stream_control_start__init
                     (BinaryIoTypeD__StreamControlStart         *message);
size_t binary_io_type_d__stream_control_start__get_packed_size
                     (const BinaryIoTypeD__StreamControlStart   *message);
size_t binary_io_type_d__stream_control_start__pack
                     (const BinaryIoTypeD__StreamControlStart   *message,
                      uint8_t             *out);
size_t binary_io_type_d__stream_control_start__pack_to_buffer
                     (const BinaryIoTypeD__StreamControlStart   *message,
                      ProtobufCBuffer     *buffer);
BinaryIoTypeD__StreamControlStart *
       binary_io_type_d__stream_control_start__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   binary_io_type_d__stream_control_start__free_unpacked
                     (BinaryIoTypeD__StreamControlStart *message,
                      ProtobufCAllocator *allocator);
/* BinaryIoTypeD__Sample methods */
void   binary_io_type_d__sample__init
                     (BinaryIoTypeD__Sample         *message);
size_t binary_io_type_d__sample__get_packed_size
                     (const BinaryIoTypeD__Sample   *message);
size_t binary_io_type_d__sample__pack
                     (const BinaryIoTypeD__Sample   *message,
                      uint8_t             *out);
size_t binary_io_type_d__sample__pack_to_buffer
                     (const BinaryIoTypeD__Sample   *message,
                      ProtobufCBuffer     *buffer);
BinaryIoTypeD__Sample *
       binary_io_type_d__sample__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   binary_io_type_d__sample__free_unpacked
                     (BinaryIoTypeD__Sample *message,
                      ProtobufCAllocator *allocator);
/* BinaryIoTypeD__StreamData methods */
void   binary_io_type_d__stream_data__init
                     (BinaryIoTypeD__StreamData         *message);
size_t binary_io_type_d__stream_data__get_packed_size
                     (const BinaryIoTypeD__StreamData   *message);
size_t binary_io_type_d__stream_data__pack
                     (const BinaryIoTypeD__StreamData   *message,
                      uint8_t             *out);
size_t binary_io_type_d__stream_data__pack_to_buffer
                     (const BinaryIoTypeD__StreamData   *message,
                      ProtobufCBuffer     *buffer);
BinaryIoTypeD__StreamData *
       binary_io_type_d__stream_data__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   binary_io_type_d__stream_data__free_unpacked
                     (BinaryIoTypeD__StreamData *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*BinaryIoTypeD__ChannelConfig_Closure)
                 (const BinaryIoTypeD__ChannelConfig *message,
                  void *closure_data);
typedef void (*BinaryIoTypeD__ConfigurationSet_Closure)
                 (const BinaryIoTypeD__ConfigurationSet *message,
                  void *closure_data);
typedef void (*BinaryIoTypeD__ConfigurationSetResponse_Closure)
                 (const BinaryIoTypeD__ConfigurationSetResponse *message,
                  void *closure_data);
typedef void (*BinaryIoTypeD__ConfigurationGet_Closure)
                 (const BinaryIoTypeD__ConfigurationGet *message,
                  void *closure_data);
typedef void (*BinaryIoTypeD__ConfigurationGetResponse_Closure)
                 (const BinaryIoTypeD__ConfigurationGetResponse *message,
                  void *closure_data);
typedef void (*BinaryIoTypeD__ConfigurationDescribe_Closure)
                 (const BinaryIoTypeD__ConfigurationDescribe *message,
                  void *closure_data);
typedef void (*BinaryIoTypeD__ConfigurationDescribeResponse_Closure)
                 (const BinaryIoTypeD__ConfigurationDescribeResponse *message,
                  void *closure_data);
typedef void (*BinaryIoTypeD__FunctionControlGet_Closure)
                 (const BinaryIoTypeD__FunctionControlGet *message,
                  void *closure_data);
typedef void (*BinaryIoTypeD__SetSingle_Closure)
                 (const BinaryIoTypeD__SetSingle *message,
                  void *closure_data);
typedef void (*BinaryIoTypeD__SetAll_Closure)
                 (const BinaryIoTypeD__SetAll *message,
                  void *closure_data);
typedef void (*BinaryIoTypeD__SetExitError_Closure)
                 (const BinaryIoTypeD__SetExitError *message,
                  void *closure_data);
typedef void (*BinaryIoTypeD__FunctionControlSet_Closure)
                 (const BinaryIoTypeD__FunctionControlSet *message,
                  void *closure_data);
typedef void (*BinaryIoTypeD__FunctionControlGetResponse_Closure)
                 (const BinaryIoTypeD__FunctionControlGetResponse *message,
                  void *closure_data);
typedef void (*BinaryIoTypeD__SetAllResponse_Closure)
                 (const BinaryIoTypeD__SetAllResponse *message,
                  void *closure_data);
typedef void (*BinaryIoTypeD__SetSingleResponse_Closure)
                 (const BinaryIoTypeD__SetSingleResponse *message,
                  void *closure_data);
typedef void (*BinaryIoTypeD__SetExitErrorResponse_Closure)
                 (const BinaryIoTypeD__SetExitErrorResponse *message,
                  void *closure_data);
typedef void (*BinaryIoTypeD__FunctionControlSetResponse_Closure)
                 (const BinaryIoTypeD__FunctionControlSetResponse *message,
                  void *closure_data);
typedef void (*BinaryIoTypeD__StreamControlStart_Closure)
                 (const BinaryIoTypeD__StreamControlStart *message,
                  void *closure_data);
typedef void (*BinaryIoTypeD__Sample_Closure)
                 (const BinaryIoTypeD__Sample *message,
                  void *closure_data);
typedef void (*BinaryIoTypeD__StreamData_Closure)
                 (const BinaryIoTypeD__StreamData *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    binary_io_type_d__channel_mode__descriptor;
extern const ProtobufCEnumDescriptor    binary_io_type_d__channel_diag__descriptor;
extern const ProtobufCMessageDescriptor binary_io_type_d__channel_config__descriptor;
extern const ProtobufCMessageDescriptor binary_io_type_d__configuration_set__descriptor;
extern const ProtobufCMessageDescriptor binary_io_type_d__configuration_set_response__descriptor;
extern const ProtobufCMessageDescriptor binary_io_type_d__configuration_get__descriptor;
extern const ProtobufCMessageDescriptor binary_io_type_d__configuration_get_response__descriptor;
extern const ProtobufCMessageDescriptor binary_io_type_d__configuration_describe__descriptor;
extern const ProtobufCMessageDescriptor binary_io_type_d__configuration_describe_response__descriptor;
extern const ProtobufCMessageDescriptor binary_io_type_d__function_control_get__descriptor;
extern const ProtobufCMessageDescriptor binary_io_type_d__set_single__descriptor;
extern const ProtobufCMessageDescriptor binary_io_type_d__set_all__descriptor;
extern const ProtobufCMessageDescriptor binary_io_type_d__set_exit_error__descriptor;
extern const ProtobufCMessageDescriptor binary_io_type_d__function_control_set__descriptor;
extern const ProtobufCMessageDescriptor binary_io_type_d__function_control_get_response__descriptor;
extern const ProtobufCMessageDescriptor binary_io_type_d__set_all_response__descriptor;
extern const ProtobufCMessageDescriptor binary_io_type_d__set_single_response__descriptor;
extern const ProtobufCMessageDescriptor binary_io_type_d__set_exit_error_response__descriptor;
extern const ProtobufCMessageDescriptor binary_io_type_d__function_control_set_response__descriptor;
extern const ProtobufCMessageDescriptor binary_io_type_d__stream_control_start__descriptor;
extern const ProtobufCMessageDescriptor binary_io_type_d__sample__descriptor;
extern const ProtobufCMessageDescriptor binary_io_type_d__stream_data__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_binaryIoTypeD_2eproto__INCLUDED */
