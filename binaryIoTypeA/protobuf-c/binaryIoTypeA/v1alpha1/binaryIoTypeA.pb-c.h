/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: binaryIoTypeA.proto */

#ifndef PROTOBUF_C_binaryIoTypeA_2eproto__INCLUDED
#define PROTOBUF_C_binaryIoTypeA_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003003 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _BinaryIoTypeA__ConfigurationSet BinaryIoTypeA__ConfigurationSet;
typedef struct _BinaryIoTypeA__ConfigurationSetResponse BinaryIoTypeA__ConfigurationSetResponse;
typedef struct _BinaryIoTypeA__ConfigurationGet BinaryIoTypeA__ConfigurationGet;
typedef struct _BinaryIoTypeA__ConfigurationGetResponse BinaryIoTypeA__ConfigurationGetResponse;
typedef struct _BinaryIoTypeA__ConfigurationDescribe BinaryIoTypeA__ConfigurationDescribe;
typedef struct _BinaryIoTypeA__ConfigurationDescribeResponse BinaryIoTypeA__ConfigurationDescribeResponse;
typedef struct _BinaryIoTypeA__SetSingle BinaryIoTypeA__SetSingle;
typedef struct _BinaryIoTypeA__SetAll BinaryIoTypeA__SetAll;
typedef struct _BinaryIoTypeA__GetSingle BinaryIoTypeA__GetSingle;
typedef struct _BinaryIoTypeA__GetAll BinaryIoTypeA__GetAll;
typedef struct _BinaryIoTypeA__FunctionControlGet BinaryIoTypeA__FunctionControlGet;
typedef struct _BinaryIoTypeA__GetAllResponse BinaryIoTypeA__GetAllResponse;
typedef struct _BinaryIoTypeA__GetSingleResponse BinaryIoTypeA__GetSingleResponse;
typedef struct _BinaryIoTypeA__FunctionControlGetResponse BinaryIoTypeA__FunctionControlGetResponse;
typedef struct _BinaryIoTypeA__FunctionControlSet BinaryIoTypeA__FunctionControlSet;
typedef struct _BinaryIoTypeA__SetAllResponse BinaryIoTypeA__SetAllResponse;
typedef struct _BinaryIoTypeA__SetSingleResponse BinaryIoTypeA__SetSingleResponse;
typedef struct _BinaryIoTypeA__FunctionControlSetResponse BinaryIoTypeA__FunctionControlSetResponse;
typedef struct _BinaryIoTypeA__StreamControlStart BinaryIoTypeA__StreamControlStart;
typedef struct _BinaryIoTypeA__Sample BinaryIoTypeA__Sample;
typedef struct _BinaryIoTypeA__StreamData BinaryIoTypeA__StreamData;


/* --- enums --- */


/* --- messages --- */

/*
 * ConfigurationSet to pass to Functionblock.Configuration.functionSpecificConfigurationSet hook
 */
struct  _BinaryIoTypeA__ConfigurationSet
{
  ProtobufCMessage base;
  /*
   * Map to enable fritting on binary output channels. This activates a cyclically higher current at the channel outputs to prevent corrison over time
   * LSB is Output0, 1: fritting enabled, 0: disabled
   */
  int32_t outputfrittingmask;
  /*
   * Map to enable the output watchdog for binary output channels. The output watchdog is activated if the output is not updated for a certain time.
   * LSB is Output0, 1: output watchdog enabled, 0: disabled
   */
  int32_t outputwatchdogmask;
  /*
   * The output watchdog timeout in seconds.
   */
  int32_t outputwatchdogtimeout;
};
#define BINARY_IO_TYPE_A__CONFIGURATION_SET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&binary_io_type_a__configuration_set__descriptor) \
    , 0, 0, 0 }


/*
 * ConfigurationSetResponse to pass to Functionblock.Configuration.functionSpecificConfigurationSetResponse hook
 */
struct  _BinaryIoTypeA__ConfigurationSetResponse
{
  ProtobufCMessage base;
};
#define BINARY_IO_TYPE_A__CONFIGURATION_SET_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&binary_io_type_a__configuration_set_response__descriptor) \
     }


/*
 * ConfigurationGet to pass to Functionblock.Configuration.functionSpecificConfigurationGet hook
 */
struct  _BinaryIoTypeA__ConfigurationGet
{
  ProtobufCMessage base;
};
#define BINARY_IO_TYPE_A__CONFIGURATION_GET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&binary_io_type_a__configuration_get__descriptor) \
     }


/*
 * ConfigurationGetResponse to pass to Functionblock.ConfigurationGetResponse.functionSpecificConfigurationGetResponse hook
 * Returns the current hardware configuration
 */
struct  _BinaryIoTypeA__ConfigurationGetResponse
{
  ProtobufCMessage base;
  /*
   * Enabled fritting on output channels, see ConfigurationSet
   * LSB is Output0, 1: fritting enabled, 0: disabled
   */
  uint32_t outputfrittingmask;
  /*
   * Enabled output watchdog for binary output channels, see ConfigurationSet
   * LSB is Output0, 1: output watchdog enabled, 0: disabled
   */
  uint32_t outputwatchdogmask;
  /*
   * The output watchdog timeout in seconds, see ConfigurationSet
   */
  int32_t outputwatchdogtimeout;
};
#define BINARY_IO_TYPE_A__CONFIGURATION_GET_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&binary_io_type_a__configuration_get_response__descriptor) \
    , 0, 0, 0 }


/*
 * ConfigurationDescribe to pass to Functionblock.Configuration.functionSpecificConfigurationDescribe hook
 */
struct  _BinaryIoTypeA__ConfigurationDescribe
{
  ProtobufCMessage base;
};
#define BINARY_IO_TYPE_A__CONFIGURATION_DESCRIBE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&binary_io_type_a__configuration_describe__descriptor) \
     }


struct  _BinaryIoTypeA__ConfigurationDescribeResponse
{
  ProtobufCMessage base;
  uint32_t numberofchannels;
};
#define BINARY_IO_TYPE_A__CONFIGURATION_DESCRIBE_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&binary_io_type_a__configuration_describe_response__descriptor) \
    , 0 }


/*
 * ============= FunctionControl =================
 * Sets the value of a single binary channel
 */
struct  _BinaryIoTypeA__SetSingle
{
  ProtobufCMessage base;
  /*
   * Number of the binary output channel
   */
  uint32_t channel;
  /*
   * State of the binary output channel
   */
  protobuf_c_boolean state;
};
#define BINARY_IO_TYPE_A__SET_SINGLE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&binary_io_type_a__set_single__descriptor) \
    , 0, 0 }


/*
 * Sets all binary channels
 */
struct  _BinaryIoTypeA__SetAll
{
  ProtobufCMessage base;
  /*
   * binary coded map of input values. 0 means low, 1 means high, LSB is Output0
   */
  uint32_t values;
  /*
   * mask to define which channels are affected by the set all command. 0 means not set, 1 means set, LSB is Output0
   */
  uint32_t mask;
};
#define BINARY_IO_TYPE_A__SET_ALL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&binary_io_type_a__set_all__descriptor) \
    , 0, 0 }


/*
 * Gets the current value of a single binary channel
 */
struct  _BinaryIoTypeA__GetSingle
{
  ProtobufCMessage base;
  /*
   * Specifies the binary input channel
   */
  uint32_t channel;
};
#define BINARY_IO_TYPE_A__GET_SINGLE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&binary_io_type_a__get_single__descriptor) \
    , 0 }


/*
 * Gets the values of all binary channels
 */
struct  _BinaryIoTypeA__GetAll
{
  ProtobufCMessage base;
  /*
   * mask to define which channels are affected by the get all command. 0 means not set, 1 means set, LSB is Output0
   */
  uint32_t mask;
};
#define BINARY_IO_TYPE_A__GET_ALL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&binary_io_type_a__get_all__descriptor) \
    , 0 }


typedef enum {
  BINARY_IO_TYPE_A__FUNCTION_CONTROL_GET__TYPE__NOT_SET = 0,
  BINARY_IO_TYPE_A__FUNCTION_CONTROL_GET__TYPE_SINGLE = 1,
  BINARY_IO_TYPE_A__FUNCTION_CONTROL_GET__TYPE_ALL = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(BINARY_IO_TYPE_A__FUNCTION_CONTROL_GET__TYPE)
} BinaryIoTypeA__FunctionControlGet__TypeCase;

/*
 * FunctionControlGet to pass to Functionblock.FunctionControl.functionSpecificFunctionControlGet hook
 */
struct  _BinaryIoTypeA__FunctionControlGet
{
  ProtobufCMessage base;
  BinaryIoTypeA__FunctionControlGet__TypeCase type_case;
  union {
    BinaryIoTypeA__GetSingle *single;
    BinaryIoTypeA__GetAll *all;
  };
};
#define BINARY_IO_TYPE_A__FUNCTION_CONTROL_GET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&binary_io_type_a__function_control_get__descriptor) \
    , BINARY_IO_TYPE_A__FUNCTION_CONTROL_GET__TYPE__NOT_SET, {0} }


struct  _BinaryIoTypeA__GetAllResponse
{
  ProtobufCMessage base;
  /*
   * binary coded map of input values. 0 means low, 1 means high, LSB is Input0
   */
  uint32_t inputs;
};
#define BINARY_IO_TYPE_A__GET_ALL_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&binary_io_type_a__get_all_response__descriptor) \
    , 0 }


struct  _BinaryIoTypeA__GetSingleResponse
{
  ProtobufCMessage base;
  /*
   * Number of the binary input channel
   */
  uint32_t channel;
  /*
   * State for the bianry input channel
   */
  protobuf_c_boolean state;
};
#define BINARY_IO_TYPE_A__GET_SINGLE_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&binary_io_type_a__get_single_response__descriptor) \
    , 0, 0 }


typedef enum {
  BINARY_IO_TYPE_A__FUNCTION_CONTROL_GET_RESPONSE__TYPE__NOT_SET = 0,
  BINARY_IO_TYPE_A__FUNCTION_CONTROL_GET_RESPONSE__TYPE_SINGLE = 1,
  BINARY_IO_TYPE_A__FUNCTION_CONTROL_GET_RESPONSE__TYPE_ALL = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(BINARY_IO_TYPE_A__FUNCTION_CONTROL_GET_RESPONSE__TYPE)
} BinaryIoTypeA__FunctionControlGetResponse__TypeCase;

/*
 * FunctionControlGetResponse to pass to Functionblock.FunctionControlResponse.functionSpecificControlGet hook
 */
struct  _BinaryIoTypeA__FunctionControlGetResponse
{
  ProtobufCMessage base;
  BinaryIoTypeA__FunctionControlGetResponse__TypeCase type_case;
  union {
    BinaryIoTypeA__GetSingleResponse *single;
    BinaryIoTypeA__GetAllResponse *all;
  };
};
#define BINARY_IO_TYPE_A__FUNCTION_CONTROL_GET_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&binary_io_type_a__function_control_get_response__descriptor) \
    , BINARY_IO_TYPE_A__FUNCTION_CONTROL_GET_RESPONSE__TYPE__NOT_SET, {0} }


typedef enum {
  BINARY_IO_TYPE_A__FUNCTION_CONTROL_SET__TYPE__NOT_SET = 0,
  BINARY_IO_TYPE_A__FUNCTION_CONTROL_SET__TYPE_SINGLE = 1,
  BINARY_IO_TYPE_A__FUNCTION_CONTROL_SET__TYPE_ALL = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(BINARY_IO_TYPE_A__FUNCTION_CONTROL_SET__TYPE)
} BinaryIoTypeA__FunctionControlSet__TypeCase;

/*
 * FunctionControlSet to pass to Functionblock.FunctionControl.functionSpecificFunctionControlSet hook
 */
struct  _BinaryIoTypeA__FunctionControlSet
{
  ProtobufCMessage base;
  BinaryIoTypeA__FunctionControlSet__TypeCase type_case;
  union {
    BinaryIoTypeA__SetSingle *single;
    BinaryIoTypeA__SetAll *all;
  };
};
#define BINARY_IO_TYPE_A__FUNCTION_CONTROL_SET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&binary_io_type_a__function_control_set__descriptor) \
    , BINARY_IO_TYPE_A__FUNCTION_CONTROL_SET__TYPE__NOT_SET, {0} }


struct  _BinaryIoTypeA__SetAllResponse
{
  ProtobufCMessage base;
};
#define BINARY_IO_TYPE_A__SET_ALL_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&binary_io_type_a__set_all_response__descriptor) \
     }


struct  _BinaryIoTypeA__SetSingleResponse
{
  ProtobufCMessage base;
};
#define BINARY_IO_TYPE_A__SET_SINGLE_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&binary_io_type_a__set_single_response__descriptor) \
     }


typedef enum {
  BINARY_IO_TYPE_A__FUNCTION_CONTROL_SET_RESPONSE__TYPE__NOT_SET = 0,
  BINARY_IO_TYPE_A__FUNCTION_CONTROL_SET_RESPONSE__TYPE_SINGLE = 1,
  BINARY_IO_TYPE_A__FUNCTION_CONTROL_SET_RESPONSE__TYPE_ALL = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(BINARY_IO_TYPE_A__FUNCTION_CONTROL_SET_RESPONSE__TYPE)
} BinaryIoTypeA__FunctionControlSetResponse__TypeCase;

/*
 * FunctionControlSetResponse to pass to Functionblock.FunctionControlResponse.functionSpecificControlSet hook
 */
struct  _BinaryIoTypeA__FunctionControlSetResponse
{
  ProtobufCMessage base;
  BinaryIoTypeA__FunctionControlSetResponse__TypeCase type_case;
  union {
    BinaryIoTypeA__SetSingleResponse *single;
    BinaryIoTypeA__SetAllResponse *all;
  };
};
#define BINARY_IO_TYPE_A__FUNCTION_CONTROL_SET_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&binary_io_type_a__function_control_set_response__descriptor) \
    , BINARY_IO_TYPE_A__FUNCTION_CONTROL_SET_RESPONSE__TYPE__NOT_SET, {0} }


/*
 * ============= StreamControl ==================
 * StreamControlStart to pass to Functionblock.StreamControlStart.functionSpecificStreamControlStart hook
 */
struct  _BinaryIoTypeA__StreamControlStart
{
  ProtobufCMessage base;
  /*
   * mask to define which channels are considered in the stream. 0 means don't send channels value, 1 means sent it
   * LSB is Input0
   * Defaults to all channels (0x0F)
   */
  uint32_t channelfiltermask;
  /*
   * maximum interval in seconds between two stream messages. If there are no or very few stream messages for a
   * certain time, the client is informed that the stream is still active and the existing data is transmitted.
   * Defaults to 10 seconds
   */
  uint32_t keepaliveinterval;
  /*
   * internal ring buffer size.
   * Defaults to 50
   * Maximum is 1000
   */
  uint32_t buffersize;
};
#define BINARY_IO_TYPE_A__STREAM_CONTROL_START__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&binary_io_type_a__stream_control_start__descriptor) \
    , 0, 0, 0 }


struct  _BinaryIoTypeA__Sample
{
  ProtobufCMessage base;
  /*
   * Timestamp for that specific channels sample. This is the time the sample was taken.
   * This timestamp is in microseconds since the start of the device and does not get synchronized with the clients time.
   */
  uint64_t timestamp;
  /*
   * Specifies the binary channel
   */
  uint32_t channel;
  /*
   * Specifies the binary channel value when the input value has changed.
   */
  protobuf_c_boolean value;
};
#define BINARY_IO_TYPE_A__SAMPLE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&binary_io_type_a__sample__descriptor) \
    , 0, 0, 0 }


/*
 * StreamData to pass to Functionblock.StreamData.functionSpecificStreamData hook
 */
struct  _BinaryIoTypeA__StreamData
{
  ProtobufCMessage base;
  size_t n_samples;
  BinaryIoTypeA__Sample **samples;
};
#define BINARY_IO_TYPE_A__STREAM_DATA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&binary_io_type_a__stream_data__descriptor) \
    , 0,NULL }


/* BinaryIoTypeA__ConfigurationSet methods */
void   binary_io_type_a__configuration_set__init
                     (BinaryIoTypeA__ConfigurationSet         *message);
size_t binary_io_type_a__configuration_set__get_packed_size
                     (const BinaryIoTypeA__ConfigurationSet   *message);
size_t binary_io_type_a__configuration_set__pack
                     (const BinaryIoTypeA__ConfigurationSet   *message,
                      uint8_t             *out);
size_t binary_io_type_a__configuration_set__pack_to_buffer
                     (const BinaryIoTypeA__ConfigurationSet   *message,
                      ProtobufCBuffer     *buffer);
BinaryIoTypeA__ConfigurationSet *
       binary_io_type_a__configuration_set__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   binary_io_type_a__configuration_set__free_unpacked
                     (BinaryIoTypeA__ConfigurationSet *message,
                      ProtobufCAllocator *allocator);
/* BinaryIoTypeA__ConfigurationSetResponse methods */
void   binary_io_type_a__configuration_set_response__init
                     (BinaryIoTypeA__ConfigurationSetResponse         *message);
size_t binary_io_type_a__configuration_set_response__get_packed_size
                     (const BinaryIoTypeA__ConfigurationSetResponse   *message);
size_t binary_io_type_a__configuration_set_response__pack
                     (const BinaryIoTypeA__ConfigurationSetResponse   *message,
                      uint8_t             *out);
size_t binary_io_type_a__configuration_set_response__pack_to_buffer
                     (const BinaryIoTypeA__ConfigurationSetResponse   *message,
                      ProtobufCBuffer     *buffer);
BinaryIoTypeA__ConfigurationSetResponse *
       binary_io_type_a__configuration_set_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   binary_io_type_a__configuration_set_response__free_unpacked
                     (BinaryIoTypeA__ConfigurationSetResponse *message,
                      ProtobufCAllocator *allocator);
/* BinaryIoTypeA__ConfigurationGet methods */
void   binary_io_type_a__configuration_get__init
                     (BinaryIoTypeA__ConfigurationGet         *message);
size_t binary_io_type_a__configuration_get__get_packed_size
                     (const BinaryIoTypeA__ConfigurationGet   *message);
size_t binary_io_type_a__configuration_get__pack
                     (const BinaryIoTypeA__ConfigurationGet   *message,
                      uint8_t             *out);
size_t binary_io_type_a__configuration_get__pack_to_buffer
                     (const BinaryIoTypeA__ConfigurationGet   *message,
                      ProtobufCBuffer     *buffer);
BinaryIoTypeA__ConfigurationGet *
       binary_io_type_a__configuration_get__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   binary_io_type_a__configuration_get__free_unpacked
                     (BinaryIoTypeA__ConfigurationGet *message,
                      ProtobufCAllocator *allocator);
/* BinaryIoTypeA__ConfigurationGetResponse methods */
void   binary_io_type_a__configuration_get_response__init
                     (BinaryIoTypeA__ConfigurationGetResponse         *message);
size_t binary_io_type_a__configuration_get_response__get_packed_size
                     (const BinaryIoTypeA__ConfigurationGetResponse   *message);
size_t binary_io_type_a__configuration_get_response__pack
                     (const BinaryIoTypeA__ConfigurationGetResponse   *message,
                      uint8_t             *out);
size_t binary_io_type_a__configuration_get_response__pack_to_buffer
                     (const BinaryIoTypeA__ConfigurationGetResponse   *message,
                      ProtobufCBuffer     *buffer);
BinaryIoTypeA__ConfigurationGetResponse *
       binary_io_type_a__configuration_get_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   binary_io_type_a__configuration_get_response__free_unpacked
                     (BinaryIoTypeA__ConfigurationGetResponse *message,
                      ProtobufCAllocator *allocator);
/* BinaryIoTypeA__ConfigurationDescribe methods */
void   binary_io_type_a__configuration_describe__init
                     (BinaryIoTypeA__ConfigurationDescribe         *message);
size_t binary_io_type_a__configuration_describe__get_packed_size
                     (const BinaryIoTypeA__ConfigurationDescribe   *message);
size_t binary_io_type_a__configuration_describe__pack
                     (const BinaryIoTypeA__ConfigurationDescribe   *message,
                      uint8_t             *out);
size_t binary_io_type_a__configuration_describe__pack_to_buffer
                     (const BinaryIoTypeA__ConfigurationDescribe   *message,
                      ProtobufCBuffer     *buffer);
BinaryIoTypeA__ConfigurationDescribe *
       binary_io_type_a__configuration_describe__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   binary_io_type_a__configuration_describe__free_unpacked
                     (BinaryIoTypeA__ConfigurationDescribe *message,
                      ProtobufCAllocator *allocator);
/* BinaryIoTypeA__ConfigurationDescribeResponse methods */
void   binary_io_type_a__configuration_describe_response__init
                     (BinaryIoTypeA__ConfigurationDescribeResponse         *message);
size_t binary_io_type_a__configuration_describe_response__get_packed_size
                     (const BinaryIoTypeA__ConfigurationDescribeResponse   *message);
size_t binary_io_type_a__configuration_describe_response__pack
                     (const BinaryIoTypeA__ConfigurationDescribeResponse   *message,
                      uint8_t             *out);
size_t binary_io_type_a__configuration_describe_response__pack_to_buffer
                     (const BinaryIoTypeA__ConfigurationDescribeResponse   *message,
                      ProtobufCBuffer     *buffer);
BinaryIoTypeA__ConfigurationDescribeResponse *
       binary_io_type_a__configuration_describe_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   binary_io_type_a__configuration_describe_response__free_unpacked
                     (BinaryIoTypeA__ConfigurationDescribeResponse *message,
                      ProtobufCAllocator *allocator);
/* BinaryIoTypeA__SetSingle methods */
void   binary_io_type_a__set_single__init
                     (BinaryIoTypeA__SetSingle         *message);
size_t binary_io_type_a__set_single__get_packed_size
                     (const BinaryIoTypeA__SetSingle   *message);
size_t binary_io_type_a__set_single__pack
                     (const BinaryIoTypeA__SetSingle   *message,
                      uint8_t             *out);
size_t binary_io_type_a__set_single__pack_to_buffer
                     (const BinaryIoTypeA__SetSingle   *message,
                      ProtobufCBuffer     *buffer);
BinaryIoTypeA__SetSingle *
       binary_io_type_a__set_single__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   binary_io_type_a__set_single__free_unpacked
                     (BinaryIoTypeA__SetSingle *message,
                      ProtobufCAllocator *allocator);
/* BinaryIoTypeA__SetAll methods */
void   binary_io_type_a__set_all__init
                     (BinaryIoTypeA__SetAll         *message);
size_t binary_io_type_a__set_all__get_packed_size
                     (const BinaryIoTypeA__SetAll   *message);
size_t binary_io_type_a__set_all__pack
                     (const BinaryIoTypeA__SetAll   *message,
                      uint8_t             *out);
size_t binary_io_type_a__set_all__pack_to_buffer
                     (const BinaryIoTypeA__SetAll   *message,
                      ProtobufCBuffer     *buffer);
BinaryIoTypeA__SetAll *
       binary_io_type_a__set_all__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   binary_io_type_a__set_all__free_unpacked
                     (BinaryIoTypeA__SetAll *message,
                      ProtobufCAllocator *allocator);
/* BinaryIoTypeA__GetSingle methods */
void   binary_io_type_a__get_single__init
                     (BinaryIoTypeA__GetSingle         *message);
size_t binary_io_type_a__get_single__get_packed_size
                     (const BinaryIoTypeA__GetSingle   *message);
size_t binary_io_type_a__get_single__pack
                     (const BinaryIoTypeA__GetSingle   *message,
                      uint8_t             *out);
size_t binary_io_type_a__get_single__pack_to_buffer
                     (const BinaryIoTypeA__GetSingle   *message,
                      ProtobufCBuffer     *buffer);
BinaryIoTypeA__GetSingle *
       binary_io_type_a__get_single__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   binary_io_type_a__get_single__free_unpacked
                     (BinaryIoTypeA__GetSingle *message,
                      ProtobufCAllocator *allocator);
/* BinaryIoTypeA__GetAll methods */
void   binary_io_type_a__get_all__init
                     (BinaryIoTypeA__GetAll         *message);
size_t binary_io_type_a__get_all__get_packed_size
                     (const BinaryIoTypeA__GetAll   *message);
size_t binary_io_type_a__get_all__pack
                     (const BinaryIoTypeA__GetAll   *message,
                      uint8_t             *out);
size_t binary_io_type_a__get_all__pack_to_buffer
                     (const BinaryIoTypeA__GetAll   *message,
                      ProtobufCBuffer     *buffer);
BinaryIoTypeA__GetAll *
       binary_io_type_a__get_all__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   binary_io_type_a__get_all__free_unpacked
                     (BinaryIoTypeA__GetAll *message,
                      ProtobufCAllocator *allocator);
/* BinaryIoTypeA__FunctionControlGet methods */
void   binary_io_type_a__function_control_get__init
                     (BinaryIoTypeA__FunctionControlGet         *message);
size_t binary_io_type_a__function_control_get__get_packed_size
                     (const BinaryIoTypeA__FunctionControlGet   *message);
size_t binary_io_type_a__function_control_get__pack
                     (const BinaryIoTypeA__FunctionControlGet   *message,
                      uint8_t             *out);
size_t binary_io_type_a__function_control_get__pack_to_buffer
                     (const BinaryIoTypeA__FunctionControlGet   *message,
                      ProtobufCBuffer     *buffer);
BinaryIoTypeA__FunctionControlGet *
       binary_io_type_a__function_control_get__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   binary_io_type_a__function_control_get__free_unpacked
                     (BinaryIoTypeA__FunctionControlGet *message,
                      ProtobufCAllocator *allocator);
/* BinaryIoTypeA__GetAllResponse methods */
void   binary_io_type_a__get_all_response__init
                     (BinaryIoTypeA__GetAllResponse         *message);
size_t binary_io_type_a__get_all_response__get_packed_size
                     (const BinaryIoTypeA__GetAllResponse   *message);
size_t binary_io_type_a__get_all_response__pack
                     (const BinaryIoTypeA__GetAllResponse   *message,
                      uint8_t             *out);
size_t binary_io_type_a__get_all_response__pack_to_buffer
                     (const BinaryIoTypeA__GetAllResponse   *message,
                      ProtobufCBuffer     *buffer);
BinaryIoTypeA__GetAllResponse *
       binary_io_type_a__get_all_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   binary_io_type_a__get_all_response__free_unpacked
                     (BinaryIoTypeA__GetAllResponse *message,
                      ProtobufCAllocator *allocator);
/* BinaryIoTypeA__GetSingleResponse methods */
void   binary_io_type_a__get_single_response__init
                     (BinaryIoTypeA__GetSingleResponse         *message);
size_t binary_io_type_a__get_single_response__get_packed_size
                     (const BinaryIoTypeA__GetSingleResponse   *message);
size_t binary_io_type_a__get_single_response__pack
                     (const BinaryIoTypeA__GetSingleResponse   *message,
                      uint8_t             *out);
size_t binary_io_type_a__get_single_response__pack_to_buffer
                     (const BinaryIoTypeA__GetSingleResponse   *message,
                      ProtobufCBuffer     *buffer);
BinaryIoTypeA__GetSingleResponse *
       binary_io_type_a__get_single_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   binary_io_type_a__get_single_response__free_unpacked
                     (BinaryIoTypeA__GetSingleResponse *message,
                      ProtobufCAllocator *allocator);
/* BinaryIoTypeA__FunctionControlGetResponse methods */
void   binary_io_type_a__function_control_get_response__init
                     (BinaryIoTypeA__FunctionControlGetResponse         *message);
size_t binary_io_type_a__function_control_get_response__get_packed_size
                     (const BinaryIoTypeA__FunctionControlGetResponse   *message);
size_t binary_io_type_a__function_control_get_response__pack
                     (const BinaryIoTypeA__FunctionControlGetResponse   *message,
                      uint8_t             *out);
size_t binary_io_type_a__function_control_get_response__pack_to_buffer
                     (const BinaryIoTypeA__FunctionControlGetResponse   *message,
                      ProtobufCBuffer     *buffer);
BinaryIoTypeA__FunctionControlGetResponse *
       binary_io_type_a__function_control_get_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   binary_io_type_a__function_control_get_response__free_unpacked
                     (BinaryIoTypeA__FunctionControlGetResponse *message,
                      ProtobufCAllocator *allocator);
/* BinaryIoTypeA__FunctionControlSet methods */
void   binary_io_type_a__function_control_set__init
                     (BinaryIoTypeA__FunctionControlSet         *message);
size_t binary_io_type_a__function_control_set__get_packed_size
                     (const BinaryIoTypeA__FunctionControlSet   *message);
size_t binary_io_type_a__function_control_set__pack
                     (const BinaryIoTypeA__FunctionControlSet   *message,
                      uint8_t             *out);
size_t binary_io_type_a__function_control_set__pack_to_buffer
                     (const BinaryIoTypeA__FunctionControlSet   *message,
                      ProtobufCBuffer     *buffer);
BinaryIoTypeA__FunctionControlSet *
       binary_io_type_a__function_control_set__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   binary_io_type_a__function_control_set__free_unpacked
                     (BinaryIoTypeA__FunctionControlSet *message,
                      ProtobufCAllocator *allocator);
/* BinaryIoTypeA__SetAllResponse methods */
void   binary_io_type_a__set_all_response__init
                     (BinaryIoTypeA__SetAllResponse         *message);
size_t binary_io_type_a__set_all_response__get_packed_size
                     (const BinaryIoTypeA__SetAllResponse   *message);
size_t binary_io_type_a__set_all_response__pack
                     (const BinaryIoTypeA__SetAllResponse   *message,
                      uint8_t             *out);
size_t binary_io_type_a__set_all_response__pack_to_buffer
                     (const BinaryIoTypeA__SetAllResponse   *message,
                      ProtobufCBuffer     *buffer);
BinaryIoTypeA__SetAllResponse *
       binary_io_type_a__set_all_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   binary_io_type_a__set_all_response__free_unpacked
                     (BinaryIoTypeA__SetAllResponse *message,
                      ProtobufCAllocator *allocator);
/* BinaryIoTypeA__SetSingleResponse methods */
void   binary_io_type_a__set_single_response__init
                     (BinaryIoTypeA__SetSingleResponse         *message);
size_t binary_io_type_a__set_single_response__get_packed_size
                     (const BinaryIoTypeA__SetSingleResponse   *message);
size_t binary_io_type_a__set_single_response__pack
                     (const BinaryIoTypeA__SetSingleResponse   *message,
                      uint8_t             *out);
size_t binary_io_type_a__set_single_response__pack_to_buffer
                     (const BinaryIoTypeA__SetSingleResponse   *message,
                      ProtobufCBuffer     *buffer);
BinaryIoTypeA__SetSingleResponse *
       binary_io_type_a__set_single_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   binary_io_type_a__set_single_response__free_unpacked
                     (BinaryIoTypeA__SetSingleResponse *message,
                      ProtobufCAllocator *allocator);
/* BinaryIoTypeA__FunctionControlSetResponse methods */
void   binary_io_type_a__function_control_set_response__init
                     (BinaryIoTypeA__FunctionControlSetResponse         *message);
size_t binary_io_type_a__function_control_set_response__get_packed_size
                     (const BinaryIoTypeA__FunctionControlSetResponse   *message);
size_t binary_io_type_a__function_control_set_response__pack
                     (const BinaryIoTypeA__FunctionControlSetResponse   *message,
                      uint8_t             *out);
size_t binary_io_type_a__function_control_set_response__pack_to_buffer
                     (const BinaryIoTypeA__FunctionControlSetResponse   *message,
                      ProtobufCBuffer     *buffer);
BinaryIoTypeA__FunctionControlSetResponse *
       binary_io_type_a__function_control_set_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   binary_io_type_a__function_control_set_response__free_unpacked
                     (BinaryIoTypeA__FunctionControlSetResponse *message,
                      ProtobufCAllocator *allocator);
/* BinaryIoTypeA__StreamControlStart methods */
void   binary_io_type_a__stream_control_start__init
                     (BinaryIoTypeA__StreamControlStart         *message);
size_t binary_io_type_a__stream_control_start__get_packed_size
                     (const BinaryIoTypeA__StreamControlStart   *message);
size_t binary_io_type_a__stream_control_start__pack
                     (const BinaryIoTypeA__StreamControlStart   *message,
                      uint8_t             *out);
size_t binary_io_type_a__stream_control_start__pack_to_buffer
                     (const BinaryIoTypeA__StreamControlStart   *message,
                      ProtobufCBuffer     *buffer);
BinaryIoTypeA__StreamControlStart *
       binary_io_type_a__stream_control_start__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   binary_io_type_a__stream_control_start__free_unpacked
                     (BinaryIoTypeA__StreamControlStart *message,
                      ProtobufCAllocator *allocator);
/* BinaryIoTypeA__Sample methods */
void   binary_io_type_a__sample__init
                     (BinaryIoTypeA__Sample         *message);
size_t binary_io_type_a__sample__get_packed_size
                     (const BinaryIoTypeA__Sample   *message);
size_t binary_io_type_a__sample__pack
                     (const BinaryIoTypeA__Sample   *message,
                      uint8_t             *out);
size_t binary_io_type_a__sample__pack_to_buffer
                     (const BinaryIoTypeA__Sample   *message,
                      ProtobufCBuffer     *buffer);
BinaryIoTypeA__Sample *
       binary_io_type_a__sample__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   binary_io_type_a__sample__free_unpacked
                     (BinaryIoTypeA__Sample *message,
                      ProtobufCAllocator *allocator);
/* BinaryIoTypeA__StreamData methods */
void   binary_io_type_a__stream_data__init
                     (BinaryIoTypeA__StreamData         *message);
size_t binary_io_type_a__stream_data__get_packed_size
                     (const BinaryIoTypeA__StreamData   *message);
size_t binary_io_type_a__stream_data__pack
                     (const BinaryIoTypeA__StreamData   *message,
                      uint8_t             *out);
size_t binary_io_type_a__stream_data__pack_to_buffer
                     (const BinaryIoTypeA__StreamData   *message,
                      ProtobufCBuffer     *buffer);
BinaryIoTypeA__StreamData *
       binary_io_type_a__stream_data__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   binary_io_type_a__stream_data__free_unpacked
                     (BinaryIoTypeA__StreamData *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*BinaryIoTypeA__ConfigurationSet_Closure)
                 (const BinaryIoTypeA__ConfigurationSet *message,
                  void *closure_data);
typedef void (*BinaryIoTypeA__ConfigurationSetResponse_Closure)
                 (const BinaryIoTypeA__ConfigurationSetResponse *message,
                  void *closure_data);
typedef void (*BinaryIoTypeA__ConfigurationGet_Closure)
                 (const BinaryIoTypeA__ConfigurationGet *message,
                  void *closure_data);
typedef void (*BinaryIoTypeA__ConfigurationGetResponse_Closure)
                 (const BinaryIoTypeA__ConfigurationGetResponse *message,
                  void *closure_data);
typedef void (*BinaryIoTypeA__ConfigurationDescribe_Closure)
                 (const BinaryIoTypeA__ConfigurationDescribe *message,
                  void *closure_data);
typedef void (*BinaryIoTypeA__ConfigurationDescribeResponse_Closure)
                 (const BinaryIoTypeA__ConfigurationDescribeResponse *message,
                  void *closure_data);
typedef void (*BinaryIoTypeA__SetSingle_Closure)
                 (const BinaryIoTypeA__SetSingle *message,
                  void *closure_data);
typedef void (*BinaryIoTypeA__SetAll_Closure)
                 (const BinaryIoTypeA__SetAll *message,
                  void *closure_data);
typedef void (*BinaryIoTypeA__GetSingle_Closure)
                 (const BinaryIoTypeA__GetSingle *message,
                  void *closure_data);
typedef void (*BinaryIoTypeA__GetAll_Closure)
                 (const BinaryIoTypeA__GetAll *message,
                  void *closure_data);
typedef void (*BinaryIoTypeA__FunctionControlGet_Closure)
                 (const BinaryIoTypeA__FunctionControlGet *message,
                  void *closure_data);
typedef void (*BinaryIoTypeA__GetAllResponse_Closure)
                 (const BinaryIoTypeA__GetAllResponse *message,
                  void *closure_data);
typedef void (*BinaryIoTypeA__GetSingleResponse_Closure)
                 (const BinaryIoTypeA__GetSingleResponse *message,
                  void *closure_data);
typedef void (*BinaryIoTypeA__FunctionControlGetResponse_Closure)
                 (const BinaryIoTypeA__FunctionControlGetResponse *message,
                  void *closure_data);
typedef void (*BinaryIoTypeA__FunctionControlSet_Closure)
                 (const BinaryIoTypeA__FunctionControlSet *message,
                  void *closure_data);
typedef void (*BinaryIoTypeA__SetAllResponse_Closure)
                 (const BinaryIoTypeA__SetAllResponse *message,
                  void *closure_data);
typedef void (*BinaryIoTypeA__SetSingleResponse_Closure)
                 (const BinaryIoTypeA__SetSingleResponse *message,
                  void *closure_data);
typedef void (*BinaryIoTypeA__FunctionControlSetResponse_Closure)
                 (const BinaryIoTypeA__FunctionControlSetResponse *message,
                  void *closure_data);
typedef void (*BinaryIoTypeA__StreamControlStart_Closure)
                 (const BinaryIoTypeA__StreamControlStart *message,
                  void *closure_data);
typedef void (*BinaryIoTypeA__Sample_Closure)
                 (const BinaryIoTypeA__Sample *message,
                  void *closure_data);
typedef void (*BinaryIoTypeA__StreamData_Closure)
                 (const BinaryIoTypeA__StreamData *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor binary_io_type_a__configuration_set__descriptor;
extern const ProtobufCMessageDescriptor binary_io_type_a__configuration_set_response__descriptor;
extern const ProtobufCMessageDescriptor binary_io_type_a__configuration_get__descriptor;
extern const ProtobufCMessageDescriptor binary_io_type_a__configuration_get_response__descriptor;
extern const ProtobufCMessageDescriptor binary_io_type_a__configuration_describe__descriptor;
extern const ProtobufCMessageDescriptor binary_io_type_a__configuration_describe_response__descriptor;
extern const ProtobufCMessageDescriptor binary_io_type_a__set_single__descriptor;
extern const ProtobufCMessageDescriptor binary_io_type_a__set_all__descriptor;
extern const ProtobufCMessageDescriptor binary_io_type_a__get_single__descriptor;
extern const ProtobufCMessageDescriptor binary_io_type_a__get_all__descriptor;
extern const ProtobufCMessageDescriptor binary_io_type_a__function_control_get__descriptor;
extern const ProtobufCMessageDescriptor binary_io_type_a__get_all_response__descriptor;
extern const ProtobufCMessageDescriptor binary_io_type_a__get_single_response__descriptor;
extern const ProtobufCMessageDescriptor binary_io_type_a__function_control_get_response__descriptor;
extern const ProtobufCMessageDescriptor binary_io_type_a__function_control_set__descriptor;
extern const ProtobufCMessageDescriptor binary_io_type_a__set_all_response__descriptor;
extern const ProtobufCMessageDescriptor binary_io_type_a__set_single_response__descriptor;
extern const ProtobufCMessageDescriptor binary_io_type_a__function_control_set_response__descriptor;
extern const ProtobufCMessageDescriptor binary_io_type_a__stream_control_start__descriptor;
extern const ProtobufCMessageDescriptor binary_io_type_a__sample__descriptor;
extern const ProtobufCMessageDescriptor binary_io_type_a__stream_data__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_binaryIoTypeA_2eproto__INCLUDED */
