/*
Copyright Â© 2022 Ci4Rail GmbH <engineering@ci4rail.com>

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
syntax = "proto3";

package templateModule;
option go_package = "templateModule/v1alpha1";

// ============= Configuration =================

// ConfigurationSet to pass to Functionblock.Configuration.functionSpecificConfigurationSet hook
message ConfigurationSet {
    // Put here your function specific values
}

// ConfigurationSetResponse to pass to Functionblock.Configuration.functionSpecificConfigurationSetResponse hook
message ConfigurationSetResponse {
    // no parameters
}

// ConfigurationGet to pass to Functionblock.Configuration.functionSpecificConfigurationGet hook
message ConfigurationGet {
    // no parameters
}

// ConfigurationGetResponse to pass to Functionblock.ConfigurationGetResponse.functionSpecificConfigurationGetResponse hook
// Returns the current hardware configuration
message ConfigurationGetResponse {
   // Put here your function specific values
}

// ConfigurationDescribe to pass to Functionblock.Configuration.functionSpecificConfigurationDescribe hook
message ConfigurationDescribe {
    // no parameters
}

message ConfigurationDescribeResponse {
    // Put here your function specific values
}

// ConfigurationResponse to pass to Functionblock.ConfigurationResponse.functionSpecificConfigurationResponse hook
message ConfigurationResponse {
    oneof type {
        ConfigurationGetResponse get = 1;
        ConfigurationSetResponse set = 2;
        ConfigurationDescribeResponse describe = 3;
    }
}


// ============= FunctionControl =================

// FunctionControlGet to pass to Functionblock.FunctionControl.functionSpecificFunctionControlGet hook
message FunctionControlGet {
    // Put here your function specific values
}

// FunctionControlSet to pass to Functionblock.FunctionControl.functionSpecificFunctionControlSet hook
message FunctionControlSet {
    // Put here your function specific values
    // Example:
    fixed32 value = 1;
}


// FunctionControlGetResponse to pass to Functionblock.FunctionControlResponse.functionSpecificControlGet hook
message FunctionControlGetResponse {
    // Put here your function specific values
}


// FunctionControlSetResponse to pass to Functionblock.FunctionControlResponse.functionSpecificControlSet hook
message FunctionControlSetResponse {
    // Put here your function specific values
}


// ============= StreamControl ==================
// StreamControlStart to pass to Functionblock.StreamControlStart.functionSpecificStreamControlStart hook
message StreamControlStart {
    // Put here your function specific values
}

message Sample {
    // Put here your function specific values
    // Example:

    // Timestamp for that specific channels sample. This is the time the sample was taken.
    // This timestamp is in microseconds since the start of the device and does not get synchronized with the clients time.
    fixed64 timestamp = 1;
    // Specifies the binary channel value when the input value has changed.
    fixed32 value = 2;
}

// StreamData to pass to Functionblock.StreamData.functionSpecificStreamData hook
message StreamData {
    repeated Sample samples = 1;
}
