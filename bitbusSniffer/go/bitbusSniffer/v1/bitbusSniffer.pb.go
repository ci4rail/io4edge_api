//
//Copyright Â© 2025 Ci4Rail GmbH <engineering@ci4rail.com>
//
//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.0--rc2
// source: bitbusSniffer.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Sample_Flags int32

const (
	Sample_none        Sample_Flags = 0  // no flags set
	Sample_bad_crc     Sample_Flags = 1  // frame has a bad CRC
	Sample_frames_lost Sample_Flags = 16 // one or more message were lost before this frame
)

// Enum value maps for Sample_Flags.
var (
	Sample_Flags_name = map[int32]string{
		0:  "none",
		1:  "bad_crc",
		16: "frames_lost",
	}
	Sample_Flags_value = map[string]int32{
		"none":        0,
		"bad_crc":     1,
		"frames_lost": 16,
	}
)

func (x Sample_Flags) Enum() *Sample_Flags {
	p := new(Sample_Flags)
	*p = x
	return p
}

func (x Sample_Flags) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Sample_Flags) Descriptor() protoreflect.EnumDescriptor {
	return file_bitbusSniffer_proto_enumTypes[0].Descriptor()
}

func (Sample_Flags) Type() protoreflect.EnumType {
	return &file_bitbusSniffer_proto_enumTypes[0]
}

func (x Sample_Flags) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Sample_Flags.Descriptor instead.
func (Sample_Flags) EnumDescriptor() ([]byte, []int) {
	return file_bitbusSniffer_proto_rawDescGZIP(), []int{12, 0}
}

// ConfigurationSet to pass to
// Functionblock.Configuration.functionSpecificConfigurationSet hook
type ConfigurationSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IgnoreCrc     bool   `protobuf:"varint,1,opt,name=ignore_crc,json=ignoreCrc,proto3" json:"ignore_crc,omitempty"`            // if true, frames with wrong CRC are not discarded
	Baud_62500    bool   `protobuf:"varint,2,opt,name=baud_62500,json=baud62500,proto3" json:"baud_62500,omitempty"`            // if true, the baudrate shall be set to 62500 (otherwise 375000)
	AddressFilter []byte `protobuf:"bytes,3,opt,name=address_filter,json=addressFilter,proto3" json:"address_filter,omitempty"` // bit field mask for address filter (32 bytes with 8 bits each. TODO: Bit order?.
}

func (x *ConfigurationSet) Reset() {
	*x = ConfigurationSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bitbusSniffer_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigurationSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigurationSet) ProtoMessage() {}

func (x *ConfigurationSet) ProtoReflect() protoreflect.Message {
	mi := &file_bitbusSniffer_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigurationSet.ProtoReflect.Descriptor instead.
func (*ConfigurationSet) Descriptor() ([]byte, []int) {
	return file_bitbusSniffer_proto_rawDescGZIP(), []int{0}
}

func (x *ConfigurationSet) GetIgnoreCrc() bool {
	if x != nil {
		return x.IgnoreCrc
	}
	return false
}

func (x *ConfigurationSet) GetBaud_62500() bool {
	if x != nil {
		return x.Baud_62500
	}
	return false
}

func (x *ConfigurationSet) GetAddressFilter() []byte {
	if x != nil {
		return x.AddressFilter
	}
	return nil
}

// ConfigurationSetResponse to pass to
// Functionblock.Configuration.functionSpecificConfigurationSetResponse hook
type ConfigurationSetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ConfigurationSetResponse) Reset() {
	*x = ConfigurationSetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bitbusSniffer_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigurationSetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigurationSetResponse) ProtoMessage() {}

func (x *ConfigurationSetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bitbusSniffer_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigurationSetResponse.ProtoReflect.Descriptor instead.
func (*ConfigurationSetResponse) Descriptor() ([]byte, []int) {
	return file_bitbusSniffer_proto_rawDescGZIP(), []int{1}
}

// ConfigurationGet to pass to
// Functionblock.Configuration.functionSpecificConfigurationGet hook
type ConfigurationGet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ConfigurationGet) Reset() {
	*x = ConfigurationGet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bitbusSniffer_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigurationGet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigurationGet) ProtoMessage() {}

func (x *ConfigurationGet) ProtoReflect() protoreflect.Message {
	mi := &file_bitbusSniffer_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigurationGet.ProtoReflect.Descriptor instead.
func (*ConfigurationGet) Descriptor() ([]byte, []int) {
	return file_bitbusSniffer_proto_rawDescGZIP(), []int{2}
}

// ConfigurationGetResponse to pass to
// Functionblock.ConfigurationGetResponse.functionSpecificConfigurationGetResponse
// hook Returns the current hardware configuration
type ConfigurationGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ConfigurationGetResponse) Reset() {
	*x = ConfigurationGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bitbusSniffer_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigurationGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigurationGetResponse) ProtoMessage() {}

func (x *ConfigurationGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bitbusSniffer_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigurationGetResponse.ProtoReflect.Descriptor instead.
func (*ConfigurationGetResponse) Descriptor() ([]byte, []int) {
	return file_bitbusSniffer_proto_rawDescGZIP(), []int{3}
}

// ConfigurationDescribe to pass to
// Functionblock.Configuration.functionSpecificConfigurationDescribe hook
type ConfigurationDescribe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ConfigurationDescribe) Reset() {
	*x = ConfigurationDescribe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bitbusSniffer_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigurationDescribe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigurationDescribe) ProtoMessage() {}

func (x *ConfigurationDescribe) ProtoReflect() protoreflect.Message {
	mi := &file_bitbusSniffer_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigurationDescribe.ProtoReflect.Descriptor instead.
func (*ConfigurationDescribe) Descriptor() ([]byte, []int) {
	return file_bitbusSniffer_proto_rawDescGZIP(), []int{4}
}

type ConfigurationDescribeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ConfigurationDescribeResponse) Reset() {
	*x = ConfigurationDescribeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bitbusSniffer_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigurationDescribeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigurationDescribeResponse) ProtoMessage() {}

func (x *ConfigurationDescribeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bitbusSniffer_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigurationDescribeResponse.ProtoReflect.Descriptor instead.
func (*ConfigurationDescribeResponse) Descriptor() ([]byte, []int) {
	return file_bitbusSniffer_proto_rawDescGZIP(), []int{5}
}

// FunctionControlGet to pass to
// Functionblock.FunctionControl.functionSpecificFunctionControlGet hook
type FunctionControlGet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FunctionControlGet) Reset() {
	*x = FunctionControlGet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bitbusSniffer_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FunctionControlGet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FunctionControlGet) ProtoMessage() {}

func (x *FunctionControlGet) ProtoReflect() protoreflect.Message {
	mi := &file_bitbusSniffer_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FunctionControlGet.ProtoReflect.Descriptor instead.
func (*FunctionControlGet) Descriptor() ([]byte, []int) {
	return file_bitbusSniffer_proto_rawDescGZIP(), []int{6}
}

type Frame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// byte 0: address
	// byte 1: control
	// byte 2..n: information
	BitbusFrame []byte `protobuf:"bytes,1,opt,name=bitbus_frame,json=bitbusFrame,proto3" json:"bitbus_frame,omitempty"`
}

func (x *Frame) Reset() {
	*x = Frame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bitbusSniffer_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Frame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Frame) ProtoMessage() {}

func (x *Frame) ProtoReflect() protoreflect.Message {
	mi := &file_bitbusSniffer_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Frame.ProtoReflect.Descriptor instead.
func (*Frame) Descriptor() ([]byte, []int) {
	return file_bitbusSniffer_proto_rawDescGZIP(), []int{7}
}

func (x *Frame) GetBitbusFrame() []byte {
	if x != nil {
		return x.BitbusFrame
	}
	return nil
}

// FunctionControlSet to pass to
// Functionblock.FunctionControl.functionSpecificFunctionControlSet hook
type FunctionControlSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Frames []*Frame `protobuf:"bytes,1,rep,name=frames,proto3" json:"frames,omitempty"` // frames to send to the bus
}

func (x *FunctionControlSet) Reset() {
	*x = FunctionControlSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bitbusSniffer_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FunctionControlSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FunctionControlSet) ProtoMessage() {}

func (x *FunctionControlSet) ProtoReflect() protoreflect.Message {
	mi := &file_bitbusSniffer_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FunctionControlSet.ProtoReflect.Descriptor instead.
func (*FunctionControlSet) Descriptor() ([]byte, []int) {
	return file_bitbusSniffer_proto_rawDescGZIP(), []int{8}
}

func (x *FunctionControlSet) GetFrames() []*Frame {
	if x != nil {
		return x.Frames
	}
	return nil
}

// FunctionControlGetResponse to pass to
// Functionblock.FunctionControlResponse.functionSpecificControlGet hook
type FunctionControlGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FunctionControlGetResponse) Reset() {
	*x = FunctionControlGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bitbusSniffer_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FunctionControlGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FunctionControlGetResponse) ProtoMessage() {}

func (x *FunctionControlGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bitbusSniffer_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FunctionControlGetResponse.ProtoReflect.Descriptor instead.
func (*FunctionControlGetResponse) Descriptor() ([]byte, []int) {
	return file_bitbusSniffer_proto_rawDescGZIP(), []int{9}
}

// FunctionControlSetResponse to pass to
// Functionblock.FunctionControlResponse.functionSpecificControlSet hook
type FunctionControlSetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FunctionControlSetResponse) Reset() {
	*x = FunctionControlSetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bitbusSniffer_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FunctionControlSetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FunctionControlSetResponse) ProtoMessage() {}

func (x *FunctionControlSetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bitbusSniffer_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FunctionControlSetResponse.ProtoReflect.Descriptor instead.
func (*FunctionControlSetResponse) Descriptor() ([]byte, []int) {
	return file_bitbusSniffer_proto_rawDescGZIP(), []int{10}
}

// StreamControlStart to pass to
// Functionblock.StreamControlStart.functionSpecificStreamControlStart hook
type StreamControlStart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StreamControlStart) Reset() {
	*x = StreamControlStart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bitbusSniffer_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamControlStart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamControlStart) ProtoMessage() {}

func (x *StreamControlStart) ProtoReflect() protoreflect.Message {
	mi := &file_bitbusSniffer_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamControlStart.ProtoReflect.Descriptor instead.
func (*StreamControlStart) Descriptor() ([]byte, []int) {
	return file_bitbusSniffer_proto_rawDescGZIP(), []int{11}
}

type Sample struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// This timestamp is in microseconds since the start of the device and does not get synchronized with the clients time.
	Timestamp uint64 `protobuf:"fixed64,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// flags for the sample (bitmask with values from Flags enum)
	Flags uint32 `protobuf:"varint,2,opt,name=flags,proto3" json:"flags,omitempty"`
	// Frame received from the bus
	// byte 0: address
	// byte 1: control
	// byte 2..n: information
	BitbusFrame []byte `protobuf:"bytes,3,opt,name=bitbus_frame,json=bitbusFrame,proto3" json:"bitbus_frame,omitempty"`
}

func (x *Sample) Reset() {
	*x = Sample{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bitbusSniffer_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sample) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sample) ProtoMessage() {}

func (x *Sample) ProtoReflect() protoreflect.Message {
	mi := &file_bitbusSniffer_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sample.ProtoReflect.Descriptor instead.
func (*Sample) Descriptor() ([]byte, []int) {
	return file_bitbusSniffer_proto_rawDescGZIP(), []int{12}
}

func (x *Sample) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Sample) GetFlags() uint32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

func (x *Sample) GetBitbusFrame() []byte {
	if x != nil {
		return x.BitbusFrame
	}
	return nil
}

// StreamData to pass to Functionblock.StreamData.functionSpecificStreamData hook
type StreamData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Samples []*Sample `protobuf:"bytes,1,rep,name=samples,proto3" json:"samples,omitempty"` // frames received from the bus with timestamp
}

func (x *StreamData) Reset() {
	*x = StreamData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bitbusSniffer_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamData) ProtoMessage() {}

func (x *StreamData) ProtoReflect() protoreflect.Message {
	mi := &file_bitbusSniffer_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamData.ProtoReflect.Descriptor instead.
func (*StreamData) Descriptor() ([]byte, []int) {
	return file_bitbusSniffer_proto_rawDescGZIP(), []int{13}
}

func (x *StreamData) GetSamples() []*Sample {
	if x != nil {
		return x.Samples
	}
	return nil
}

var File_bitbusSniffer_proto protoreflect.FileDescriptor

var file_bitbusSniffer_proto_rawDesc = []byte{
	0x0a, 0x13, 0x62, 0x69, 0x74, 0x62, 0x75, 0x73, 0x53, 0x6e, 0x69, 0x66, 0x66, 0x65, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x62, 0x69, 0x74, 0x62, 0x75, 0x73, 0x53, 0x6e, 0x69,
	0x66, 0x66, 0x65, 0x72, 0x22, 0x77, 0x0a, 0x10, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x67, 0x6e, 0x6f,
	0x72, 0x65, 0x5f, 0x63, 0x72, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x67,
	0x6e, 0x6f, 0x72, 0x65, 0x43, 0x72, 0x63, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x75, 0x64, 0x5f,
	0x36, 0x32, 0x35, 0x30, 0x30, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x62, 0x61, 0x75,
	0x64, 0x36, 0x32, 0x35, 0x30, 0x30, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x1a, 0x0a,
	0x18, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x12, 0x0a, 0x10, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x65, 0x74, 0x22, 0x1a, 0x0a,
	0x18, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x17, 0x0a, 0x15, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x22, 0x1f, 0x0a, 0x1d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x14, 0x0a, 0x12, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x47, 0x65, 0x74, 0x22, 0x2a, 0x0a, 0x05, 0x46, 0x72, 0x61,
	0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x69, 0x74, 0x62, 0x75, 0x73, 0x5f, 0x66, 0x72, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x62, 0x69, 0x74, 0x62, 0x75, 0x73,
	0x46, 0x72, 0x61, 0x6d, 0x65, 0x22, 0x42, 0x0a, 0x12, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x65, 0x74, 0x12, 0x2c, 0x0a, 0x06, 0x66,
	0x72, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x69,
	0x74, 0x62, 0x75, 0x73, 0x53, 0x6e, 0x69, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x46, 0x72, 0x61, 0x6d,
	0x65, 0x52, 0x06, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x22, 0x1c, 0x0a, 0x1a, 0x46, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x0a, 0x1a, 0x46, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x14, 0x0a, 0x12, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x74, 0x61, 0x72, 0x74, 0x22, 0x90, 0x01, 0x0a, 0x06,
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x69,
	0x74, 0x62, 0x75, 0x73, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0b, 0x62, 0x69, 0x74, 0x62, 0x75, 0x73, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x22, 0x2f, 0x0a,
	0x05, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x08, 0x0a, 0x04, 0x6e, 0x6f, 0x6e, 0x65, 0x10, 0x00,
	0x12, 0x0b, 0x0a, 0x07, 0x62, 0x61, 0x64, 0x5f, 0x63, 0x72, 0x63, 0x10, 0x01, 0x12, 0x0f, 0x0a,
	0x0b, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x6c, 0x6f, 0x73, 0x74, 0x10, 0x10, 0x22, 0x3d,
	0x0a, 0x0a, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2f, 0x0a, 0x07,
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x62, 0x69, 0x74, 0x62, 0x75, 0x73, 0x53, 0x6e, 0x69, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x53, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x52, 0x07, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x42, 0x12, 0x5a,
	0x10, 0x62, 0x69, 0x74, 0x62, 0x75, 0x73, 0x53, 0x6e, 0x69, 0x66, 0x66, 0x65, 0x72, 0x2f, 0x76,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bitbusSniffer_proto_rawDescOnce sync.Once
	file_bitbusSniffer_proto_rawDescData = file_bitbusSniffer_proto_rawDesc
)

func file_bitbusSniffer_proto_rawDescGZIP() []byte {
	file_bitbusSniffer_proto_rawDescOnce.Do(func() {
		file_bitbusSniffer_proto_rawDescData = protoimpl.X.CompressGZIP(file_bitbusSniffer_proto_rawDescData)
	})
	return file_bitbusSniffer_proto_rawDescData
}

var file_bitbusSniffer_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_bitbusSniffer_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_bitbusSniffer_proto_goTypes = []interface{}{
	(Sample_Flags)(0),                     // 0: bitbusSniffer.Sample.Flags
	(*ConfigurationSet)(nil),              // 1: bitbusSniffer.ConfigurationSet
	(*ConfigurationSetResponse)(nil),      // 2: bitbusSniffer.ConfigurationSetResponse
	(*ConfigurationGet)(nil),              // 3: bitbusSniffer.ConfigurationGet
	(*ConfigurationGetResponse)(nil),      // 4: bitbusSniffer.ConfigurationGetResponse
	(*ConfigurationDescribe)(nil),         // 5: bitbusSniffer.ConfigurationDescribe
	(*ConfigurationDescribeResponse)(nil), // 6: bitbusSniffer.ConfigurationDescribeResponse
	(*FunctionControlGet)(nil),            // 7: bitbusSniffer.FunctionControlGet
	(*Frame)(nil),                         // 8: bitbusSniffer.Frame
	(*FunctionControlSet)(nil),            // 9: bitbusSniffer.FunctionControlSet
	(*FunctionControlGetResponse)(nil),    // 10: bitbusSniffer.FunctionControlGetResponse
	(*FunctionControlSetResponse)(nil),    // 11: bitbusSniffer.FunctionControlSetResponse
	(*StreamControlStart)(nil),            // 12: bitbusSniffer.StreamControlStart
	(*Sample)(nil),                        // 13: bitbusSniffer.Sample
	(*StreamData)(nil),                    // 14: bitbusSniffer.StreamData
}
var file_bitbusSniffer_proto_depIdxs = []int32{
	8,  // 0: bitbusSniffer.FunctionControlSet.frames:type_name -> bitbusSniffer.Frame
	13, // 1: bitbusSniffer.StreamData.samples:type_name -> bitbusSniffer.Sample
	2,  // [2:2] is the sub-list for method output_type
	2,  // [2:2] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_bitbusSniffer_proto_init() }
func file_bitbusSniffer_proto_init() {
	if File_bitbusSniffer_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bitbusSniffer_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigurationSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bitbusSniffer_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigurationSetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bitbusSniffer_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigurationGet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bitbusSniffer_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigurationGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bitbusSniffer_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigurationDescribe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bitbusSniffer_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigurationDescribeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bitbusSniffer_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FunctionControlGet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bitbusSniffer_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Frame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bitbusSniffer_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FunctionControlSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bitbusSniffer_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FunctionControlGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bitbusSniffer_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FunctionControlSetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bitbusSniffer_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamControlStart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bitbusSniffer_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sample); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bitbusSniffer_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bitbusSniffer_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_bitbusSniffer_proto_goTypes,
		DependencyIndexes: file_bitbusSniffer_proto_depIdxs,
		EnumInfos:         file_bitbusSniffer_proto_enumTypes,
		MessageInfos:      file_bitbusSniffer_proto_msgTypes,
	}.Build()
	File_bitbusSniffer_proto = out.File
	file_bitbusSniffer_proto_rawDesc = nil
	file_bitbusSniffer_proto_goTypes = nil
	file_bitbusSniffer_proto_depIdxs = nil
}
