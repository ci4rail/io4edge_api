/*
Copyright Â© 2021 Ci4Rail GmbH <engineering@ci4rail.com>

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
syntax = "proto3";

import "google/protobuf/any.proto";

package functionblock;
option go_package = "functionblock/v1alpha1";

// -------- Meta ------------
message Context {
  // A message identifying key for a command-response pairs, e.g. an UUID the
  // clients sends on the request.
  string value = 1;
}

// ------- Commands ---------
message Command {
  Context context = 1;
  oneof type {
    Configuration Configuration = 2;
    FunctionControl functionControl = 3;
    StreamControl streamControl = 4;
  }
}

// Configuration contains the function blocks high level configuration
message Configuration {
  oneof action {
    // Setting a new configuration
    google.protobuf.Any functionSpecificConfigurationSet = 10;
    // Getting the current configuration
    google.protobuf.Any functionSpecificConfigurationGet = 20;
    // Describe hardware capabilities
    google.protobuf.Any functionSpecificConfigurationDescribe = 30;
  }
}

// FunctionControl specifies the direct function control for getting and setting values
message FunctionControl {
  oneof action {
    google.protobuf.Any functionSpecificFunctionControlSet = 1;
    google.protobuf.Any functionSpecificFunctionControlGet = 2;
  }
}

// StreamControlStart specifies the start of a stream.
message StreamControlStart {
  google.protobuf.Any functionSpecificStreamControlStart = 2;
}

// StreamControlStart specifies the stop of a stream.
message StreamControlStop {
}

// StreamControl specifies if the stream shall be started or stopped
message StreamControl {
  oneof action {
    StreamControlStart start = 1;
    StreamControlStop stop = 2;
  }
}

// --------- Responses ------------
enum Status {
  OK = 0;
  UNSPECIFIC_ERROR = 1;
  UNKNOWN_COMMAND = 2;
  NOT_IMPLEMENTED = 3;
  WRONG_CLIENT = 4;
  INVALID_PARAMETER = 5;
  HW_FAULT = 6;
}

message Error { string error = 1; }

message ConfigurationResponse {
  oneof action {
    // Setting a new configuration
    google.protobuf.Any functionSpecificConfigurationSet = 10;
    // Getting the current configuration
    google.protobuf.Any functionSpecificConfigurationGet = 20;
    // Describe hardware capabilities
    google.protobuf.Any functionSpecificConfigurationDescribe = 30;
  }
}

message FunctionControlResponse {
  oneof action {
    google.protobuf.Any functionSpecificFunctionControlSet = 1;
    google.protobuf.Any functionSpecificFunctionControlGet = 2;
  }
}

message StreamControlResponse {
}

message StreamData {
  // timestamp when the message has been sent out
  fixed64 deliveryTimestampUs = 1;

  // sample series sequence number (counted from 0, rolls over)
  fixed32 sequence = 2;

  // Function specific data type
  google.protobuf.Any functionSpecificStreamData = 10;
}

message Response {
  Context context = 1;
  Status status = 2;
  Error error = 3;
  oneof type {
    ConfigurationResponse Configuration = 4;
    FunctionControlResponse functionControl = 5;
    StreamControlResponse streamControl = 6;
    StreamData stream = 7;
  }
}
