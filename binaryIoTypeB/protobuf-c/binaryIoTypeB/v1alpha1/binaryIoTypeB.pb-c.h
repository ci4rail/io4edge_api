/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: binaryIoTypeB.proto */

#ifndef PROTOBUF_C_binaryIoTypeB_2eproto__INCLUDED
#define PROTOBUF_C_binaryIoTypeB_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003003 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _BinaryIoTypeB__ConfigurationSet BinaryIoTypeB__ConfigurationSet;
typedef struct _BinaryIoTypeB__ConfigurationSetResponse BinaryIoTypeB__ConfigurationSetResponse;
typedef struct _BinaryIoTypeB__ConfigurationGet BinaryIoTypeB__ConfigurationGet;
typedef struct _BinaryIoTypeB__ConfigurationGetResponse BinaryIoTypeB__ConfigurationGetResponse;
typedef struct _BinaryIoTypeB__ConfigurationDescribe BinaryIoTypeB__ConfigurationDescribe;
typedef struct _BinaryIoTypeB__ChannelConfig BinaryIoTypeB__ChannelConfig;
typedef struct _BinaryIoTypeB__ConfigurationDescribeResponse BinaryIoTypeB__ConfigurationDescribeResponse;
typedef struct _BinaryIoTypeB__ConfigurationResponse BinaryIoTypeB__ConfigurationResponse;
typedef struct _BinaryIoTypeB__GetSingle BinaryIoTypeB__GetSingle;
typedef struct _BinaryIoTypeB__GetAll BinaryIoTypeB__GetAll;
typedef struct _BinaryIoTypeB__FunctionControlGet BinaryIoTypeB__FunctionControlGet;
typedef struct _BinaryIoTypeB__SetSingle BinaryIoTypeB__SetSingle;
typedef struct _BinaryIoTypeB__SetAll BinaryIoTypeB__SetAll;
typedef struct _BinaryIoTypeB__FunctionControlSet BinaryIoTypeB__FunctionControlSet;
typedef struct _BinaryIoTypeB__GetSingleResponse BinaryIoTypeB__GetSingleResponse;
typedef struct _BinaryIoTypeB__GetAllResponse BinaryIoTypeB__GetAllResponse;
typedef struct _BinaryIoTypeB__FunctionControlGetResponse BinaryIoTypeB__FunctionControlGetResponse;
typedef struct _BinaryIoTypeB__SetSingleResponse BinaryIoTypeB__SetSingleResponse;
typedef struct _BinaryIoTypeB__SetAllResponse BinaryIoTypeB__SetAllResponse;
typedef struct _BinaryIoTypeB__FunctionControlSetResponse BinaryIoTypeB__FunctionControlSetResponse;
typedef struct _BinaryIoTypeB__SubscribeChannel BinaryIoTypeB__SubscribeChannel;
typedef struct _BinaryIoTypeB__StreamControlStart BinaryIoTypeB__StreamControlStart;
typedef struct _BinaryIoTypeB__Sample BinaryIoTypeB__Sample;
typedef struct _BinaryIoTypeB__StreamData BinaryIoTypeB__StreamData;


/* --- enums --- */

typedef enum _BinaryIoTypeB__ChannelDirection {
  /*
   * input channel
   */
  BINARY_IO_TYPE_B__CHANNEL_DIRECTION__BINARYIOTYPEB_INPUT = 0,
  /*
   * output channel
   */
  BINARY_IO_TYPE_B__CHANNEL_DIRECTION__BINARYIOTYPEB_OUTPUT = 1,
  /*
   * input/output channel
   */
  BINARY_IO_TYPE_B__CHANNEL_DIRECTION__BINARYIOTYPEB_INPUT_OUTPUT = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(BINARY_IO_TYPE_B__CHANNEL_DIRECTION)
} BinaryIoTypeB__ChannelDirection;
typedef enum _BinaryIoTypeB__SubscriptionType {
  /*
   * Report on rising edge
   */
  BINARY_IO_TYPE_B__SUBSCRIPTION_TYPE__BINARYIOTYPEB_ON_RISING_EDGE = 0,
  /*
   * Report on falling edge
   */
  BINARY_IO_TYPE_B__SUBSCRIPTION_TYPE__BINARYIOTYPEB_ON_FALLING_EDGE = 1,
  /*
   * Report on any edge
   */
  BINARY_IO_TYPE_B__SUBSCRIPTION_TYPE__BINARYIOTYPEB_ON_ANY_EDGE = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(BINARY_IO_TYPE_B__SUBSCRIPTION_TYPE)
} BinaryIoTypeB__SubscriptionType;

/* --- messages --- */

/*
 * ConfigurationSet to pass to Functionblock.Configuration.functionSpecificConfigurationSet hook
 */
struct  _BinaryIoTypeB__ConfigurationSet
{
  ProtobufCMessage base;
};
#define BINARY_IO_TYPE_B__CONFIGURATION_SET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&binary_io_type_b__configuration_set__descriptor) \
     }


/*
 * ConfigurationSetResponse to pass to Functionblock.Configuration.functionSpecificConfigurationSetResponse hook
 */
struct  _BinaryIoTypeB__ConfigurationSetResponse
{
  ProtobufCMessage base;
};
#define BINARY_IO_TYPE_B__CONFIGURATION_SET_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&binary_io_type_b__configuration_set_response__descriptor) \
     }


/*
 * ConfigurationGet to pass to Functionblock.Configuration.functionSpecificConfigurationGet hook
 */
struct  _BinaryIoTypeB__ConfigurationGet
{
  ProtobufCMessage base;
};
#define BINARY_IO_TYPE_B__CONFIGURATION_GET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&binary_io_type_b__configuration_get__descriptor) \
     }


/*
 * ConfigurationGetResponse to pass to Functionblock.ConfigurationGetResponse.functionSpecificConfigurationGetResponse hook
 * Returns the current hardware configuration
 */
struct  _BinaryIoTypeB__ConfigurationGetResponse
{
  ProtobufCMessage base;
};
#define BINARY_IO_TYPE_B__CONFIGURATION_GET_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&binary_io_type_b__configuration_get_response__descriptor) \
     }


/*
 * ConfigurationDescribe to pass to Functionblock.Configuration.functionSpecificConfigurationDescribe hook
 */
struct  _BinaryIoTypeB__ConfigurationDescribe
{
  ProtobufCMessage base;
};
#define BINARY_IO_TYPE_B__CONFIGURATION_DESCRIBE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&binary_io_type_b__configuration_describe__descriptor) \
     }


struct  _BinaryIoTypeB__ChannelConfig
{
  ProtobufCMessage base;
  /*
   * channel number
   */
  uint32_t channel;
  /*
   * channel direction
   */
  BinaryIoTypeB__ChannelDirection direction;
};
#define BINARY_IO_TYPE_B__CHANNEL_CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&binary_io_type_b__channel_config__descriptor) \
    , 0, BINARY_IO_TYPE_B__CHANNEL_DIRECTION__BINARYIOTYPEB_INPUT }


struct  _BinaryIoTypeB__ConfigurationDescribeResponse
{
  ProtobufCMessage base;
  size_t n_channelconfig;
  BinaryIoTypeB__ChannelConfig **channelconfig;
};
#define BINARY_IO_TYPE_B__CONFIGURATION_DESCRIBE_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&binary_io_type_b__configuration_describe_response__descriptor) \
    , 0,NULL }


typedef enum {
  BINARY_IO_TYPE_B__CONFIGURATION_RESPONSE__TYPE__NOT_SET = 0,
  BINARY_IO_TYPE_B__CONFIGURATION_RESPONSE__TYPE_GET = 1,
  BINARY_IO_TYPE_B__CONFIGURATION_RESPONSE__TYPE_SET = 2,
  BINARY_IO_TYPE_B__CONFIGURATION_RESPONSE__TYPE_DESCRIBE = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(BINARY_IO_TYPE_B__CONFIGURATION_RESPONSE__TYPE)
} BinaryIoTypeB__ConfigurationResponse__TypeCase;

/*
 * ConfigurationResponse to pass to Functionblock.ConfigurationResponse.functionSpecificConfigurationResponse hook
 */
struct  _BinaryIoTypeB__ConfigurationResponse
{
  ProtobufCMessage base;
  BinaryIoTypeB__ConfigurationResponse__TypeCase type_case;
  union {
    BinaryIoTypeB__ConfigurationGetResponse *get;
    BinaryIoTypeB__ConfigurationSetResponse *set;
    BinaryIoTypeB__ConfigurationDescribeResponse *describe;
  };
};
#define BINARY_IO_TYPE_B__CONFIGURATION_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&binary_io_type_b__configuration_response__descriptor) \
    , BINARY_IO_TYPE_B__CONFIGURATION_RESPONSE__TYPE__NOT_SET, {0} }


/*
 * ============= FunctionControl =================
 * Gets the current value of a single binary channel
 */
struct  _BinaryIoTypeB__GetSingle
{
  ProtobufCMessage base;
  /*
   * Specifies the binary input channel (0 - (number of channels - 1))
   */
  uint32_t channel;
};
#define BINARY_IO_TYPE_B__GET_SINGLE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&binary_io_type_b__get_single__descriptor) \
    , 0 }


/*
 * Gets the values of all binary channels
 */
struct  _BinaryIoTypeB__GetAll
{
  ProtobufCMessage base;
  /*
   * mask to define which channels are affected by the get all command. 0 means not set, 1 means set, LSB is Output0
   */
  uint32_t mask;
};
#define BINARY_IO_TYPE_B__GET_ALL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&binary_io_type_b__get_all__descriptor) \
    , 0 }


typedef enum {
  BINARY_IO_TYPE_B__FUNCTION_CONTROL_GET__TYPE__NOT_SET = 0,
  BINARY_IO_TYPE_B__FUNCTION_CONTROL_GET__TYPE_SINGLE = 1,
  BINARY_IO_TYPE_B__FUNCTION_CONTROL_GET__TYPE_ALL = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(BINARY_IO_TYPE_B__FUNCTION_CONTROL_GET__TYPE)
} BinaryIoTypeB__FunctionControlGet__TypeCase;

/*
 * FunctionControlGet to pass to Functionblock.FunctionControl.functionSpecificFunctionControlGet hook
 */
struct  _BinaryIoTypeB__FunctionControlGet
{
  ProtobufCMessage base;
  BinaryIoTypeB__FunctionControlGet__TypeCase type_case;
  union {
    BinaryIoTypeB__GetSingle *single;
    BinaryIoTypeB__GetAll *all;
  };
};
#define BINARY_IO_TYPE_B__FUNCTION_CONTROL_GET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&binary_io_type_b__function_control_get__descriptor) \
    , BINARY_IO_TYPE_B__FUNCTION_CONTROL_GET__TYPE__NOT_SET, {0} }


/*
 * Sets the value of a single binary channel
 */
struct  _BinaryIoTypeB__SetSingle
{
  ProtobufCMessage base;
  /*
   * Number of the binary output channel (0 - (number of channels - 1))
   */
  uint32_t channel;
  /*
   * State of the binary output channel. false means inactive, true means active.
   */
  protobuf_c_boolean state;
};
#define BINARY_IO_TYPE_B__SET_SINGLE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&binary_io_type_b__set_single__descriptor) \
    , 0, 0 }


/*
 * Sets all binary channels
 */
struct  _BinaryIoTypeB__SetAll
{
  ProtobufCMessage base;
  /*
   * binary coded map of input values. 0 means inactive, 1 means active, LSB is Output0
   */
  uint32_t values;
  /*
   * mask to define which channels are affected by the set all command. 0 means not set, 1 means set, LSB is Output0
   */
  uint32_t mask;
};
#define BINARY_IO_TYPE_B__SET_ALL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&binary_io_type_b__set_all__descriptor) \
    , 0, 0 }


typedef enum {
  BINARY_IO_TYPE_B__FUNCTION_CONTROL_SET__TYPE__NOT_SET = 0,
  BINARY_IO_TYPE_B__FUNCTION_CONTROL_SET__TYPE_SINGLE = 1,
  BINARY_IO_TYPE_B__FUNCTION_CONTROL_SET__TYPE_ALL = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(BINARY_IO_TYPE_B__FUNCTION_CONTROL_SET__TYPE)
} BinaryIoTypeB__FunctionControlSet__TypeCase;

/*
 * FunctionControlSet to pass to Functionblock.FunctionControl.functionSpecificFunctionControlSet hook
 */
struct  _BinaryIoTypeB__FunctionControlSet
{
  ProtobufCMessage base;
  BinaryIoTypeB__FunctionControlSet__TypeCase type_case;
  union {
    BinaryIoTypeB__SetSingle *single;
    BinaryIoTypeB__SetAll *all;
  };
};
#define BINARY_IO_TYPE_B__FUNCTION_CONTROL_SET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&binary_io_type_b__function_control_set__descriptor) \
    , BINARY_IO_TYPE_B__FUNCTION_CONTROL_SET__TYPE__NOT_SET, {0} }


struct  _BinaryIoTypeB__GetSingleResponse
{
  ProtobufCMessage base;
  /*
   * Number of the binary input channel
   */
  uint32_t channel;
  /*
   * State for the bianry input channel
   */
  protobuf_c_boolean state;
};
#define BINARY_IO_TYPE_B__GET_SINGLE_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&binary_io_type_b__get_single_response__descriptor) \
    , 0, 0 }


struct  _BinaryIoTypeB__GetAllResponse
{
  ProtobufCMessage base;
  /*
   * binary coded map of input values. 0 means inactive, 1 means active, LSB is Input0
   */
  uint32_t inputs;
};
#define BINARY_IO_TYPE_B__GET_ALL_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&binary_io_type_b__get_all_response__descriptor) \
    , 0 }


typedef enum {
  BINARY_IO_TYPE_B__FUNCTION_CONTROL_GET_RESPONSE__TYPE__NOT_SET = 0,
  BINARY_IO_TYPE_B__FUNCTION_CONTROL_GET_RESPONSE__TYPE_SINGLE = 1,
  BINARY_IO_TYPE_B__FUNCTION_CONTROL_GET_RESPONSE__TYPE_ALL = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(BINARY_IO_TYPE_B__FUNCTION_CONTROL_GET_RESPONSE__TYPE)
} BinaryIoTypeB__FunctionControlGetResponse__TypeCase;

/*
 * FunctionControlGetResponse to pass to Functionblock.FunctionControlResponse.functionSpecificControlGet hook
 */
struct  _BinaryIoTypeB__FunctionControlGetResponse
{
  ProtobufCMessage base;
  BinaryIoTypeB__FunctionControlGetResponse__TypeCase type_case;
  union {
    BinaryIoTypeB__GetSingleResponse *single;
    BinaryIoTypeB__GetAllResponse *all;
  };
};
#define BINARY_IO_TYPE_B__FUNCTION_CONTROL_GET_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&binary_io_type_b__function_control_get_response__descriptor) \
    , BINARY_IO_TYPE_B__FUNCTION_CONTROL_GET_RESPONSE__TYPE__NOT_SET, {0} }


struct  _BinaryIoTypeB__SetSingleResponse
{
  ProtobufCMessage base;
};
#define BINARY_IO_TYPE_B__SET_SINGLE_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&binary_io_type_b__set_single_response__descriptor) \
     }


struct  _BinaryIoTypeB__SetAllResponse
{
  ProtobufCMessage base;
};
#define BINARY_IO_TYPE_B__SET_ALL_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&binary_io_type_b__set_all_response__descriptor) \
     }


typedef enum {
  BINARY_IO_TYPE_B__FUNCTION_CONTROL_SET_RESPONSE__TYPE__NOT_SET = 0,
  BINARY_IO_TYPE_B__FUNCTION_CONTROL_SET_RESPONSE__TYPE_SINGLE = 1,
  BINARY_IO_TYPE_B__FUNCTION_CONTROL_SET_RESPONSE__TYPE_ALL = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(BINARY_IO_TYPE_B__FUNCTION_CONTROL_SET_RESPONSE__TYPE)
} BinaryIoTypeB__FunctionControlSetResponse__TypeCase;

/*
 * FunctionControlSetResponse to pass to Functionblock.FunctionControlResponse.functionSpecificControlSet hook
 */
struct  _BinaryIoTypeB__FunctionControlSetResponse
{
  ProtobufCMessage base;
  BinaryIoTypeB__FunctionControlSetResponse__TypeCase type_case;
  union {
    BinaryIoTypeB__SetSingleResponse *single;
    BinaryIoTypeB__SetAllResponse *all;
  };
};
#define BINARY_IO_TYPE_B__FUNCTION_CONTROL_SET_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&binary_io_type_b__function_control_set_response__descriptor) \
    , BINARY_IO_TYPE_B__FUNCTION_CONTROL_SET_RESPONSE__TYPE__NOT_SET, {0} }


struct  _BinaryIoTypeB__SubscribeChannel
{
  ProtobufCMessage base;
  /*
   * Number of the binary input channel
   */
  uint32_t channel;
  /*
   * Define on which channel event client shall be reported
   */
  BinaryIoTypeB__SubscriptionType subscriptiontype;
};
#define BINARY_IO_TYPE_B__SUBSCRIBE_CHANNEL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&binary_io_type_b__subscribe_channel__descriptor) \
    , 0, BINARY_IO_TYPE_B__SUBSCRIPTION_TYPE__BINARYIOTYPEB_ON_RISING_EDGE }


/*
 * ============= StreamControl ==================
 * StreamControlStart to pass to Functionblock.StreamControlStart.functionSpecificStreamControlStart hook
 */
struct  _BinaryIoTypeB__StreamControlStart
{
  ProtobufCMessage base;
  size_t n_subscribechannel;
  BinaryIoTypeB__SubscribeChannel **subscribechannel;
};
#define BINARY_IO_TYPE_B__STREAM_CONTROL_START__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&binary_io_type_b__stream_control_start__descriptor) \
    , 0,NULL }


struct  _BinaryIoTypeB__Sample
{
  ProtobufCMessage base;
  uint64_t timestamp;
  uint32_t inputs;
};
#define BINARY_IO_TYPE_B__SAMPLE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&binary_io_type_b__sample__descriptor) \
    , 0, 0 }


/*
 * StreamData to pass to Functionblock.StreamData.functionSpecificStreamData hook
 */
struct  _BinaryIoTypeB__StreamData
{
  ProtobufCMessage base;
  size_t n_samples;
  BinaryIoTypeB__Sample **samples;
};
#define BINARY_IO_TYPE_B__STREAM_DATA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&binary_io_type_b__stream_data__descriptor) \
    , 0,NULL }


/* BinaryIoTypeB__ConfigurationSet methods */
void   binary_io_type_b__configuration_set__init
                     (BinaryIoTypeB__ConfigurationSet         *message);
size_t binary_io_type_b__configuration_set__get_packed_size
                     (const BinaryIoTypeB__ConfigurationSet   *message);
size_t binary_io_type_b__configuration_set__pack
                     (const BinaryIoTypeB__ConfigurationSet   *message,
                      uint8_t             *out);
size_t binary_io_type_b__configuration_set__pack_to_buffer
                     (const BinaryIoTypeB__ConfigurationSet   *message,
                      ProtobufCBuffer     *buffer);
BinaryIoTypeB__ConfigurationSet *
       binary_io_type_b__configuration_set__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   binary_io_type_b__configuration_set__free_unpacked
                     (BinaryIoTypeB__ConfigurationSet *message,
                      ProtobufCAllocator *allocator);
/* BinaryIoTypeB__ConfigurationSetResponse methods */
void   binary_io_type_b__configuration_set_response__init
                     (BinaryIoTypeB__ConfigurationSetResponse         *message);
size_t binary_io_type_b__configuration_set_response__get_packed_size
                     (const BinaryIoTypeB__ConfigurationSetResponse   *message);
size_t binary_io_type_b__configuration_set_response__pack
                     (const BinaryIoTypeB__ConfigurationSetResponse   *message,
                      uint8_t             *out);
size_t binary_io_type_b__configuration_set_response__pack_to_buffer
                     (const BinaryIoTypeB__ConfigurationSetResponse   *message,
                      ProtobufCBuffer     *buffer);
BinaryIoTypeB__ConfigurationSetResponse *
       binary_io_type_b__configuration_set_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   binary_io_type_b__configuration_set_response__free_unpacked
                     (BinaryIoTypeB__ConfigurationSetResponse *message,
                      ProtobufCAllocator *allocator);
/* BinaryIoTypeB__ConfigurationGet methods */
void   binary_io_type_b__configuration_get__init
                     (BinaryIoTypeB__ConfigurationGet         *message);
size_t binary_io_type_b__configuration_get__get_packed_size
                     (const BinaryIoTypeB__ConfigurationGet   *message);
size_t binary_io_type_b__configuration_get__pack
                     (const BinaryIoTypeB__ConfigurationGet   *message,
                      uint8_t             *out);
size_t binary_io_type_b__configuration_get__pack_to_buffer
                     (const BinaryIoTypeB__ConfigurationGet   *message,
                      ProtobufCBuffer     *buffer);
BinaryIoTypeB__ConfigurationGet *
       binary_io_type_b__configuration_get__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   binary_io_type_b__configuration_get__free_unpacked
                     (BinaryIoTypeB__ConfigurationGet *message,
                      ProtobufCAllocator *allocator);
/* BinaryIoTypeB__ConfigurationGetResponse methods */
void   binary_io_type_b__configuration_get_response__init
                     (BinaryIoTypeB__ConfigurationGetResponse         *message);
size_t binary_io_type_b__configuration_get_response__get_packed_size
                     (const BinaryIoTypeB__ConfigurationGetResponse   *message);
size_t binary_io_type_b__configuration_get_response__pack
                     (const BinaryIoTypeB__ConfigurationGetResponse   *message,
                      uint8_t             *out);
size_t binary_io_type_b__configuration_get_response__pack_to_buffer
                     (const BinaryIoTypeB__ConfigurationGetResponse   *message,
                      ProtobufCBuffer     *buffer);
BinaryIoTypeB__ConfigurationGetResponse *
       binary_io_type_b__configuration_get_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   binary_io_type_b__configuration_get_response__free_unpacked
                     (BinaryIoTypeB__ConfigurationGetResponse *message,
                      ProtobufCAllocator *allocator);
/* BinaryIoTypeB__ConfigurationDescribe methods */
void   binary_io_type_b__configuration_describe__init
                     (BinaryIoTypeB__ConfigurationDescribe         *message);
size_t binary_io_type_b__configuration_describe__get_packed_size
                     (const BinaryIoTypeB__ConfigurationDescribe   *message);
size_t binary_io_type_b__configuration_describe__pack
                     (const BinaryIoTypeB__ConfigurationDescribe   *message,
                      uint8_t             *out);
size_t binary_io_type_b__configuration_describe__pack_to_buffer
                     (const BinaryIoTypeB__ConfigurationDescribe   *message,
                      ProtobufCBuffer     *buffer);
BinaryIoTypeB__ConfigurationDescribe *
       binary_io_type_b__configuration_describe__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   binary_io_type_b__configuration_describe__free_unpacked
                     (BinaryIoTypeB__ConfigurationDescribe *message,
                      ProtobufCAllocator *allocator);
/* BinaryIoTypeB__ChannelConfig methods */
void   binary_io_type_b__channel_config__init
                     (BinaryIoTypeB__ChannelConfig         *message);
size_t binary_io_type_b__channel_config__get_packed_size
                     (const BinaryIoTypeB__ChannelConfig   *message);
size_t binary_io_type_b__channel_config__pack
                     (const BinaryIoTypeB__ChannelConfig   *message,
                      uint8_t             *out);
size_t binary_io_type_b__channel_config__pack_to_buffer
                     (const BinaryIoTypeB__ChannelConfig   *message,
                      ProtobufCBuffer     *buffer);
BinaryIoTypeB__ChannelConfig *
       binary_io_type_b__channel_config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   binary_io_type_b__channel_config__free_unpacked
                     (BinaryIoTypeB__ChannelConfig *message,
                      ProtobufCAllocator *allocator);
/* BinaryIoTypeB__ConfigurationDescribeResponse methods */
void   binary_io_type_b__configuration_describe_response__init
                     (BinaryIoTypeB__ConfigurationDescribeResponse         *message);
size_t binary_io_type_b__configuration_describe_response__get_packed_size
                     (const BinaryIoTypeB__ConfigurationDescribeResponse   *message);
size_t binary_io_type_b__configuration_describe_response__pack
                     (const BinaryIoTypeB__ConfigurationDescribeResponse   *message,
                      uint8_t             *out);
size_t binary_io_type_b__configuration_describe_response__pack_to_buffer
                     (const BinaryIoTypeB__ConfigurationDescribeResponse   *message,
                      ProtobufCBuffer     *buffer);
BinaryIoTypeB__ConfigurationDescribeResponse *
       binary_io_type_b__configuration_describe_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   binary_io_type_b__configuration_describe_response__free_unpacked
                     (BinaryIoTypeB__ConfigurationDescribeResponse *message,
                      ProtobufCAllocator *allocator);
/* BinaryIoTypeB__ConfigurationResponse methods */
void   binary_io_type_b__configuration_response__init
                     (BinaryIoTypeB__ConfigurationResponse         *message);
size_t binary_io_type_b__configuration_response__get_packed_size
                     (const BinaryIoTypeB__ConfigurationResponse   *message);
size_t binary_io_type_b__configuration_response__pack
                     (const BinaryIoTypeB__ConfigurationResponse   *message,
                      uint8_t             *out);
size_t binary_io_type_b__configuration_response__pack_to_buffer
                     (const BinaryIoTypeB__ConfigurationResponse   *message,
                      ProtobufCBuffer     *buffer);
BinaryIoTypeB__ConfigurationResponse *
       binary_io_type_b__configuration_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   binary_io_type_b__configuration_response__free_unpacked
                     (BinaryIoTypeB__ConfigurationResponse *message,
                      ProtobufCAllocator *allocator);
/* BinaryIoTypeB__GetSingle methods */
void   binary_io_type_b__get_single__init
                     (BinaryIoTypeB__GetSingle         *message);
size_t binary_io_type_b__get_single__get_packed_size
                     (const BinaryIoTypeB__GetSingle   *message);
size_t binary_io_type_b__get_single__pack
                     (const BinaryIoTypeB__GetSingle   *message,
                      uint8_t             *out);
size_t binary_io_type_b__get_single__pack_to_buffer
                     (const BinaryIoTypeB__GetSingle   *message,
                      ProtobufCBuffer     *buffer);
BinaryIoTypeB__GetSingle *
       binary_io_type_b__get_single__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   binary_io_type_b__get_single__free_unpacked
                     (BinaryIoTypeB__GetSingle *message,
                      ProtobufCAllocator *allocator);
/* BinaryIoTypeB__GetAll methods */
void   binary_io_type_b__get_all__init
                     (BinaryIoTypeB__GetAll         *message);
size_t binary_io_type_b__get_all__get_packed_size
                     (const BinaryIoTypeB__GetAll   *message);
size_t binary_io_type_b__get_all__pack
                     (const BinaryIoTypeB__GetAll   *message,
                      uint8_t             *out);
size_t binary_io_type_b__get_all__pack_to_buffer
                     (const BinaryIoTypeB__GetAll   *message,
                      ProtobufCBuffer     *buffer);
BinaryIoTypeB__GetAll *
       binary_io_type_b__get_all__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   binary_io_type_b__get_all__free_unpacked
                     (BinaryIoTypeB__GetAll *message,
                      ProtobufCAllocator *allocator);
/* BinaryIoTypeB__FunctionControlGet methods */
void   binary_io_type_b__function_control_get__init
                     (BinaryIoTypeB__FunctionControlGet         *message);
size_t binary_io_type_b__function_control_get__get_packed_size
                     (const BinaryIoTypeB__FunctionControlGet   *message);
size_t binary_io_type_b__function_control_get__pack
                     (const BinaryIoTypeB__FunctionControlGet   *message,
                      uint8_t             *out);
size_t binary_io_type_b__function_control_get__pack_to_buffer
                     (const BinaryIoTypeB__FunctionControlGet   *message,
                      ProtobufCBuffer     *buffer);
BinaryIoTypeB__FunctionControlGet *
       binary_io_type_b__function_control_get__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   binary_io_type_b__function_control_get__free_unpacked
                     (BinaryIoTypeB__FunctionControlGet *message,
                      ProtobufCAllocator *allocator);
/* BinaryIoTypeB__SetSingle methods */
void   binary_io_type_b__set_single__init
                     (BinaryIoTypeB__SetSingle         *message);
size_t binary_io_type_b__set_single__get_packed_size
                     (const BinaryIoTypeB__SetSingle   *message);
size_t binary_io_type_b__set_single__pack
                     (const BinaryIoTypeB__SetSingle   *message,
                      uint8_t             *out);
size_t binary_io_type_b__set_single__pack_to_buffer
                     (const BinaryIoTypeB__SetSingle   *message,
                      ProtobufCBuffer     *buffer);
BinaryIoTypeB__SetSingle *
       binary_io_type_b__set_single__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   binary_io_type_b__set_single__free_unpacked
                     (BinaryIoTypeB__SetSingle *message,
                      ProtobufCAllocator *allocator);
/* BinaryIoTypeB__SetAll methods */
void   binary_io_type_b__set_all__init
                     (BinaryIoTypeB__SetAll         *message);
size_t binary_io_type_b__set_all__get_packed_size
                     (const BinaryIoTypeB__SetAll   *message);
size_t binary_io_type_b__set_all__pack
                     (const BinaryIoTypeB__SetAll   *message,
                      uint8_t             *out);
size_t binary_io_type_b__set_all__pack_to_buffer
                     (const BinaryIoTypeB__SetAll   *message,
                      ProtobufCBuffer     *buffer);
BinaryIoTypeB__SetAll *
       binary_io_type_b__set_all__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   binary_io_type_b__set_all__free_unpacked
                     (BinaryIoTypeB__SetAll *message,
                      ProtobufCAllocator *allocator);
/* BinaryIoTypeB__FunctionControlSet methods */
void   binary_io_type_b__function_control_set__init
                     (BinaryIoTypeB__FunctionControlSet         *message);
size_t binary_io_type_b__function_control_set__get_packed_size
                     (const BinaryIoTypeB__FunctionControlSet   *message);
size_t binary_io_type_b__function_control_set__pack
                     (const BinaryIoTypeB__FunctionControlSet   *message,
                      uint8_t             *out);
size_t binary_io_type_b__function_control_set__pack_to_buffer
                     (const BinaryIoTypeB__FunctionControlSet   *message,
                      ProtobufCBuffer     *buffer);
BinaryIoTypeB__FunctionControlSet *
       binary_io_type_b__function_control_set__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   binary_io_type_b__function_control_set__free_unpacked
                     (BinaryIoTypeB__FunctionControlSet *message,
                      ProtobufCAllocator *allocator);
/* BinaryIoTypeB__GetSingleResponse methods */
void   binary_io_type_b__get_single_response__init
                     (BinaryIoTypeB__GetSingleResponse         *message);
size_t binary_io_type_b__get_single_response__get_packed_size
                     (const BinaryIoTypeB__GetSingleResponse   *message);
size_t binary_io_type_b__get_single_response__pack
                     (const BinaryIoTypeB__GetSingleResponse   *message,
                      uint8_t             *out);
size_t binary_io_type_b__get_single_response__pack_to_buffer
                     (const BinaryIoTypeB__GetSingleResponse   *message,
                      ProtobufCBuffer     *buffer);
BinaryIoTypeB__GetSingleResponse *
       binary_io_type_b__get_single_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   binary_io_type_b__get_single_response__free_unpacked
                     (BinaryIoTypeB__GetSingleResponse *message,
                      ProtobufCAllocator *allocator);
/* BinaryIoTypeB__GetAllResponse methods */
void   binary_io_type_b__get_all_response__init
                     (BinaryIoTypeB__GetAllResponse         *message);
size_t binary_io_type_b__get_all_response__get_packed_size
                     (const BinaryIoTypeB__GetAllResponse   *message);
size_t binary_io_type_b__get_all_response__pack
                     (const BinaryIoTypeB__GetAllResponse   *message,
                      uint8_t             *out);
size_t binary_io_type_b__get_all_response__pack_to_buffer
                     (const BinaryIoTypeB__GetAllResponse   *message,
                      ProtobufCBuffer     *buffer);
BinaryIoTypeB__GetAllResponse *
       binary_io_type_b__get_all_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   binary_io_type_b__get_all_response__free_unpacked
                     (BinaryIoTypeB__GetAllResponse *message,
                      ProtobufCAllocator *allocator);
/* BinaryIoTypeB__FunctionControlGetResponse methods */
void   binary_io_type_b__function_control_get_response__init
                     (BinaryIoTypeB__FunctionControlGetResponse         *message);
size_t binary_io_type_b__function_control_get_response__get_packed_size
                     (const BinaryIoTypeB__FunctionControlGetResponse   *message);
size_t binary_io_type_b__function_control_get_response__pack
                     (const BinaryIoTypeB__FunctionControlGetResponse   *message,
                      uint8_t             *out);
size_t binary_io_type_b__function_control_get_response__pack_to_buffer
                     (const BinaryIoTypeB__FunctionControlGetResponse   *message,
                      ProtobufCBuffer     *buffer);
BinaryIoTypeB__FunctionControlGetResponse *
       binary_io_type_b__function_control_get_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   binary_io_type_b__function_control_get_response__free_unpacked
                     (BinaryIoTypeB__FunctionControlGetResponse *message,
                      ProtobufCAllocator *allocator);
/* BinaryIoTypeB__SetSingleResponse methods */
void   binary_io_type_b__set_single_response__init
                     (BinaryIoTypeB__SetSingleResponse         *message);
size_t binary_io_type_b__set_single_response__get_packed_size
                     (const BinaryIoTypeB__SetSingleResponse   *message);
size_t binary_io_type_b__set_single_response__pack
                     (const BinaryIoTypeB__SetSingleResponse   *message,
                      uint8_t             *out);
size_t binary_io_type_b__set_single_response__pack_to_buffer
                     (const BinaryIoTypeB__SetSingleResponse   *message,
                      ProtobufCBuffer     *buffer);
BinaryIoTypeB__SetSingleResponse *
       binary_io_type_b__set_single_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   binary_io_type_b__set_single_response__free_unpacked
                     (BinaryIoTypeB__SetSingleResponse *message,
                      ProtobufCAllocator *allocator);
/* BinaryIoTypeB__SetAllResponse methods */
void   binary_io_type_b__set_all_response__init
                     (BinaryIoTypeB__SetAllResponse         *message);
size_t binary_io_type_b__set_all_response__get_packed_size
                     (const BinaryIoTypeB__SetAllResponse   *message);
size_t binary_io_type_b__set_all_response__pack
                     (const BinaryIoTypeB__SetAllResponse   *message,
                      uint8_t             *out);
size_t binary_io_type_b__set_all_response__pack_to_buffer
                     (const BinaryIoTypeB__SetAllResponse   *message,
                      ProtobufCBuffer     *buffer);
BinaryIoTypeB__SetAllResponse *
       binary_io_type_b__set_all_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   binary_io_type_b__set_all_response__free_unpacked
                     (BinaryIoTypeB__SetAllResponse *message,
                      ProtobufCAllocator *allocator);
/* BinaryIoTypeB__FunctionControlSetResponse methods */
void   binary_io_type_b__function_control_set_response__init
                     (BinaryIoTypeB__FunctionControlSetResponse         *message);
size_t binary_io_type_b__function_control_set_response__get_packed_size
                     (const BinaryIoTypeB__FunctionControlSetResponse   *message);
size_t binary_io_type_b__function_control_set_response__pack
                     (const BinaryIoTypeB__FunctionControlSetResponse   *message,
                      uint8_t             *out);
size_t binary_io_type_b__function_control_set_response__pack_to_buffer
                     (const BinaryIoTypeB__FunctionControlSetResponse   *message,
                      ProtobufCBuffer     *buffer);
BinaryIoTypeB__FunctionControlSetResponse *
       binary_io_type_b__function_control_set_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   binary_io_type_b__function_control_set_response__free_unpacked
                     (BinaryIoTypeB__FunctionControlSetResponse *message,
                      ProtobufCAllocator *allocator);
/* BinaryIoTypeB__SubscribeChannel methods */
void   binary_io_type_b__subscribe_channel__init
                     (BinaryIoTypeB__SubscribeChannel         *message);
size_t binary_io_type_b__subscribe_channel__get_packed_size
                     (const BinaryIoTypeB__SubscribeChannel   *message);
size_t binary_io_type_b__subscribe_channel__pack
                     (const BinaryIoTypeB__SubscribeChannel   *message,
                      uint8_t             *out);
size_t binary_io_type_b__subscribe_channel__pack_to_buffer
                     (const BinaryIoTypeB__SubscribeChannel   *message,
                      ProtobufCBuffer     *buffer);
BinaryIoTypeB__SubscribeChannel *
       binary_io_type_b__subscribe_channel__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   binary_io_type_b__subscribe_channel__free_unpacked
                     (BinaryIoTypeB__SubscribeChannel *message,
                      ProtobufCAllocator *allocator);
/* BinaryIoTypeB__StreamControlStart methods */
void   binary_io_type_b__stream_control_start__init
                     (BinaryIoTypeB__StreamControlStart         *message);
size_t binary_io_type_b__stream_control_start__get_packed_size
                     (const BinaryIoTypeB__StreamControlStart   *message);
size_t binary_io_type_b__stream_control_start__pack
                     (const BinaryIoTypeB__StreamControlStart   *message,
                      uint8_t             *out);
size_t binary_io_type_b__stream_control_start__pack_to_buffer
                     (const BinaryIoTypeB__StreamControlStart   *message,
                      ProtobufCBuffer     *buffer);
BinaryIoTypeB__StreamControlStart *
       binary_io_type_b__stream_control_start__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   binary_io_type_b__stream_control_start__free_unpacked
                     (BinaryIoTypeB__StreamControlStart *message,
                      ProtobufCAllocator *allocator);
/* BinaryIoTypeB__Sample methods */
void   binary_io_type_b__sample__init
                     (BinaryIoTypeB__Sample         *message);
size_t binary_io_type_b__sample__get_packed_size
                     (const BinaryIoTypeB__Sample   *message);
size_t binary_io_type_b__sample__pack
                     (const BinaryIoTypeB__Sample   *message,
                      uint8_t             *out);
size_t binary_io_type_b__sample__pack_to_buffer
                     (const BinaryIoTypeB__Sample   *message,
                      ProtobufCBuffer     *buffer);
BinaryIoTypeB__Sample *
       binary_io_type_b__sample__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   binary_io_type_b__sample__free_unpacked
                     (BinaryIoTypeB__Sample *message,
                      ProtobufCAllocator *allocator);
/* BinaryIoTypeB__StreamData methods */
void   binary_io_type_b__stream_data__init
                     (BinaryIoTypeB__StreamData         *message);
size_t binary_io_type_b__stream_data__get_packed_size
                     (const BinaryIoTypeB__StreamData   *message);
size_t binary_io_type_b__stream_data__pack
                     (const BinaryIoTypeB__StreamData   *message,
                      uint8_t             *out);
size_t binary_io_type_b__stream_data__pack_to_buffer
                     (const BinaryIoTypeB__StreamData   *message,
                      ProtobufCBuffer     *buffer);
BinaryIoTypeB__StreamData *
       binary_io_type_b__stream_data__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   binary_io_type_b__stream_data__free_unpacked
                     (BinaryIoTypeB__StreamData *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*BinaryIoTypeB__ConfigurationSet_Closure)
                 (const BinaryIoTypeB__ConfigurationSet *message,
                  void *closure_data);
typedef void (*BinaryIoTypeB__ConfigurationSetResponse_Closure)
                 (const BinaryIoTypeB__ConfigurationSetResponse *message,
                  void *closure_data);
typedef void (*BinaryIoTypeB__ConfigurationGet_Closure)
                 (const BinaryIoTypeB__ConfigurationGet *message,
                  void *closure_data);
typedef void (*BinaryIoTypeB__ConfigurationGetResponse_Closure)
                 (const BinaryIoTypeB__ConfigurationGetResponse *message,
                  void *closure_data);
typedef void (*BinaryIoTypeB__ConfigurationDescribe_Closure)
                 (const BinaryIoTypeB__ConfigurationDescribe *message,
                  void *closure_data);
typedef void (*BinaryIoTypeB__ChannelConfig_Closure)
                 (const BinaryIoTypeB__ChannelConfig *message,
                  void *closure_data);
typedef void (*BinaryIoTypeB__ConfigurationDescribeResponse_Closure)
                 (const BinaryIoTypeB__ConfigurationDescribeResponse *message,
                  void *closure_data);
typedef void (*BinaryIoTypeB__ConfigurationResponse_Closure)
                 (const BinaryIoTypeB__ConfigurationResponse *message,
                  void *closure_data);
typedef void (*BinaryIoTypeB__GetSingle_Closure)
                 (const BinaryIoTypeB__GetSingle *message,
                  void *closure_data);
typedef void (*BinaryIoTypeB__GetAll_Closure)
                 (const BinaryIoTypeB__GetAll *message,
                  void *closure_data);
typedef void (*BinaryIoTypeB__FunctionControlGet_Closure)
                 (const BinaryIoTypeB__FunctionControlGet *message,
                  void *closure_data);
typedef void (*BinaryIoTypeB__SetSingle_Closure)
                 (const BinaryIoTypeB__SetSingle *message,
                  void *closure_data);
typedef void (*BinaryIoTypeB__SetAll_Closure)
                 (const BinaryIoTypeB__SetAll *message,
                  void *closure_data);
typedef void (*BinaryIoTypeB__FunctionControlSet_Closure)
                 (const BinaryIoTypeB__FunctionControlSet *message,
                  void *closure_data);
typedef void (*BinaryIoTypeB__GetSingleResponse_Closure)
                 (const BinaryIoTypeB__GetSingleResponse *message,
                  void *closure_data);
typedef void (*BinaryIoTypeB__GetAllResponse_Closure)
                 (const BinaryIoTypeB__GetAllResponse *message,
                  void *closure_data);
typedef void (*BinaryIoTypeB__FunctionControlGetResponse_Closure)
                 (const BinaryIoTypeB__FunctionControlGetResponse *message,
                  void *closure_data);
typedef void (*BinaryIoTypeB__SetSingleResponse_Closure)
                 (const BinaryIoTypeB__SetSingleResponse *message,
                  void *closure_data);
typedef void (*BinaryIoTypeB__SetAllResponse_Closure)
                 (const BinaryIoTypeB__SetAllResponse *message,
                  void *closure_data);
typedef void (*BinaryIoTypeB__FunctionControlSetResponse_Closure)
                 (const BinaryIoTypeB__FunctionControlSetResponse *message,
                  void *closure_data);
typedef void (*BinaryIoTypeB__SubscribeChannel_Closure)
                 (const BinaryIoTypeB__SubscribeChannel *message,
                  void *closure_data);
typedef void (*BinaryIoTypeB__StreamControlStart_Closure)
                 (const BinaryIoTypeB__StreamControlStart *message,
                  void *closure_data);
typedef void (*BinaryIoTypeB__Sample_Closure)
                 (const BinaryIoTypeB__Sample *message,
                  void *closure_data);
typedef void (*BinaryIoTypeB__StreamData_Closure)
                 (const BinaryIoTypeB__StreamData *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    binary_io_type_b__channel_direction__descriptor;
extern const ProtobufCEnumDescriptor    binary_io_type_b__subscription_type__descriptor;
extern const ProtobufCMessageDescriptor binary_io_type_b__configuration_set__descriptor;
extern const ProtobufCMessageDescriptor binary_io_type_b__configuration_set_response__descriptor;
extern const ProtobufCMessageDescriptor binary_io_type_b__configuration_get__descriptor;
extern const ProtobufCMessageDescriptor binary_io_type_b__configuration_get_response__descriptor;
extern const ProtobufCMessageDescriptor binary_io_type_b__configuration_describe__descriptor;
extern const ProtobufCMessageDescriptor binary_io_type_b__channel_config__descriptor;
extern const ProtobufCMessageDescriptor binary_io_type_b__configuration_describe_response__descriptor;
extern const ProtobufCMessageDescriptor binary_io_type_b__configuration_response__descriptor;
extern const ProtobufCMessageDescriptor binary_io_type_b__get_single__descriptor;
extern const ProtobufCMessageDescriptor binary_io_type_b__get_all__descriptor;
extern const ProtobufCMessageDescriptor binary_io_type_b__function_control_get__descriptor;
extern const ProtobufCMessageDescriptor binary_io_type_b__set_single__descriptor;
extern const ProtobufCMessageDescriptor binary_io_type_b__set_all__descriptor;
extern const ProtobufCMessageDescriptor binary_io_type_b__function_control_set__descriptor;
extern const ProtobufCMessageDescriptor binary_io_type_b__get_single_response__descriptor;
extern const ProtobufCMessageDescriptor binary_io_type_b__get_all_response__descriptor;
extern const ProtobufCMessageDescriptor binary_io_type_b__function_control_get_response__descriptor;
extern const ProtobufCMessageDescriptor binary_io_type_b__set_single_response__descriptor;
extern const ProtobufCMessageDescriptor binary_io_type_b__set_all_response__descriptor;
extern const ProtobufCMessageDescriptor binary_io_type_b__function_control_set_response__descriptor;
extern const ProtobufCMessageDescriptor binary_io_type_b__subscribe_channel__descriptor;
extern const ProtobufCMessageDescriptor binary_io_type_b__stream_control_start__descriptor;
extern const ProtobufCMessageDescriptor binary_io_type_b__sample__descriptor;
extern const ProtobufCMessageDescriptor binary_io_type_b__stream_data__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_binaryIoTypeB_2eproto__INCLUDED */
