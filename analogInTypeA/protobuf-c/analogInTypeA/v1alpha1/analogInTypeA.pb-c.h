/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: analogInTypeA.proto */

#ifndef PROTOBUF_C_analogInTypeA_2eproto__INCLUDED
#define PROTOBUF_C_analogInTypeA_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003003 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _AnalogInTypeA__ConfigurationSet AnalogInTypeA__ConfigurationSet;
typedef struct _AnalogInTypeA__ConfigurationSetResponse AnalogInTypeA__ConfigurationSetResponse;
typedef struct _AnalogInTypeA__ConfigurationGet AnalogInTypeA__ConfigurationGet;
typedef struct _AnalogInTypeA__ConfigurationGetResponse AnalogInTypeA__ConfigurationGetResponse;
typedef struct _AnalogInTypeA__ConfigurationDescribe AnalogInTypeA__ConfigurationDescribe;
typedef struct _AnalogInTypeA__ConfigurationDescribeResponse AnalogInTypeA__ConfigurationDescribeResponse;
typedef struct _AnalogInTypeA__FunctionControlGet AnalogInTypeA__FunctionControlGet;
typedef struct _AnalogInTypeA__FunctionControlSet AnalogInTypeA__FunctionControlSet;
typedef struct _AnalogInTypeA__FunctionControlGetResponse AnalogInTypeA__FunctionControlGetResponse;
typedef struct _AnalogInTypeA__FunctionControlSetResponse AnalogInTypeA__FunctionControlSetResponse;
typedef struct _AnalogInTypeA__StreamControlStart AnalogInTypeA__StreamControlStart;
typedef struct _AnalogInTypeA__Sample AnalogInTypeA__Sample;
typedef struct _AnalogInTypeA__StreamData AnalogInTypeA__StreamData;


/* --- enums --- */


/* --- messages --- */

/*
 * ConfigurationSet to pass to Functionblock.Configuration.functionSpecificConfigurationSet hook
 */
struct  _AnalogInTypeA__ConfigurationSet
{
  ProtobufCMessage base;
  /*
   * Specifies the frequency at which the analog input channel is sampled.
   */
  uint32_t sample_rate;
};
#define ANALOG_IN_TYPE_A__CONFIGURATION_SET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&analog_in_type_a__configuration_set__descriptor) \
    , 0 }


/*
 * ConfigurationSetResponse to pass to Functionblock.Configuration.functionSpecificConfigurationSetResponse hook
 */
struct  _AnalogInTypeA__ConfigurationSetResponse
{
  ProtobufCMessage base;
};
#define ANALOG_IN_TYPE_A__CONFIGURATION_SET_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&analog_in_type_a__configuration_set_response__descriptor) \
     }


/*
 * ConfigurationGet to pass to Functionblock.Configuration.functionSpecificConfigurationGet hook
 */
struct  _AnalogInTypeA__ConfigurationGet
{
  ProtobufCMessage base;
};
#define ANALOG_IN_TYPE_A__CONFIGURATION_GET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&analog_in_type_a__configuration_get__descriptor) \
     }


/*
 * ConfigurationGetResponse to pass to Functionblock.ConfigurationGetResponse.functionSpecificConfigurationGetResponse hook
 * Returns the current hardware configuration
 */
struct  _AnalogInTypeA__ConfigurationGetResponse
{
  ProtobufCMessage base;
  /*
   * Specifies the frequency at which the analog input channel is sampled.
   */
  uint32_t sample_rate;
};
#define ANALOG_IN_TYPE_A__CONFIGURATION_GET_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&analog_in_type_a__configuration_get_response__descriptor) \
    , 0 }


/*
 * ConfigurationDescribe to pass to Functionblock.Configuration.functionSpecificConfigurationDescribe hook
 */
struct  _AnalogInTypeA__ConfigurationDescribe
{
  ProtobufCMessage base;
};
#define ANALOG_IN_TYPE_A__CONFIGURATION_DESCRIBE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&analog_in_type_a__configuration_describe__descriptor) \
     }


struct  _AnalogInTypeA__ConfigurationDescribeResponse
{
  ProtobufCMessage base;
};
#define ANALOG_IN_TYPE_A__CONFIGURATION_DESCRIBE_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&analog_in_type_a__configuration_describe_response__descriptor) \
     }


/*
 * FunctionControlGet to pass to Functionblock.FunctionControl.functionSpecificFunctionControlGet hook
 */
struct  _AnalogInTypeA__FunctionControlGet
{
  ProtobufCMessage base;
};
#define ANALOG_IN_TYPE_A__FUNCTION_CONTROL_GET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&analog_in_type_a__function_control_get__descriptor) \
     }


/*
 * FunctionControlSet to pass to Functionblock.FunctionControl.functionSpecificFunctionControlSet hook
 */
struct  _AnalogInTypeA__FunctionControlSet
{
  ProtobufCMessage base;
};
#define ANALOG_IN_TYPE_A__FUNCTION_CONTROL_SET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&analog_in_type_a__function_control_set__descriptor) \
     }


/*
 * FunctionControlGetResponse to pass to Functionblock.FunctionControlResponse.functionSpecificControlGet hook
 */
struct  _AnalogInTypeA__FunctionControlGetResponse
{
  ProtobufCMessage base;
  float value;
};
#define ANALOG_IN_TYPE_A__FUNCTION_CONTROL_GET_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&analog_in_type_a__function_control_get_response__descriptor) \
    , 0 }


/*
 * FunctionControlSetResponse to pass to Functionblock.FunctionControlResponse.functionSpecificControlSet hook
 */
struct  _AnalogInTypeA__FunctionControlSetResponse
{
  ProtobufCMessage base;
};
#define ANALOG_IN_TYPE_A__FUNCTION_CONTROL_SET_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&analog_in_type_a__function_control_set_response__descriptor) \
     }


/*
 * ============= StreamControl ==================
 * StreamControlStart to pass to Functionblock.StreamControlStart.functionSpecificStreamControlStart hook
 */
struct  _AnalogInTypeA__StreamControlStart
{
  ProtobufCMessage base;
};
#define ANALOG_IN_TYPE_A__STREAM_CONTROL_START__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&analog_in_type_a__stream_control_start__descriptor) \
     }


struct  _AnalogInTypeA__Sample
{
  ProtobufCMessage base;
  /*
   * Timestamp for that specific channels sample. This is the time the sample was taken.
   * This timestamp is in microseconds since the start of the device and does not get synchronized with the clients time.
   */
  uint64_t timestamp;
  /*
   * Specifies the analog input channel value
   */
  float value;
};
#define ANALOG_IN_TYPE_A__SAMPLE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&analog_in_type_a__sample__descriptor) \
    , 0, 0 }


/*
 * StreamData to pass to Functionblock.StreamData.functionSpecificStreamData hook
 */
struct  _AnalogInTypeA__StreamData
{
  ProtobufCMessage base;
  size_t n_samples;
  AnalogInTypeA__Sample **samples;
};
#define ANALOG_IN_TYPE_A__STREAM_DATA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&analog_in_type_a__stream_data__descriptor) \
    , 0,NULL }


/* AnalogInTypeA__ConfigurationSet methods */
void   analog_in_type_a__configuration_set__init
                     (AnalogInTypeA__ConfigurationSet         *message);
size_t analog_in_type_a__configuration_set__get_packed_size
                     (const AnalogInTypeA__ConfigurationSet   *message);
size_t analog_in_type_a__configuration_set__pack
                     (const AnalogInTypeA__ConfigurationSet   *message,
                      uint8_t             *out);
size_t analog_in_type_a__configuration_set__pack_to_buffer
                     (const AnalogInTypeA__ConfigurationSet   *message,
                      ProtobufCBuffer     *buffer);
AnalogInTypeA__ConfigurationSet *
       analog_in_type_a__configuration_set__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   analog_in_type_a__configuration_set__free_unpacked
                     (AnalogInTypeA__ConfigurationSet *message,
                      ProtobufCAllocator *allocator);
/* AnalogInTypeA__ConfigurationSetResponse methods */
void   analog_in_type_a__configuration_set_response__init
                     (AnalogInTypeA__ConfigurationSetResponse         *message);
size_t analog_in_type_a__configuration_set_response__get_packed_size
                     (const AnalogInTypeA__ConfigurationSetResponse   *message);
size_t analog_in_type_a__configuration_set_response__pack
                     (const AnalogInTypeA__ConfigurationSetResponse   *message,
                      uint8_t             *out);
size_t analog_in_type_a__configuration_set_response__pack_to_buffer
                     (const AnalogInTypeA__ConfigurationSetResponse   *message,
                      ProtobufCBuffer     *buffer);
AnalogInTypeA__ConfigurationSetResponse *
       analog_in_type_a__configuration_set_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   analog_in_type_a__configuration_set_response__free_unpacked
                     (AnalogInTypeA__ConfigurationSetResponse *message,
                      ProtobufCAllocator *allocator);
/* AnalogInTypeA__ConfigurationGet methods */
void   analog_in_type_a__configuration_get__init
                     (AnalogInTypeA__ConfigurationGet         *message);
size_t analog_in_type_a__configuration_get__get_packed_size
                     (const AnalogInTypeA__ConfigurationGet   *message);
size_t analog_in_type_a__configuration_get__pack
                     (const AnalogInTypeA__ConfigurationGet   *message,
                      uint8_t             *out);
size_t analog_in_type_a__configuration_get__pack_to_buffer
                     (const AnalogInTypeA__ConfigurationGet   *message,
                      ProtobufCBuffer     *buffer);
AnalogInTypeA__ConfigurationGet *
       analog_in_type_a__configuration_get__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   analog_in_type_a__configuration_get__free_unpacked
                     (AnalogInTypeA__ConfigurationGet *message,
                      ProtobufCAllocator *allocator);
/* AnalogInTypeA__ConfigurationGetResponse methods */
void   analog_in_type_a__configuration_get_response__init
                     (AnalogInTypeA__ConfigurationGetResponse         *message);
size_t analog_in_type_a__configuration_get_response__get_packed_size
                     (const AnalogInTypeA__ConfigurationGetResponse   *message);
size_t analog_in_type_a__configuration_get_response__pack
                     (const AnalogInTypeA__ConfigurationGetResponse   *message,
                      uint8_t             *out);
size_t analog_in_type_a__configuration_get_response__pack_to_buffer
                     (const AnalogInTypeA__ConfigurationGetResponse   *message,
                      ProtobufCBuffer     *buffer);
AnalogInTypeA__ConfigurationGetResponse *
       analog_in_type_a__configuration_get_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   analog_in_type_a__configuration_get_response__free_unpacked
                     (AnalogInTypeA__ConfigurationGetResponse *message,
                      ProtobufCAllocator *allocator);
/* AnalogInTypeA__ConfigurationDescribe methods */
void   analog_in_type_a__configuration_describe__init
                     (AnalogInTypeA__ConfigurationDescribe         *message);
size_t analog_in_type_a__configuration_describe__get_packed_size
                     (const AnalogInTypeA__ConfigurationDescribe   *message);
size_t analog_in_type_a__configuration_describe__pack
                     (const AnalogInTypeA__ConfigurationDescribe   *message,
                      uint8_t             *out);
size_t analog_in_type_a__configuration_describe__pack_to_buffer
                     (const AnalogInTypeA__ConfigurationDescribe   *message,
                      ProtobufCBuffer     *buffer);
AnalogInTypeA__ConfigurationDescribe *
       analog_in_type_a__configuration_describe__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   analog_in_type_a__configuration_describe__free_unpacked
                     (AnalogInTypeA__ConfigurationDescribe *message,
                      ProtobufCAllocator *allocator);
/* AnalogInTypeA__ConfigurationDescribeResponse methods */
void   analog_in_type_a__configuration_describe_response__init
                     (AnalogInTypeA__ConfigurationDescribeResponse         *message);
size_t analog_in_type_a__configuration_describe_response__get_packed_size
                     (const AnalogInTypeA__ConfigurationDescribeResponse   *message);
size_t analog_in_type_a__configuration_describe_response__pack
                     (const AnalogInTypeA__ConfigurationDescribeResponse   *message,
                      uint8_t             *out);
size_t analog_in_type_a__configuration_describe_response__pack_to_buffer
                     (const AnalogInTypeA__ConfigurationDescribeResponse   *message,
                      ProtobufCBuffer     *buffer);
AnalogInTypeA__ConfigurationDescribeResponse *
       analog_in_type_a__configuration_describe_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   analog_in_type_a__configuration_describe_response__free_unpacked
                     (AnalogInTypeA__ConfigurationDescribeResponse *message,
                      ProtobufCAllocator *allocator);
/* AnalogInTypeA__FunctionControlGet methods */
void   analog_in_type_a__function_control_get__init
                     (AnalogInTypeA__FunctionControlGet         *message);
size_t analog_in_type_a__function_control_get__get_packed_size
                     (const AnalogInTypeA__FunctionControlGet   *message);
size_t analog_in_type_a__function_control_get__pack
                     (const AnalogInTypeA__FunctionControlGet   *message,
                      uint8_t             *out);
size_t analog_in_type_a__function_control_get__pack_to_buffer
                     (const AnalogInTypeA__FunctionControlGet   *message,
                      ProtobufCBuffer     *buffer);
AnalogInTypeA__FunctionControlGet *
       analog_in_type_a__function_control_get__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   analog_in_type_a__function_control_get__free_unpacked
                     (AnalogInTypeA__FunctionControlGet *message,
                      ProtobufCAllocator *allocator);
/* AnalogInTypeA__FunctionControlSet methods */
void   analog_in_type_a__function_control_set__init
                     (AnalogInTypeA__FunctionControlSet         *message);
size_t analog_in_type_a__function_control_set__get_packed_size
                     (const AnalogInTypeA__FunctionControlSet   *message);
size_t analog_in_type_a__function_control_set__pack
                     (const AnalogInTypeA__FunctionControlSet   *message,
                      uint8_t             *out);
size_t analog_in_type_a__function_control_set__pack_to_buffer
                     (const AnalogInTypeA__FunctionControlSet   *message,
                      ProtobufCBuffer     *buffer);
AnalogInTypeA__FunctionControlSet *
       analog_in_type_a__function_control_set__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   analog_in_type_a__function_control_set__free_unpacked
                     (AnalogInTypeA__FunctionControlSet *message,
                      ProtobufCAllocator *allocator);
/* AnalogInTypeA__FunctionControlGetResponse methods */
void   analog_in_type_a__function_control_get_response__init
                     (AnalogInTypeA__FunctionControlGetResponse         *message);
size_t analog_in_type_a__function_control_get_response__get_packed_size
                     (const AnalogInTypeA__FunctionControlGetResponse   *message);
size_t analog_in_type_a__function_control_get_response__pack
                     (const AnalogInTypeA__FunctionControlGetResponse   *message,
                      uint8_t             *out);
size_t analog_in_type_a__function_control_get_response__pack_to_buffer
                     (const AnalogInTypeA__FunctionControlGetResponse   *message,
                      ProtobufCBuffer     *buffer);
AnalogInTypeA__FunctionControlGetResponse *
       analog_in_type_a__function_control_get_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   analog_in_type_a__function_control_get_response__free_unpacked
                     (AnalogInTypeA__FunctionControlGetResponse *message,
                      ProtobufCAllocator *allocator);
/* AnalogInTypeA__FunctionControlSetResponse methods */
void   analog_in_type_a__function_control_set_response__init
                     (AnalogInTypeA__FunctionControlSetResponse         *message);
size_t analog_in_type_a__function_control_set_response__get_packed_size
                     (const AnalogInTypeA__FunctionControlSetResponse   *message);
size_t analog_in_type_a__function_control_set_response__pack
                     (const AnalogInTypeA__FunctionControlSetResponse   *message,
                      uint8_t             *out);
size_t analog_in_type_a__function_control_set_response__pack_to_buffer
                     (const AnalogInTypeA__FunctionControlSetResponse   *message,
                      ProtobufCBuffer     *buffer);
AnalogInTypeA__FunctionControlSetResponse *
       analog_in_type_a__function_control_set_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   analog_in_type_a__function_control_set_response__free_unpacked
                     (AnalogInTypeA__FunctionControlSetResponse *message,
                      ProtobufCAllocator *allocator);
/* AnalogInTypeA__StreamControlStart methods */
void   analog_in_type_a__stream_control_start__init
                     (AnalogInTypeA__StreamControlStart         *message);
size_t analog_in_type_a__stream_control_start__get_packed_size
                     (const AnalogInTypeA__StreamControlStart   *message);
size_t analog_in_type_a__stream_control_start__pack
                     (const AnalogInTypeA__StreamControlStart   *message,
                      uint8_t             *out);
size_t analog_in_type_a__stream_control_start__pack_to_buffer
                     (const AnalogInTypeA__StreamControlStart   *message,
                      ProtobufCBuffer     *buffer);
AnalogInTypeA__StreamControlStart *
       analog_in_type_a__stream_control_start__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   analog_in_type_a__stream_control_start__free_unpacked
                     (AnalogInTypeA__StreamControlStart *message,
                      ProtobufCAllocator *allocator);
/* AnalogInTypeA__Sample methods */
void   analog_in_type_a__sample__init
                     (AnalogInTypeA__Sample         *message);
size_t analog_in_type_a__sample__get_packed_size
                     (const AnalogInTypeA__Sample   *message);
size_t analog_in_type_a__sample__pack
                     (const AnalogInTypeA__Sample   *message,
                      uint8_t             *out);
size_t analog_in_type_a__sample__pack_to_buffer
                     (const AnalogInTypeA__Sample   *message,
                      ProtobufCBuffer     *buffer);
AnalogInTypeA__Sample *
       analog_in_type_a__sample__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   analog_in_type_a__sample__free_unpacked
                     (AnalogInTypeA__Sample *message,
                      ProtobufCAllocator *allocator);
/* AnalogInTypeA__StreamData methods */
void   analog_in_type_a__stream_data__init
                     (AnalogInTypeA__StreamData         *message);
size_t analog_in_type_a__stream_data__get_packed_size
                     (const AnalogInTypeA__StreamData   *message);
size_t analog_in_type_a__stream_data__pack
                     (const AnalogInTypeA__StreamData   *message,
                      uint8_t             *out);
size_t analog_in_type_a__stream_data__pack_to_buffer
                     (const AnalogInTypeA__StreamData   *message,
                      ProtobufCBuffer     *buffer);
AnalogInTypeA__StreamData *
       analog_in_type_a__stream_data__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   analog_in_type_a__stream_data__free_unpacked
                     (AnalogInTypeA__StreamData *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*AnalogInTypeA__ConfigurationSet_Closure)
                 (const AnalogInTypeA__ConfigurationSet *message,
                  void *closure_data);
typedef void (*AnalogInTypeA__ConfigurationSetResponse_Closure)
                 (const AnalogInTypeA__ConfigurationSetResponse *message,
                  void *closure_data);
typedef void (*AnalogInTypeA__ConfigurationGet_Closure)
                 (const AnalogInTypeA__ConfigurationGet *message,
                  void *closure_data);
typedef void (*AnalogInTypeA__ConfigurationGetResponse_Closure)
                 (const AnalogInTypeA__ConfigurationGetResponse *message,
                  void *closure_data);
typedef void (*AnalogInTypeA__ConfigurationDescribe_Closure)
                 (const AnalogInTypeA__ConfigurationDescribe *message,
                  void *closure_data);
typedef void (*AnalogInTypeA__ConfigurationDescribeResponse_Closure)
                 (const AnalogInTypeA__ConfigurationDescribeResponse *message,
                  void *closure_data);
typedef void (*AnalogInTypeA__FunctionControlGet_Closure)
                 (const AnalogInTypeA__FunctionControlGet *message,
                  void *closure_data);
typedef void (*AnalogInTypeA__FunctionControlSet_Closure)
                 (const AnalogInTypeA__FunctionControlSet *message,
                  void *closure_data);
typedef void (*AnalogInTypeA__FunctionControlGetResponse_Closure)
                 (const AnalogInTypeA__FunctionControlGetResponse *message,
                  void *closure_data);
typedef void (*AnalogInTypeA__FunctionControlSetResponse_Closure)
                 (const AnalogInTypeA__FunctionControlSetResponse *message,
                  void *closure_data);
typedef void (*AnalogInTypeA__StreamControlStart_Closure)
                 (const AnalogInTypeA__StreamControlStart *message,
                  void *closure_data);
typedef void (*AnalogInTypeA__Sample_Closure)
                 (const AnalogInTypeA__Sample *message,
                  void *closure_data);
typedef void (*AnalogInTypeA__StreamData_Closure)
                 (const AnalogInTypeA__StreamData *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor analog_in_type_a__configuration_set__descriptor;
extern const ProtobufCMessageDescriptor analog_in_type_a__configuration_set_response__descriptor;
extern const ProtobufCMessageDescriptor analog_in_type_a__configuration_get__descriptor;
extern const ProtobufCMessageDescriptor analog_in_type_a__configuration_get_response__descriptor;
extern const ProtobufCMessageDescriptor analog_in_type_a__configuration_describe__descriptor;
extern const ProtobufCMessageDescriptor analog_in_type_a__configuration_describe_response__descriptor;
extern const ProtobufCMessageDescriptor analog_in_type_a__function_control_get__descriptor;
extern const ProtobufCMessageDescriptor analog_in_type_a__function_control_set__descriptor;
extern const ProtobufCMessageDescriptor analog_in_type_a__function_control_get_response__descriptor;
extern const ProtobufCMessageDescriptor analog_in_type_a__function_control_set_response__descriptor;
extern const ProtobufCMessageDescriptor analog_in_type_a__stream_control_start__descriptor;
extern const ProtobufCMessageDescriptor analog_in_type_a__sample__descriptor;
extern const ProtobufCMessageDescriptor analog_in_type_a__stream_data__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_analogInTypeA_2eproto__INCLUDED */
