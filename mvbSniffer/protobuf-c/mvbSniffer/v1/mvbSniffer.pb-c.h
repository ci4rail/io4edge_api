/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: mvbSniffer.proto */

#ifndef PROTOBUF_C_mvbSniffer_2eproto__INCLUDED
#define PROTOBUF_C_mvbSniffer_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003003 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _MvbSniffer__ConfigurationSet MvbSniffer__ConfigurationSet;
typedef struct _MvbSniffer__ConfigurationSetResponse MvbSniffer__ConfigurationSetResponse;
typedef struct _MvbSniffer__ConfigurationGet MvbSniffer__ConfigurationGet;
typedef struct _MvbSniffer__ConfigurationGetResponse MvbSniffer__ConfigurationGetResponse;
typedef struct _MvbSniffer__ConfigurationDescribe MvbSniffer__ConfigurationDescribe;
typedef struct _MvbSniffer__ConfigurationDescribeResponse MvbSniffer__ConfigurationDescribeResponse;
typedef struct _MvbSniffer__FunctionControlGet MvbSniffer__FunctionControlGet;
typedef struct _MvbSniffer__FunctionControlSet MvbSniffer__FunctionControlSet;
typedef struct _MvbSniffer__FunctionControlGetResponse MvbSniffer__FunctionControlGetResponse;
typedef struct _MvbSniffer__FunctionControlSetResponse MvbSniffer__FunctionControlSetResponse;
typedef struct _MvbSniffer__StreamControlStart MvbSniffer__StreamControlStart;
typedef struct _MvbSniffer__Sample MvbSniffer__Sample;
typedef struct _MvbSniffer__StreamData MvbSniffer__StreamData;


/* --- enums --- */

typedef enum _MvbSniffer__FrameType {
  MVB_SNIFFER__FRAME_TYPE__UNKNOWN = 0,
  MVB_SNIFFER__FRAME_TYPE__MASTER = 1,
  MVB_SNIFFER__FRAME_TYPE__SLAVE = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(MVB_SNIFFER__FRAME_TYPE)
} MvbSniffer__FrameType;
typedef enum _MvbSniffer__Line {
  /*
   * received on A
   */
  MVB_SNIFFER__LINE__A = 0,
  /*
   * received on B
   */
  MVB_SNIFFER__LINE__B = 1
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(MVB_SNIFFER__LINE)
} MvbSniffer__Line;
typedef enum _MvbSniffer__SampleError {
  MVB_SNIFFER__SAMPLE_ERROR__NONE = 0,
  MVB_SNIFFER__SAMPLE_ERROR__STREAMBUF_OVERRUN = 1,
  MVB_SNIFFER__SAMPLE_ERROR__DMA_ERROR = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(MVB_SNIFFER__SAMPLE_ERROR)
} MvbSniffer__SampleError;

/* --- messages --- */

/*
 * ConfigurationSet to pass to
 * Functionblock.Configuration.functionSpecificConfigurationSet hook
 */
struct  _MvbSniffer__ConfigurationSet
{
  ProtobufCMessage base;
};
#define MVB_SNIFFER__CONFIGURATION_SET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&mvb_sniffer__configuration_set__descriptor) \
     }


/*
 * ConfigurationSetResponse to pass to
 * Functionblock.Configuration.functionSpecificConfigurationSetResponse hook
 */
struct  _MvbSniffer__ConfigurationSetResponse
{
  ProtobufCMessage base;
};
#define MVB_SNIFFER__CONFIGURATION_SET_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&mvb_sniffer__configuration_set_response__descriptor) \
     }


/*
 * ConfigurationGet to pass to
 * Functionblock.Configuration.functionSpecificConfigurationGet hook
 */
struct  _MvbSniffer__ConfigurationGet
{
  ProtobufCMessage base;
};
#define MVB_SNIFFER__CONFIGURATION_GET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&mvb_sniffer__configuration_get__descriptor) \
     }


/*
 * ConfigurationGetResponse to pass to
 * Functionblock.ConfigurationGetResponse.functionSpecificConfigurationGetResponse
 * hook Returns the current hardware configuration
 */
struct  _MvbSniffer__ConfigurationGetResponse
{
  ProtobufCMessage base;
};
#define MVB_SNIFFER__CONFIGURATION_GET_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&mvb_sniffer__configuration_get_response__descriptor) \
     }


/*
 * ConfigurationDescribe to pass to
 * Functionblock.Configuration.functionSpecificConfigurationDescribe hook
 */
struct  _MvbSniffer__ConfigurationDescribe
{
  ProtobufCMessage base;
};
#define MVB_SNIFFER__CONFIGURATION_DESCRIBE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&mvb_sniffer__configuration_describe__descriptor) \
     }


struct  _MvbSniffer__ConfigurationDescribeResponse
{
  ProtobufCMessage base;
};
#define MVB_SNIFFER__CONFIGURATION_DESCRIBE_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&mvb_sniffer__configuration_describe_response__descriptor) \
     }


/*
 * FunctionControlGet to pass to
 * Functionblock.FunctionControl.functionSpecificFunctionControlGet hook
 */
struct  _MvbSniffer__FunctionControlGet
{
  ProtobufCMessage base;
};
#define MVB_SNIFFER__FUNCTION_CONTROL_GET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&mvb_sniffer__function_control_get__descriptor) \
     }


/*
 * FunctionControlSet to pass to
 * Functionblock.FunctionControl.functionSpecificFunctionControlSet hook
 */
struct  _MvbSniffer__FunctionControlSet
{
  ProtobufCMessage base;
  /*
   * pattern to send to the stimulus generator within the MVB sniffer for self-test
   */
  char *generator_pattern;
};
#define MVB_SNIFFER__FUNCTION_CONTROL_SET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&mvb_sniffer__function_control_set__descriptor) \
    , (char *)protobuf_c_empty_string }


/*
 * FunctionControlGetResponse to pass to
 * Functionblock.FunctionControlResponse.functionSpecificControlGet hook
 */
struct  _MvbSniffer__FunctionControlGetResponse
{
  ProtobufCMessage base;
};
#define MVB_SNIFFER__FUNCTION_CONTROL_GET_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&mvb_sniffer__function_control_get_response__descriptor) \
     }


/*
 * FunctionControlSetResponse to pass to
 * Functionblock.FunctionControlResponse.functionSpecificControlSet hook
 */
struct  _MvbSniffer__FunctionControlSetResponse
{
  ProtobufCMessage base;
};
#define MVB_SNIFFER__FUNCTION_CONTROL_SET_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&mvb_sniffer__function_control_set_response__descriptor) \
     }


/*
 * ============= StreamControl ==================
 * StreamControlStart to pass to
 * Functionblock.StreamControlStart.functionSpecificStreamControlStart hook
 */
struct  _MvbSniffer__StreamControlStart
{
  ProtobufCMessage base;
};
#define MVB_SNIFFER__STREAM_CONTROL_START__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&mvb_sniffer__stream_control_start__descriptor) \
     }


/*
 * A sample represents an MVB frame
 */
struct  _MvbSniffer__Sample
{
  ProtobufCMessage base;
  /*
   * Timestamp when this frame has started.
   * In microseconds since the start of the device.
   * Not synchronized with the clients time.
   */
  uint64_t timestamp;
  /*
   * time difference from the end of the last message to the begin of
   * this message (in us).
   * A value of <5 is invalid. A value of 255 means 255 us or more.
   */
  int32_t delta_time;
  /*
   * master or slave frame
   */
  MvbSniffer__FrameType frame_type;
  /*
   * line on which this MVB frame has been received (redundant frames are
   * dropped)
   */
  MvbSniffer__Line line;
  /*
   * this frame has been received on both lines
   */
  protobuf_c_boolean redundant;
  /*
   * Bitmask with errors
   */
  MvbSniffer__SampleError error;
  /*
   * MVB frame, checksums are removed
   */
  ProtobufCBinaryData payload;
};
#define MVB_SNIFFER__SAMPLE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&mvb_sniffer__sample__descriptor) \
    , 0, 0, MVB_SNIFFER__FRAME_TYPE__UNKNOWN, MVB_SNIFFER__LINE__A, 0, MVB_SNIFFER__SAMPLE_ERROR__NONE, {0,NULL} }


/*
 * StreamData to pass to Functionblock.StreamData.functionSpecificStreamData
 * hook
 */
struct  _MvbSniffer__StreamData
{
  ProtobufCMessage base;
  size_t n_samples;
  MvbSniffer__Sample **samples;
};
#define MVB_SNIFFER__STREAM_DATA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&mvb_sniffer__stream_data__descriptor) \
    , 0,NULL }


/* MvbSniffer__ConfigurationSet methods */
void   mvb_sniffer__configuration_set__init
                     (MvbSniffer__ConfigurationSet         *message);
size_t mvb_sniffer__configuration_set__get_packed_size
                     (const MvbSniffer__ConfigurationSet   *message);
size_t mvb_sniffer__configuration_set__pack
                     (const MvbSniffer__ConfigurationSet   *message,
                      uint8_t             *out);
size_t mvb_sniffer__configuration_set__pack_to_buffer
                     (const MvbSniffer__ConfigurationSet   *message,
                      ProtobufCBuffer     *buffer);
MvbSniffer__ConfigurationSet *
       mvb_sniffer__configuration_set__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   mvb_sniffer__configuration_set__free_unpacked
                     (MvbSniffer__ConfigurationSet *message,
                      ProtobufCAllocator *allocator);
/* MvbSniffer__ConfigurationSetResponse methods */
void   mvb_sniffer__configuration_set_response__init
                     (MvbSniffer__ConfigurationSetResponse         *message);
size_t mvb_sniffer__configuration_set_response__get_packed_size
                     (const MvbSniffer__ConfigurationSetResponse   *message);
size_t mvb_sniffer__configuration_set_response__pack
                     (const MvbSniffer__ConfigurationSetResponse   *message,
                      uint8_t             *out);
size_t mvb_sniffer__configuration_set_response__pack_to_buffer
                     (const MvbSniffer__ConfigurationSetResponse   *message,
                      ProtobufCBuffer     *buffer);
MvbSniffer__ConfigurationSetResponse *
       mvb_sniffer__configuration_set_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   mvb_sniffer__configuration_set_response__free_unpacked
                     (MvbSniffer__ConfigurationSetResponse *message,
                      ProtobufCAllocator *allocator);
/* MvbSniffer__ConfigurationGet methods */
void   mvb_sniffer__configuration_get__init
                     (MvbSniffer__ConfigurationGet         *message);
size_t mvb_sniffer__configuration_get__get_packed_size
                     (const MvbSniffer__ConfigurationGet   *message);
size_t mvb_sniffer__configuration_get__pack
                     (const MvbSniffer__ConfigurationGet   *message,
                      uint8_t             *out);
size_t mvb_sniffer__configuration_get__pack_to_buffer
                     (const MvbSniffer__ConfigurationGet   *message,
                      ProtobufCBuffer     *buffer);
MvbSniffer__ConfigurationGet *
       mvb_sniffer__configuration_get__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   mvb_sniffer__configuration_get__free_unpacked
                     (MvbSniffer__ConfigurationGet *message,
                      ProtobufCAllocator *allocator);
/* MvbSniffer__ConfigurationGetResponse methods */
void   mvb_sniffer__configuration_get_response__init
                     (MvbSniffer__ConfigurationGetResponse         *message);
size_t mvb_sniffer__configuration_get_response__get_packed_size
                     (const MvbSniffer__ConfigurationGetResponse   *message);
size_t mvb_sniffer__configuration_get_response__pack
                     (const MvbSniffer__ConfigurationGetResponse   *message,
                      uint8_t             *out);
size_t mvb_sniffer__configuration_get_response__pack_to_buffer
                     (const MvbSniffer__ConfigurationGetResponse   *message,
                      ProtobufCBuffer     *buffer);
MvbSniffer__ConfigurationGetResponse *
       mvb_sniffer__configuration_get_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   mvb_sniffer__configuration_get_response__free_unpacked
                     (MvbSniffer__ConfigurationGetResponse *message,
                      ProtobufCAllocator *allocator);
/* MvbSniffer__ConfigurationDescribe methods */
void   mvb_sniffer__configuration_describe__init
                     (MvbSniffer__ConfigurationDescribe         *message);
size_t mvb_sniffer__configuration_describe__get_packed_size
                     (const MvbSniffer__ConfigurationDescribe   *message);
size_t mvb_sniffer__configuration_describe__pack
                     (const MvbSniffer__ConfigurationDescribe   *message,
                      uint8_t             *out);
size_t mvb_sniffer__configuration_describe__pack_to_buffer
                     (const MvbSniffer__ConfigurationDescribe   *message,
                      ProtobufCBuffer     *buffer);
MvbSniffer__ConfigurationDescribe *
       mvb_sniffer__configuration_describe__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   mvb_sniffer__configuration_describe__free_unpacked
                     (MvbSniffer__ConfigurationDescribe *message,
                      ProtobufCAllocator *allocator);
/* MvbSniffer__ConfigurationDescribeResponse methods */
void   mvb_sniffer__configuration_describe_response__init
                     (MvbSniffer__ConfigurationDescribeResponse         *message);
size_t mvb_sniffer__configuration_describe_response__get_packed_size
                     (const MvbSniffer__ConfigurationDescribeResponse   *message);
size_t mvb_sniffer__configuration_describe_response__pack
                     (const MvbSniffer__ConfigurationDescribeResponse   *message,
                      uint8_t             *out);
size_t mvb_sniffer__configuration_describe_response__pack_to_buffer
                     (const MvbSniffer__ConfigurationDescribeResponse   *message,
                      ProtobufCBuffer     *buffer);
MvbSniffer__ConfigurationDescribeResponse *
       mvb_sniffer__configuration_describe_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   mvb_sniffer__configuration_describe_response__free_unpacked
                     (MvbSniffer__ConfigurationDescribeResponse *message,
                      ProtobufCAllocator *allocator);
/* MvbSniffer__FunctionControlGet methods */
void   mvb_sniffer__function_control_get__init
                     (MvbSniffer__FunctionControlGet         *message);
size_t mvb_sniffer__function_control_get__get_packed_size
                     (const MvbSniffer__FunctionControlGet   *message);
size_t mvb_sniffer__function_control_get__pack
                     (const MvbSniffer__FunctionControlGet   *message,
                      uint8_t             *out);
size_t mvb_sniffer__function_control_get__pack_to_buffer
                     (const MvbSniffer__FunctionControlGet   *message,
                      ProtobufCBuffer     *buffer);
MvbSniffer__FunctionControlGet *
       mvb_sniffer__function_control_get__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   mvb_sniffer__function_control_get__free_unpacked
                     (MvbSniffer__FunctionControlGet *message,
                      ProtobufCAllocator *allocator);
/* MvbSniffer__FunctionControlSet methods */
void   mvb_sniffer__function_control_set__init
                     (MvbSniffer__FunctionControlSet         *message);
size_t mvb_sniffer__function_control_set__get_packed_size
                     (const MvbSniffer__FunctionControlSet   *message);
size_t mvb_sniffer__function_control_set__pack
                     (const MvbSniffer__FunctionControlSet   *message,
                      uint8_t             *out);
size_t mvb_sniffer__function_control_set__pack_to_buffer
                     (const MvbSniffer__FunctionControlSet   *message,
                      ProtobufCBuffer     *buffer);
MvbSniffer__FunctionControlSet *
       mvb_sniffer__function_control_set__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   mvb_sniffer__function_control_set__free_unpacked
                     (MvbSniffer__FunctionControlSet *message,
                      ProtobufCAllocator *allocator);
/* MvbSniffer__FunctionControlGetResponse methods */
void   mvb_sniffer__function_control_get_response__init
                     (MvbSniffer__FunctionControlGetResponse         *message);
size_t mvb_sniffer__function_control_get_response__get_packed_size
                     (const MvbSniffer__FunctionControlGetResponse   *message);
size_t mvb_sniffer__function_control_get_response__pack
                     (const MvbSniffer__FunctionControlGetResponse   *message,
                      uint8_t             *out);
size_t mvb_sniffer__function_control_get_response__pack_to_buffer
                     (const MvbSniffer__FunctionControlGetResponse   *message,
                      ProtobufCBuffer     *buffer);
MvbSniffer__FunctionControlGetResponse *
       mvb_sniffer__function_control_get_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   mvb_sniffer__function_control_get_response__free_unpacked
                     (MvbSniffer__FunctionControlGetResponse *message,
                      ProtobufCAllocator *allocator);
/* MvbSniffer__FunctionControlSetResponse methods */
void   mvb_sniffer__function_control_set_response__init
                     (MvbSniffer__FunctionControlSetResponse         *message);
size_t mvb_sniffer__function_control_set_response__get_packed_size
                     (const MvbSniffer__FunctionControlSetResponse   *message);
size_t mvb_sniffer__function_control_set_response__pack
                     (const MvbSniffer__FunctionControlSetResponse   *message,
                      uint8_t             *out);
size_t mvb_sniffer__function_control_set_response__pack_to_buffer
                     (const MvbSniffer__FunctionControlSetResponse   *message,
                      ProtobufCBuffer     *buffer);
MvbSniffer__FunctionControlSetResponse *
       mvb_sniffer__function_control_set_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   mvb_sniffer__function_control_set_response__free_unpacked
                     (MvbSniffer__FunctionControlSetResponse *message,
                      ProtobufCAllocator *allocator);
/* MvbSniffer__StreamControlStart methods */
void   mvb_sniffer__stream_control_start__init
                     (MvbSniffer__StreamControlStart         *message);
size_t mvb_sniffer__stream_control_start__get_packed_size
                     (const MvbSniffer__StreamControlStart   *message);
size_t mvb_sniffer__stream_control_start__pack
                     (const MvbSniffer__StreamControlStart   *message,
                      uint8_t             *out);
size_t mvb_sniffer__stream_control_start__pack_to_buffer
                     (const MvbSniffer__StreamControlStart   *message,
                      ProtobufCBuffer     *buffer);
MvbSniffer__StreamControlStart *
       mvb_sniffer__stream_control_start__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   mvb_sniffer__stream_control_start__free_unpacked
                     (MvbSniffer__StreamControlStart *message,
                      ProtobufCAllocator *allocator);
/* MvbSniffer__Sample methods */
void   mvb_sniffer__sample__init
                     (MvbSniffer__Sample         *message);
size_t mvb_sniffer__sample__get_packed_size
                     (const MvbSniffer__Sample   *message);
size_t mvb_sniffer__sample__pack
                     (const MvbSniffer__Sample   *message,
                      uint8_t             *out);
size_t mvb_sniffer__sample__pack_to_buffer
                     (const MvbSniffer__Sample   *message,
                      ProtobufCBuffer     *buffer);
MvbSniffer__Sample *
       mvb_sniffer__sample__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   mvb_sniffer__sample__free_unpacked
                     (MvbSniffer__Sample *message,
                      ProtobufCAllocator *allocator);
/* MvbSniffer__StreamData methods */
void   mvb_sniffer__stream_data__init
                     (MvbSniffer__StreamData         *message);
size_t mvb_sniffer__stream_data__get_packed_size
                     (const MvbSniffer__StreamData   *message);
size_t mvb_sniffer__stream_data__pack
                     (const MvbSniffer__StreamData   *message,
                      uint8_t             *out);
size_t mvb_sniffer__stream_data__pack_to_buffer
                     (const MvbSniffer__StreamData   *message,
                      ProtobufCBuffer     *buffer);
MvbSniffer__StreamData *
       mvb_sniffer__stream_data__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   mvb_sniffer__stream_data__free_unpacked
                     (MvbSniffer__StreamData *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*MvbSniffer__ConfigurationSet_Closure)
                 (const MvbSniffer__ConfigurationSet *message,
                  void *closure_data);
typedef void (*MvbSniffer__ConfigurationSetResponse_Closure)
                 (const MvbSniffer__ConfigurationSetResponse *message,
                  void *closure_data);
typedef void (*MvbSniffer__ConfigurationGet_Closure)
                 (const MvbSniffer__ConfigurationGet *message,
                  void *closure_data);
typedef void (*MvbSniffer__ConfigurationGetResponse_Closure)
                 (const MvbSniffer__ConfigurationGetResponse *message,
                  void *closure_data);
typedef void (*MvbSniffer__ConfigurationDescribe_Closure)
                 (const MvbSniffer__ConfigurationDescribe *message,
                  void *closure_data);
typedef void (*MvbSniffer__ConfigurationDescribeResponse_Closure)
                 (const MvbSniffer__ConfigurationDescribeResponse *message,
                  void *closure_data);
typedef void (*MvbSniffer__FunctionControlGet_Closure)
                 (const MvbSniffer__FunctionControlGet *message,
                  void *closure_data);
typedef void (*MvbSniffer__FunctionControlSet_Closure)
                 (const MvbSniffer__FunctionControlSet *message,
                  void *closure_data);
typedef void (*MvbSniffer__FunctionControlGetResponse_Closure)
                 (const MvbSniffer__FunctionControlGetResponse *message,
                  void *closure_data);
typedef void (*MvbSniffer__FunctionControlSetResponse_Closure)
                 (const MvbSniffer__FunctionControlSetResponse *message,
                  void *closure_data);
typedef void (*MvbSniffer__StreamControlStart_Closure)
                 (const MvbSniffer__StreamControlStart *message,
                  void *closure_data);
typedef void (*MvbSniffer__Sample_Closure)
                 (const MvbSniffer__Sample *message,
                  void *closure_data);
typedef void (*MvbSniffer__StreamData_Closure)
                 (const MvbSniffer__StreamData *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    mvb_sniffer__frame_type__descriptor;
extern const ProtobufCEnumDescriptor    mvb_sniffer__line__descriptor;
extern const ProtobufCEnumDescriptor    mvb_sniffer__sample_error__descriptor;
extern const ProtobufCMessageDescriptor mvb_sniffer__configuration_set__descriptor;
extern const ProtobufCMessageDescriptor mvb_sniffer__configuration_set_response__descriptor;
extern const ProtobufCMessageDescriptor mvb_sniffer__configuration_get__descriptor;
extern const ProtobufCMessageDescriptor mvb_sniffer__configuration_get_response__descriptor;
extern const ProtobufCMessageDescriptor mvb_sniffer__configuration_describe__descriptor;
extern const ProtobufCMessageDescriptor mvb_sniffer__configuration_describe_response__descriptor;
extern const ProtobufCMessageDescriptor mvb_sniffer__function_control_get__descriptor;
extern const ProtobufCMessageDescriptor mvb_sniffer__function_control_set__descriptor;
extern const ProtobufCMessageDescriptor mvb_sniffer__function_control_get_response__descriptor;
extern const ProtobufCMessageDescriptor mvb_sniffer__function_control_set_response__descriptor;
extern const ProtobufCMessageDescriptor mvb_sniffer__stream_control_start__descriptor;
extern const ProtobufCMessageDescriptor mvb_sniffer__sample__descriptor;
extern const ProtobufCMessageDescriptor mvb_sniffer__stream_data__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_mvbSniffer_2eproto__INCLUDED */
