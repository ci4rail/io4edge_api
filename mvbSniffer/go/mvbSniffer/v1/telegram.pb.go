// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.6.1
// source: mvbSniffer/v1/telegram.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Telegram_State int32

const (
	Telegram_kSuccessful                Telegram_State = 0
	Telegram_kTimedOut                  Telegram_State = 1
	Telegram_kUnknown                   Telegram_State = 2
	Telegram_kResponseForUnknownRequest Telegram_State = 3
	Telegram_kErroneous                 Telegram_State = 4
)

// Enum value maps for Telegram_State.
var (
	Telegram_State_name = map[int32]string{
		0: "kSuccessful",
		1: "kTimedOut",
		2: "kUnknown",
		3: "kResponseForUnknownRequest",
		4: "kErroneous",
	}
	Telegram_State_value = map[string]int32{
		"kSuccessful":                0,
		"kTimedOut":                  1,
		"kUnknown":                   2,
		"kResponseForUnknownRequest": 3,
		"kErroneous":                 4,
	}
)

func (x Telegram_State) Enum() *Telegram_State {
	p := new(Telegram_State)
	*p = x
	return p
}

func (x Telegram_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Telegram_State) Descriptor() protoreflect.EnumDescriptor {
	return file_mvbSniffer_v1_telegram_proto_enumTypes[0].Descriptor()
}

func (Telegram_State) Type() protoreflect.EnumType {
	return &file_mvbSniffer_v1_telegram_proto_enumTypes[0]
}

func (x Telegram_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Telegram_State.Descriptor instead.
func (Telegram_State) EnumDescriptor() ([]byte, []int) {
	return file_mvbSniffer_v1_telegram_proto_rawDescGZIP(), []int{0, 0}
}

type Telegram_Type int32

const (
	Telegram_kProcessData16Bit   Telegram_Type = 0
	Telegram_kProcessData32Bit   Telegram_Type = 1
	Telegram_kProcessData64Bit   Telegram_Type = 2
	Telegram_kProcessData128Bit  Telegram_Type = 3
	Telegram_kProcessData256Bit  Telegram_Type = 4
	Telegram_kReserved_1         Telegram_Type = 5
	Telegram_kReserved_2         Telegram_Type = 6
	Telegram_kReserved_3         Telegram_Type = 7
	Telegram_kMastershipTransfer Telegram_Type = 8
	Telegram_kGeneralEvent       Telegram_Type = 9
	Telegram_kReserved_4         Telegram_Type = 10
	Telegram_kReserved_5         Telegram_Type = 11
	Telegram_kMessageData        Telegram_Type = 12
	Telegram_kGroupEvent         Telegram_Type = 13
	Telegram_kSingleEvent        Telegram_Type = 14
	Telegram_kDeviceStatus       Telegram_Type = 15
)

// Enum value maps for Telegram_Type.
var (
	Telegram_Type_name = map[int32]string{
		0:  "kProcessData16Bit",
		1:  "kProcessData32Bit",
		2:  "kProcessData64Bit",
		3:  "kProcessData128Bit",
		4:  "kProcessData256Bit",
		5:  "kReserved_1",
		6:  "kReserved_2",
		7:  "kReserved_3",
		8:  "kMastershipTransfer",
		9:  "kGeneralEvent",
		10: "kReserved_4",
		11: "kReserved_5",
		12: "kMessageData",
		13: "kGroupEvent",
		14: "kSingleEvent",
		15: "kDeviceStatus",
	}
	Telegram_Type_value = map[string]int32{
		"kProcessData16Bit":   0,
		"kProcessData32Bit":   1,
		"kProcessData64Bit":   2,
		"kProcessData128Bit":  3,
		"kProcessData256Bit":  4,
		"kReserved_1":         5,
		"kReserved_2":         6,
		"kReserved_3":         7,
		"kMastershipTransfer": 8,
		"kGeneralEvent":       9,
		"kReserved_4":         10,
		"kReserved_5":         11,
		"kMessageData":        12,
		"kGroupEvent":         13,
		"kSingleEvent":        14,
		"kDeviceStatus":       15,
	}
)

func (x Telegram_Type) Enum() *Telegram_Type {
	p := new(Telegram_Type)
	*p = x
	return p
}

func (x Telegram_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Telegram_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_mvbSniffer_v1_telegram_proto_enumTypes[1].Descriptor()
}

func (Telegram_Type) Type() protoreflect.EnumType {
	return &file_mvbSniffer_v1_telegram_proto_enumTypes[1]
}

func (x Telegram_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Telegram_Type.Descriptor instead.
func (Telegram_Type) EnumDescriptor() ([]byte, []int) {
	return file_mvbSniffer_v1_telegram_proto_rawDescGZIP(), []int{0, 1}
}

type TelegramCollection_Line int32

const (
	TelegramCollection_kA TelegramCollection_Line = 0
	TelegramCollection_kB TelegramCollection_Line = 1
)

// Enum value maps for TelegramCollection_Line.
var (
	TelegramCollection_Line_name = map[int32]string{
		0: "kA",
		1: "kB",
	}
	TelegramCollection_Line_value = map[string]int32{
		"kA": 0,
		"kB": 1,
	}
)

func (x TelegramCollection_Line) Enum() *TelegramCollection_Line {
	p := new(TelegramCollection_Line)
	*p = x
	return p
}

func (x TelegramCollection_Line) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TelegramCollection_Line) Descriptor() protoreflect.EnumDescriptor {
	return file_mvbSniffer_v1_telegram_proto_enumTypes[2].Descriptor()
}

func (TelegramCollection_Line) Type() protoreflect.EnumType {
	return &file_mvbSniffer_v1_telegram_proto_enumTypes[2]
}

func (x TelegramCollection_Line) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TelegramCollection_Line.Descriptor instead.
func (TelegramCollection_Line) EnumDescriptor() ([]byte, []int) {
	return file_mvbSniffer_v1_telegram_proto_rawDescGZIP(), []int{1, 0}
}

type Telegram struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp *Timestamp     `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	State     Telegram_State `protobuf:"varint,2,opt,name=state,proto3,enum=mvbSniffer.Telegram_State" json:"state,omitempty"`
	Type      Telegram_Type  `protobuf:"varint,3,opt,name=type,proto3,enum=mvbSniffer.Telegram_Type" json:"type,omitempty"`
	Address   int32          `protobuf:"varint,4,opt,name=address,proto3" json:"address,omitempty"`
	Data      []byte         `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	FrameNr   uint64         `protobuf:"varint,6,opt,name=frame_nr,json=frameNr,proto3" json:"frame_nr,omitempty"`
}

func (x *Telegram) Reset() {
	*x = Telegram{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mvbSniffer_v1_telegram_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Telegram) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Telegram) ProtoMessage() {}

func (x *Telegram) ProtoReflect() protoreflect.Message {
	mi := &file_mvbSniffer_v1_telegram_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Telegram.ProtoReflect.Descriptor instead.
func (*Telegram) Descriptor() ([]byte, []int) {
	return file_mvbSniffer_v1_telegram_proto_rawDescGZIP(), []int{0}
}

func (x *Telegram) GetTimestamp() *Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *Telegram) GetState() Telegram_State {
	if x != nil {
		return x.State
	}
	return Telegram_kSuccessful
}

func (x *Telegram) GetType() Telegram_Type {
	if x != nil {
		return x.Type
	}
	return Telegram_kProcessData16Bit
}

func (x *Telegram) GetAddress() int32 {
	if x != nil {
		return x.Address
	}
	return 0
}

func (x *Telegram) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Telegram) GetFrameNr() uint64 {
	if x != nil {
		return x.FrameNr
	}
	return 0
}

type TelegramCollection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entry []*Telegram             `protobuf:"bytes,1,rep,name=entry,proto3" json:"entry,omitempty"`
	Line  TelegramCollection_Line `protobuf:"varint,2,opt,name=line,proto3,enum=mvbSniffer.TelegramCollection_Line" json:"line,omitempty"`
}

func (x *TelegramCollection) Reset() {
	*x = TelegramCollection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mvbSniffer_v1_telegram_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TelegramCollection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TelegramCollection) ProtoMessage() {}

func (x *TelegramCollection) ProtoReflect() protoreflect.Message {
	mi := &file_mvbSniffer_v1_telegram_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TelegramCollection.ProtoReflect.Descriptor instead.
func (*TelegramCollection) Descriptor() ([]byte, []int) {
	return file_mvbSniffer_v1_telegram_proto_rawDescGZIP(), []int{1}
}

func (x *TelegramCollection) GetEntry() []*Telegram {
	if x != nil {
		return x.Entry
	}
	return nil
}

func (x *TelegramCollection) GetLine() TelegramCollection_Line {
	if x != nil {
		return x.Line
	}
	return TelegramCollection_kA
}

var File_mvbSniffer_v1_telegram_proto protoreflect.FileDescriptor

var file_mvbSniffer_v1_telegram_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x6d, 0x76, 0x62, 0x53, 0x6e, 0x69, 0x66, 0x66, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f,
	0x74, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a,
	0x6d, 0x76, 0x62, 0x53, 0x6e, 0x69, 0x66, 0x66, 0x65, 0x72, 0x1a, 0x0f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x97, 0x05, 0x0a, 0x08,
	0x54, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x12, 0x33, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x76,
	0x62, 0x53, 0x6e, 0x69, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x30, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x6d,
	0x76, 0x62, 0x53, 0x6e, 0x69, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x72,
	0x61, 0x6d, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x2d, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e,
	0x6d, 0x76, 0x62, 0x53, 0x6e, 0x69, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x54, 0x65, 0x6c, 0x65, 0x67,
	0x72, 0x61, 0x6d, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x08,
	0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f, 0x6e, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07,
	0x66, 0x72, 0x61, 0x6d, 0x65, 0x4e, 0x72, 0x22, 0x65, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x0f, 0x0a, 0x0b, 0x6b, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x10,
	0x00, 0x12, 0x0d, 0x0a, 0x09, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x64, 0x4f, 0x75, 0x74, 0x10, 0x01,
	0x12, 0x0c, 0x0a, 0x08, 0x6b, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x02, 0x12, 0x1e,
	0x0a, 0x1a, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x46, 0x6f, 0x72, 0x55, 0x6e,
	0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x10, 0x03, 0x12, 0x0e,
	0x0a, 0x0a, 0x6b, 0x45, 0x72, 0x72, 0x6f, 0x6e, 0x65, 0x6f, 0x75, 0x73, 0x10, 0x04, 0x22, 0xc4,
	0x02, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x6b, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x44, 0x61, 0x74, 0x61, 0x31, 0x36, 0x42, 0x69, 0x74, 0x10, 0x00, 0x12, 0x15,
	0x0a, 0x11, 0x6b, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x44, 0x61, 0x74, 0x61, 0x33, 0x32,
	0x42, 0x69, 0x74, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x6b, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x44, 0x61, 0x74, 0x61, 0x36, 0x34, 0x42, 0x69, 0x74, 0x10, 0x02, 0x12, 0x16, 0x0a, 0x12,
	0x6b, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x44, 0x61, 0x74, 0x61, 0x31, 0x32, 0x38, 0x42,
	0x69, 0x74, 0x10, 0x03, 0x12, 0x16, 0x0a, 0x12, 0x6b, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x44, 0x61, 0x74, 0x61, 0x32, 0x35, 0x36, 0x42, 0x69, 0x74, 0x10, 0x04, 0x12, 0x0f, 0x0a, 0x0b,
	0x6b, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x5f, 0x31, 0x10, 0x05, 0x12, 0x0f, 0x0a,
	0x0b, 0x6b, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x5f, 0x32, 0x10, 0x06, 0x12, 0x0f,
	0x0a, 0x0b, 0x6b, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x5f, 0x33, 0x10, 0x07, 0x12,
	0x17, 0x0a, 0x13, 0x6b, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x10, 0x08, 0x12, 0x11, 0x0a, 0x0d, 0x6b, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x09, 0x12, 0x0f, 0x0a, 0x0b, 0x6b,
	0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x5f, 0x34, 0x10, 0x0a, 0x12, 0x0f, 0x0a, 0x0b,
	0x6b, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x5f, 0x35, 0x10, 0x0b, 0x12, 0x10, 0x0a,
	0x0c, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x10, 0x0c, 0x12,
	0x0f, 0x0a, 0x0b, 0x6b, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x0d,
	0x12, 0x10, 0x0a, 0x0c, 0x6b, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x10, 0x0e, 0x12, 0x11, 0x0a, 0x0d, 0x6b, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x10, 0x0f, 0x22, 0x91, 0x01, 0x0a, 0x12, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x72,
	0x61, 0x6d, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x05,
	0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x76,
	0x62, 0x53, 0x6e, 0x69, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61,
	0x6d, 0x52, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x37, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x6d, 0x76, 0x62, 0x53, 0x6e, 0x69, 0x66,
	0x66, 0x65, 0x72, 0x2e, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x69, 0x6e, 0x65, 0x52, 0x04, 0x6c, 0x69, 0x6e,
	0x65, 0x22, 0x16, 0x0a, 0x04, 0x4c, 0x69, 0x6e, 0x65, 0x12, 0x06, 0x0a, 0x02, 0x6b, 0x41, 0x10,
	0x00, 0x12, 0x06, 0x0a, 0x02, 0x6b, 0x42, 0x10, 0x01, 0x42, 0x0f, 0x5a, 0x0d, 0x6d, 0x76, 0x62,
	0x53, 0x6e, 0x69, 0x66, 0x66, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_mvbSniffer_v1_telegram_proto_rawDescOnce sync.Once
	file_mvbSniffer_v1_telegram_proto_rawDescData = file_mvbSniffer_v1_telegram_proto_rawDesc
)

func file_mvbSniffer_v1_telegram_proto_rawDescGZIP() []byte {
	file_mvbSniffer_v1_telegram_proto_rawDescOnce.Do(func() {
		file_mvbSniffer_v1_telegram_proto_rawDescData = protoimpl.X.CompressGZIP(file_mvbSniffer_v1_telegram_proto_rawDescData)
	})
	return file_mvbSniffer_v1_telegram_proto_rawDescData
}

var file_mvbSniffer_v1_telegram_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_mvbSniffer_v1_telegram_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_mvbSniffer_v1_telegram_proto_goTypes = []interface{}{
	(Telegram_State)(0),          // 0: mvbSniffer.Telegram.State
	(Telegram_Type)(0),           // 1: mvbSniffer.Telegram.Type
	(TelegramCollection_Line)(0), // 2: mvbSniffer.TelegramCollection.Line
	(*Telegram)(nil),             // 3: mvbSniffer.Telegram
	(*TelegramCollection)(nil),   // 4: mvbSniffer.TelegramCollection
	(*Timestamp)(nil),            // 5: mvbSniffer.Timestamp
}
var file_mvbSniffer_v1_telegram_proto_depIdxs = []int32{
	5, // 0: mvbSniffer.Telegram.timestamp:type_name -> mvbSniffer.Timestamp
	0, // 1: mvbSniffer.Telegram.state:type_name -> mvbSniffer.Telegram.State
	1, // 2: mvbSniffer.Telegram.type:type_name -> mvbSniffer.Telegram.Type
	3, // 3: mvbSniffer.TelegramCollection.entry:type_name -> mvbSniffer.Telegram
	2, // 4: mvbSniffer.TelegramCollection.line:type_name -> mvbSniffer.TelegramCollection.Line
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_mvbSniffer_v1_telegram_proto_init() }
func file_mvbSniffer_v1_telegram_proto_init() {
	if File_mvbSniffer_v1_telegram_proto != nil {
		return
	}
	file_timestamp_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_mvbSniffer_v1_telegram_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Telegram); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mvbSniffer_v1_telegram_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TelegramCollection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mvbSniffer_v1_telegram_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_mvbSniffer_v1_telegram_proto_goTypes,
		DependencyIndexes: file_mvbSniffer_v1_telegram_proto_depIdxs,
		EnumInfos:         file_mvbSniffer_v1_telegram_proto_enumTypes,
		MessageInfos:      file_mvbSniffer_v1_telegram_proto_msgTypes,
	}.Build()
	File_mvbSniffer_v1_telegram_proto = out.File
	file_mvbSniffer_v1_telegram_proto_rawDesc = nil
	file_mvbSniffer_v1_telegram_proto_goTypes = nil
	file_mvbSniffer_v1_telegram_proto_depIdxs = nil
}
